
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model CashierData
 * 
 */
export type CashierData = $Result.DefaultSelection<Prisma.$CashierDataPayload>
/**
 * Model DrugRevenueData
 * 
 */
export type DrugRevenueData = $Result.DefaultSelection<Prisma.$DrugRevenueDataPayload>
/**
 * Model PC_Bangluong
 * 
 */
export type PC_Bangluong = $Result.DefaultSelection<Prisma.$PC_BangluongPayload>
/**
 * Model PC_Bantin
 * 
 */
export type PC_Bantin = $Result.DefaultSelection<Prisma.$PC_BantinPayload>
/**
 * Model PC_Benhnhan
 * 
 */
export type PC_Benhnhan = $Result.DefaultSelection<Prisma.$PC_BenhnhanPayload>
/**
 * Model PC_Customer
 * 
 */
export type PC_Customer = $Result.DefaultSelection<Prisma.$PC_CustomerPayload>
/**
 * Model PC_HosoIVF
 * 
 */
export type PC_HosoIVF = $Result.DefaultSelection<Prisma.$PC_HosoIVFPayload>
/**
 * Model PC_Module
 * 
 */
export type PC_Module = $Result.DefaultSelection<Prisma.$PC_ModulePayload>
/**
 * Model PC_Module_NhomTK
 * 
 */
export type PC_Module_NhomTK = $Result.DefaultSelection<Prisma.$PC_Module_NhomTKPayload>
/**
 * Model PC_Nhanvien
 * 
 */
export type PC_Nhanvien = $Result.DefaultSelection<Prisma.$PC_NhanvienPayload>
/**
 * Model PC_Nhanvien_Media
 * 
 */
export type PC_Nhanvien_Media = $Result.DefaultSelection<Prisma.$PC_Nhanvien_MediaPayload>
/**
 * Model PC_NhomTaikhoan
 * 
 */
export type PC_NhomTaikhoan = $Result.DefaultSelection<Prisma.$PC_NhomTaikhoanPayload>
/**
 * Model PC_Phienban
 * 
 */
export type PC_Phienban = $Result.DefaultSelection<Prisma.$PC_PhienbanPayload>
/**
 * Model PC_Taikhoan
 * 
 */
export type PC_Taikhoan = $Result.DefaultSelection<Prisma.$PC_TaikhoanPayload>
/**
 * Model PC_Taikhoan_Bangluong
 * 
 */
export type PC_Taikhoan_Bangluong = $Result.DefaultSelection<Prisma.$PC_Taikhoan_BangluongPayload>
/**
 * Model PC_Thanhvien
 * 
 */
export type PC_Thanhvien = $Result.DefaultSelection<Prisma.$PC_ThanhvienPayload>
/**
 * Model PC_TheCapphat
 * 
 */
export type PC_TheCapphat = $Result.DefaultSelection<Prisma.$PC_TheCapphatPayload>
/**
 * Model tbl_Phishing
 * 
 */
export type tbl_Phishing = $Result.DefaultSelection<Prisma.$tbl_PhishingPayload>
/**
 * Model USER_PORTAL
 * 
 */
export type USER_PORTAL = $Result.DefaultSelection<Prisma.$USER_PORTALPayload>
/**
 * Model WS_DMChinhanh
 * 
 */
export type WS_DMChinhanh = $Result.DefaultSelection<Prisma.$WS_DMChinhanhPayload>
/**
 * Model WS_DMDonvi
 * 
 */
export type WS_DMDonvi = $Result.DefaultSelection<Prisma.$WS_DMDonviPayload>
/**
 * Model WS_DMKhoaPhong
 * 
 */
export type WS_DMKhoaPhong = $Result.DefaultSelection<Prisma.$WS_DMKhoaPhongPayload>
/**
 * Model WS_DMNhomTochuc
 * 
 */
export type WS_DMNhomTochuc = $Result.DefaultSelection<Prisma.$WS_DMNhomTochucPayload>
/**
 * Model WS_Log
 * 
 */
export type WS_Log = $Result.DefaultSelection<Prisma.$WS_LogPayload>
/**
 * Model WS_Taikhoan
 * 
 */
export type WS_Taikhoan = $Result.DefaultSelection<Prisma.$WS_TaikhoanPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more CashierData
 * const cashierData = await prisma.cashierData.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more CashierData
   * const cashierData = await prisma.cashierData.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.cashierData`: Exposes CRUD operations for the **CashierData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CashierData
    * const cashierData = await prisma.cashierData.findMany()
    * ```
    */
  get cashierData(): Prisma.CashierDataDelegate<ExtArgs>;

  /**
   * `prisma.drugRevenueData`: Exposes CRUD operations for the **DrugRevenueData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more DrugRevenueData
    * const drugRevenueData = await prisma.drugRevenueData.findMany()
    * ```
    */
  get drugRevenueData(): Prisma.DrugRevenueDataDelegate<ExtArgs>;

  /**
   * `prisma.pC_Bangluong`: Exposes CRUD operations for the **PC_Bangluong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Bangluongs
    * const pC_Bangluongs = await prisma.pC_Bangluong.findMany()
    * ```
    */
  get pC_Bangluong(): Prisma.PC_BangluongDelegate<ExtArgs>;

  /**
   * `prisma.pC_Bantin`: Exposes CRUD operations for the **PC_Bantin** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Bantins
    * const pC_Bantins = await prisma.pC_Bantin.findMany()
    * ```
    */
  get pC_Bantin(): Prisma.PC_BantinDelegate<ExtArgs>;

  /**
   * `prisma.pC_Benhnhan`: Exposes CRUD operations for the **PC_Benhnhan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Benhnhans
    * const pC_Benhnhans = await prisma.pC_Benhnhan.findMany()
    * ```
    */
  get pC_Benhnhan(): Prisma.PC_BenhnhanDelegate<ExtArgs>;

  /**
   * `prisma.pC_Customer`: Exposes CRUD operations for the **PC_Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Customers
    * const pC_Customers = await prisma.pC_Customer.findMany()
    * ```
    */
  get pC_Customer(): Prisma.PC_CustomerDelegate<ExtArgs>;

  /**
   * `prisma.pC_HosoIVF`: Exposes CRUD operations for the **PC_HosoIVF** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_HosoIVFS
    * const pC_HosoIVFS = await prisma.pC_HosoIVF.findMany()
    * ```
    */
  get pC_HosoIVF(): Prisma.PC_HosoIVFDelegate<ExtArgs>;

  /**
   * `prisma.pC_Module`: Exposes CRUD operations for the **PC_Module** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Modules
    * const pC_Modules = await prisma.pC_Module.findMany()
    * ```
    */
  get pC_Module(): Prisma.PC_ModuleDelegate<ExtArgs>;

  /**
   * `prisma.pC_Module_NhomTK`: Exposes CRUD operations for the **PC_Module_NhomTK** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Module_NhomTKS
    * const pC_Module_NhomTKS = await prisma.pC_Module_NhomTK.findMany()
    * ```
    */
  get pC_Module_NhomTK(): Prisma.PC_Module_NhomTKDelegate<ExtArgs>;

  /**
   * `prisma.pC_Nhanvien`: Exposes CRUD operations for the **PC_Nhanvien** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Nhanviens
    * const pC_Nhanviens = await prisma.pC_Nhanvien.findMany()
    * ```
    */
  get pC_Nhanvien(): Prisma.PC_NhanvienDelegate<ExtArgs>;

  /**
   * `prisma.pC_Nhanvien_Media`: Exposes CRUD operations for the **PC_Nhanvien_Media** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Nhanvien_Medias
    * const pC_Nhanvien_Medias = await prisma.pC_Nhanvien_Media.findMany()
    * ```
    */
  get pC_Nhanvien_Media(): Prisma.PC_Nhanvien_MediaDelegate<ExtArgs>;

  /**
   * `prisma.pC_NhomTaikhoan`: Exposes CRUD operations for the **PC_NhomTaikhoan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_NhomTaikhoans
    * const pC_NhomTaikhoans = await prisma.pC_NhomTaikhoan.findMany()
    * ```
    */
  get pC_NhomTaikhoan(): Prisma.PC_NhomTaikhoanDelegate<ExtArgs>;

  /**
   * `prisma.pC_Phienban`: Exposes CRUD operations for the **PC_Phienban** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Phienbans
    * const pC_Phienbans = await prisma.pC_Phienban.findMany()
    * ```
    */
  get pC_Phienban(): Prisma.PC_PhienbanDelegate<ExtArgs>;

  /**
   * `prisma.pC_Taikhoan`: Exposes CRUD operations for the **PC_Taikhoan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Taikhoans
    * const pC_Taikhoans = await prisma.pC_Taikhoan.findMany()
    * ```
    */
  get pC_Taikhoan(): Prisma.PC_TaikhoanDelegate<ExtArgs>;

  /**
   * `prisma.pC_Taikhoan_Bangluong`: Exposes CRUD operations for the **PC_Taikhoan_Bangluong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Taikhoan_Bangluongs
    * const pC_Taikhoan_Bangluongs = await prisma.pC_Taikhoan_Bangluong.findMany()
    * ```
    */
  get pC_Taikhoan_Bangluong(): Prisma.PC_Taikhoan_BangluongDelegate<ExtArgs>;

  /**
   * `prisma.pC_Thanhvien`: Exposes CRUD operations for the **PC_Thanhvien** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_Thanhviens
    * const pC_Thanhviens = await prisma.pC_Thanhvien.findMany()
    * ```
    */
  get pC_Thanhvien(): Prisma.PC_ThanhvienDelegate<ExtArgs>;

  /**
   * `prisma.pC_TheCapphat`: Exposes CRUD operations for the **PC_TheCapphat** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PC_TheCapphats
    * const pC_TheCapphats = await prisma.pC_TheCapphat.findMany()
    * ```
    */
  get pC_TheCapphat(): Prisma.PC_TheCapphatDelegate<ExtArgs>;

  /**
   * `prisma.tbl_Phishing`: Exposes CRUD operations for the **tbl_Phishing** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tbl_Phishings
    * const tbl_Phishings = await prisma.tbl_Phishing.findMany()
    * ```
    */
  get tbl_Phishing(): Prisma.tbl_PhishingDelegate<ExtArgs>;

  /**
   * `prisma.uSER_PORTAL`: Exposes CRUD operations for the **USER_PORTAL** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more USER_PORTALS
    * const uSER_PORTALS = await prisma.uSER_PORTAL.findMany()
    * ```
    */
  get uSER_PORTAL(): Prisma.USER_PORTALDelegate<ExtArgs>;

  /**
   * `prisma.wS_DMChinhanh`: Exposes CRUD operations for the **WS_DMChinhanh** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WS_DMChinhanhs
    * const wS_DMChinhanhs = await prisma.wS_DMChinhanh.findMany()
    * ```
    */
  get wS_DMChinhanh(): Prisma.WS_DMChinhanhDelegate<ExtArgs>;

  /**
   * `prisma.wS_DMDonvi`: Exposes CRUD operations for the **WS_DMDonvi** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WS_DMDonvis
    * const wS_DMDonvis = await prisma.wS_DMDonvi.findMany()
    * ```
    */
  get wS_DMDonvi(): Prisma.WS_DMDonviDelegate<ExtArgs>;

  /**
   * `prisma.wS_DMKhoaPhong`: Exposes CRUD operations for the **WS_DMKhoaPhong** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WS_DMKhoaPhongs
    * const wS_DMKhoaPhongs = await prisma.wS_DMKhoaPhong.findMany()
    * ```
    */
  get wS_DMKhoaPhong(): Prisma.WS_DMKhoaPhongDelegate<ExtArgs>;

  /**
   * `prisma.wS_DMNhomTochuc`: Exposes CRUD operations for the **WS_DMNhomTochuc** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WS_DMNhomTochucs
    * const wS_DMNhomTochucs = await prisma.wS_DMNhomTochuc.findMany()
    * ```
    */
  get wS_DMNhomTochuc(): Prisma.WS_DMNhomTochucDelegate<ExtArgs>;

  /**
   * `prisma.wS_Log`: Exposes CRUD operations for the **WS_Log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WS_Logs
    * const wS_Logs = await prisma.wS_Log.findMany()
    * ```
    */
  get wS_Log(): Prisma.WS_LogDelegate<ExtArgs>;

  /**
   * `prisma.wS_Taikhoan`: Exposes CRUD operations for the **WS_Taikhoan** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more WS_Taikhoans
    * const wS_Taikhoans = await prisma.wS_Taikhoan.findMany()
    * ```
    */
  get wS_Taikhoan(): Prisma.WS_TaikhoanDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    CashierData: 'CashierData',
    DrugRevenueData: 'DrugRevenueData',
    PC_Bangluong: 'PC_Bangluong',
    PC_Bantin: 'PC_Bantin',
    PC_Benhnhan: 'PC_Benhnhan',
    PC_Customer: 'PC_Customer',
    PC_HosoIVF: 'PC_HosoIVF',
    PC_Module: 'PC_Module',
    PC_Module_NhomTK: 'PC_Module_NhomTK',
    PC_Nhanvien: 'PC_Nhanvien',
    PC_Nhanvien_Media: 'PC_Nhanvien_Media',
    PC_NhomTaikhoan: 'PC_NhomTaikhoan',
    PC_Phienban: 'PC_Phienban',
    PC_Taikhoan: 'PC_Taikhoan',
    PC_Taikhoan_Bangluong: 'PC_Taikhoan_Bangluong',
    PC_Thanhvien: 'PC_Thanhvien',
    PC_TheCapphat: 'PC_TheCapphat',
    tbl_Phishing: 'tbl_Phishing',
    USER_PORTAL: 'USER_PORTAL',
    WS_DMChinhanh: 'WS_DMChinhanh',
    WS_DMDonvi: 'WS_DMDonvi',
    WS_DMKhoaPhong: 'WS_DMKhoaPhong',
    WS_DMNhomTochuc: 'WS_DMNhomTochuc',
    WS_Log: 'WS_Log',
    WS_Taikhoan: 'WS_Taikhoan'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "cashierData" | "drugRevenueData" | "pC_Bangluong" | "pC_Bantin" | "pC_Benhnhan" | "pC_Customer" | "pC_HosoIVF" | "pC_Module" | "pC_Module_NhomTK" | "pC_Nhanvien" | "pC_Nhanvien_Media" | "pC_NhomTaikhoan" | "pC_Phienban" | "pC_Taikhoan" | "pC_Taikhoan_Bangluong" | "pC_Thanhvien" | "pC_TheCapphat" | "tbl_Phishing" | "uSER_PORTAL" | "wS_DMChinhanh" | "wS_DMDonvi" | "wS_DMKhoaPhong" | "wS_DMNhomTochuc" | "wS_Log" | "wS_Taikhoan"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      CashierData: {
        payload: Prisma.$CashierDataPayload<ExtArgs>
        fields: Prisma.CashierDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CashierDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CashierDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>
          }
          findFirst: {
            args: Prisma.CashierDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CashierDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>
          }
          findMany: {
            args: Prisma.CashierDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>[]
          }
          create: {
            args: Prisma.CashierDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>
          }
          createMany: {
            args: Prisma.CashierDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CashierDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>
          }
          update: {
            args: Prisma.CashierDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>
          }
          deleteMany: {
            args: Prisma.CashierDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CashierDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CashierDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CashierDataPayload>
          }
          aggregate: {
            args: Prisma.CashierDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCashierData>
          }
          groupBy: {
            args: Prisma.CashierDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<CashierDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.CashierDataCountArgs<ExtArgs>
            result: $Utils.Optional<CashierDataCountAggregateOutputType> | number
          }
        }
      }
      DrugRevenueData: {
        payload: Prisma.$DrugRevenueDataPayload<ExtArgs>
        fields: Prisma.DrugRevenueDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DrugRevenueDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DrugRevenueDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>
          }
          findFirst: {
            args: Prisma.DrugRevenueDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DrugRevenueDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>
          }
          findMany: {
            args: Prisma.DrugRevenueDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>[]
          }
          create: {
            args: Prisma.DrugRevenueDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>
          }
          createMany: {
            args: Prisma.DrugRevenueDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.DrugRevenueDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>
          }
          update: {
            args: Prisma.DrugRevenueDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>
          }
          deleteMany: {
            args: Prisma.DrugRevenueDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DrugRevenueDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.DrugRevenueDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DrugRevenueDataPayload>
          }
          aggregate: {
            args: Prisma.DrugRevenueDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDrugRevenueData>
          }
          groupBy: {
            args: Prisma.DrugRevenueDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<DrugRevenueDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.DrugRevenueDataCountArgs<ExtArgs>
            result: $Utils.Optional<DrugRevenueDataCountAggregateOutputType> | number
          }
        }
      }
      PC_Bangluong: {
        payload: Prisma.$PC_BangluongPayload<ExtArgs>
        fields: Prisma.PC_BangluongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_BangluongFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_BangluongFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>
          }
          findFirst: {
            args: Prisma.PC_BangluongFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_BangluongFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>
          }
          findMany: {
            args: Prisma.PC_BangluongFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>[]
          }
          create: {
            args: Prisma.PC_BangluongCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>
          }
          createMany: {
            args: Prisma.PC_BangluongCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_BangluongDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>
          }
          update: {
            args: Prisma.PC_BangluongUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>
          }
          deleteMany: {
            args: Prisma.PC_BangluongDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_BangluongUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_BangluongUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BangluongPayload>
          }
          aggregate: {
            args: Prisma.PC_BangluongAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Bangluong>
          }
          groupBy: {
            args: Prisma.PC_BangluongGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_BangluongGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_BangluongCountArgs<ExtArgs>
            result: $Utils.Optional<PC_BangluongCountAggregateOutputType> | number
          }
        }
      }
      PC_Bantin: {
        payload: Prisma.$PC_BantinPayload<ExtArgs>
        fields: Prisma.PC_BantinFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_BantinFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_BantinFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>
          }
          findFirst: {
            args: Prisma.PC_BantinFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_BantinFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>
          }
          findMany: {
            args: Prisma.PC_BantinFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>[]
          }
          create: {
            args: Prisma.PC_BantinCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>
          }
          createMany: {
            args: Prisma.PC_BantinCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_BantinDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>
          }
          update: {
            args: Prisma.PC_BantinUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>
          }
          deleteMany: {
            args: Prisma.PC_BantinDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_BantinUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_BantinUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BantinPayload>
          }
          aggregate: {
            args: Prisma.PC_BantinAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Bantin>
          }
          groupBy: {
            args: Prisma.PC_BantinGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_BantinGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_BantinCountArgs<ExtArgs>
            result: $Utils.Optional<PC_BantinCountAggregateOutputType> | number
          }
        }
      }
      PC_Benhnhan: {
        payload: Prisma.$PC_BenhnhanPayload<ExtArgs>
        fields: Prisma.PC_BenhnhanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_BenhnhanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_BenhnhanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>
          }
          findFirst: {
            args: Prisma.PC_BenhnhanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_BenhnhanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>
          }
          findMany: {
            args: Prisma.PC_BenhnhanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>[]
          }
          create: {
            args: Prisma.PC_BenhnhanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>
          }
          createMany: {
            args: Prisma.PC_BenhnhanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_BenhnhanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>
          }
          update: {
            args: Prisma.PC_BenhnhanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>
          }
          deleteMany: {
            args: Prisma.PC_BenhnhanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_BenhnhanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_BenhnhanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_BenhnhanPayload>
          }
          aggregate: {
            args: Prisma.PC_BenhnhanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Benhnhan>
          }
          groupBy: {
            args: Prisma.PC_BenhnhanGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_BenhnhanGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_BenhnhanCountArgs<ExtArgs>
            result: $Utils.Optional<PC_BenhnhanCountAggregateOutputType> | number
          }
        }
      }
      PC_Customer: {
        payload: Prisma.$PC_CustomerPayload<ExtArgs>
        fields: Prisma.PC_CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>
          }
          findFirst: {
            args: Prisma.PC_CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>
          }
          findMany: {
            args: Prisma.PC_CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>[]
          }
          create: {
            args: Prisma.PC_CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>
          }
          createMany: {
            args: Prisma.PC_CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>
          }
          update: {
            args: Prisma.PC_CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>
          }
          deleteMany: {
            args: Prisma.PC_CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_CustomerPayload>
          }
          aggregate: {
            args: Prisma.PC_CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Customer>
          }
          groupBy: {
            args: Prisma.PC_CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<PC_CustomerCountAggregateOutputType> | number
          }
        }
      }
      PC_HosoIVF: {
        payload: Prisma.$PC_HosoIVFPayload<ExtArgs>
        fields: Prisma.PC_HosoIVFFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_HosoIVFFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_HosoIVFFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>
          }
          findFirst: {
            args: Prisma.PC_HosoIVFFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_HosoIVFFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>
          }
          findMany: {
            args: Prisma.PC_HosoIVFFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>[]
          }
          create: {
            args: Prisma.PC_HosoIVFCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>
          }
          createMany: {
            args: Prisma.PC_HosoIVFCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_HosoIVFDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>
          }
          update: {
            args: Prisma.PC_HosoIVFUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>
          }
          deleteMany: {
            args: Prisma.PC_HosoIVFDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_HosoIVFUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_HosoIVFUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_HosoIVFPayload>
          }
          aggregate: {
            args: Prisma.PC_HosoIVFAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_HosoIVF>
          }
          groupBy: {
            args: Prisma.PC_HosoIVFGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_HosoIVFGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_HosoIVFCountArgs<ExtArgs>
            result: $Utils.Optional<PC_HosoIVFCountAggregateOutputType> | number
          }
        }
      }
      PC_Module: {
        payload: Prisma.$PC_ModulePayload<ExtArgs>
        fields: Prisma.PC_ModuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_ModuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_ModuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>
          }
          findFirst: {
            args: Prisma.PC_ModuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_ModuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>
          }
          findMany: {
            args: Prisma.PC_ModuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>[]
          }
          create: {
            args: Prisma.PC_ModuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>
          }
          createMany: {
            args: Prisma.PC_ModuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_ModuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>
          }
          update: {
            args: Prisma.PC_ModuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>
          }
          deleteMany: {
            args: Prisma.PC_ModuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_ModuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_ModuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ModulePayload>
          }
          aggregate: {
            args: Prisma.PC_ModuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Module>
          }
          groupBy: {
            args: Prisma.PC_ModuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_ModuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_ModuleCountArgs<ExtArgs>
            result: $Utils.Optional<PC_ModuleCountAggregateOutputType> | number
          }
        }
      }
      PC_Module_NhomTK: {
        payload: Prisma.$PC_Module_NhomTKPayload<ExtArgs>
        fields: Prisma.PC_Module_NhomTKFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_Module_NhomTKFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_Module_NhomTKFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>
          }
          findFirst: {
            args: Prisma.PC_Module_NhomTKFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_Module_NhomTKFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>
          }
          findMany: {
            args: Prisma.PC_Module_NhomTKFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>[]
          }
          create: {
            args: Prisma.PC_Module_NhomTKCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>
          }
          createMany: {
            args: Prisma.PC_Module_NhomTKCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_Module_NhomTKDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>
          }
          update: {
            args: Prisma.PC_Module_NhomTKUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>
          }
          deleteMany: {
            args: Prisma.PC_Module_NhomTKDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_Module_NhomTKUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_Module_NhomTKUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Module_NhomTKPayload>
          }
          aggregate: {
            args: Prisma.PC_Module_NhomTKAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Module_NhomTK>
          }
          groupBy: {
            args: Prisma.PC_Module_NhomTKGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_Module_NhomTKGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_Module_NhomTKCountArgs<ExtArgs>
            result: $Utils.Optional<PC_Module_NhomTKCountAggregateOutputType> | number
          }
        }
      }
      PC_Nhanvien: {
        payload: Prisma.$PC_NhanvienPayload<ExtArgs>
        fields: Prisma.PC_NhanvienFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_NhanvienFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_NhanvienFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>
          }
          findFirst: {
            args: Prisma.PC_NhanvienFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_NhanvienFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>
          }
          findMany: {
            args: Prisma.PC_NhanvienFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>[]
          }
          create: {
            args: Prisma.PC_NhanvienCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>
          }
          createMany: {
            args: Prisma.PC_NhanvienCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_NhanvienDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>
          }
          update: {
            args: Prisma.PC_NhanvienUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>
          }
          deleteMany: {
            args: Prisma.PC_NhanvienDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_NhanvienUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_NhanvienUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhanvienPayload>
          }
          aggregate: {
            args: Prisma.PC_NhanvienAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Nhanvien>
          }
          groupBy: {
            args: Prisma.PC_NhanvienGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_NhanvienGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_NhanvienCountArgs<ExtArgs>
            result: $Utils.Optional<PC_NhanvienCountAggregateOutputType> | number
          }
        }
      }
      PC_Nhanvien_Media: {
        payload: Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>
        fields: Prisma.PC_Nhanvien_MediaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_Nhanvien_MediaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_Nhanvien_MediaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>
          }
          findFirst: {
            args: Prisma.PC_Nhanvien_MediaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_Nhanvien_MediaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>
          }
          findMany: {
            args: Prisma.PC_Nhanvien_MediaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>[]
          }
          create: {
            args: Prisma.PC_Nhanvien_MediaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>
          }
          createMany: {
            args: Prisma.PC_Nhanvien_MediaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_Nhanvien_MediaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>
          }
          update: {
            args: Prisma.PC_Nhanvien_MediaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>
          }
          deleteMany: {
            args: Prisma.PC_Nhanvien_MediaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_Nhanvien_MediaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_Nhanvien_MediaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Nhanvien_MediaPayload>
          }
          aggregate: {
            args: Prisma.PC_Nhanvien_MediaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Nhanvien_Media>
          }
          groupBy: {
            args: Prisma.PC_Nhanvien_MediaGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_Nhanvien_MediaGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_Nhanvien_MediaCountArgs<ExtArgs>
            result: $Utils.Optional<PC_Nhanvien_MediaCountAggregateOutputType> | number
          }
        }
      }
      PC_NhomTaikhoan: {
        payload: Prisma.$PC_NhomTaikhoanPayload<ExtArgs>
        fields: Prisma.PC_NhomTaikhoanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_NhomTaikhoanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_NhomTaikhoanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>
          }
          findFirst: {
            args: Prisma.PC_NhomTaikhoanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_NhomTaikhoanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>
          }
          findMany: {
            args: Prisma.PC_NhomTaikhoanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>[]
          }
          create: {
            args: Prisma.PC_NhomTaikhoanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>
          }
          createMany: {
            args: Prisma.PC_NhomTaikhoanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_NhomTaikhoanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>
          }
          update: {
            args: Prisma.PC_NhomTaikhoanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>
          }
          deleteMany: {
            args: Prisma.PC_NhomTaikhoanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_NhomTaikhoanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_NhomTaikhoanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_NhomTaikhoanPayload>
          }
          aggregate: {
            args: Prisma.PC_NhomTaikhoanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_NhomTaikhoan>
          }
          groupBy: {
            args: Prisma.PC_NhomTaikhoanGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_NhomTaikhoanGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_NhomTaikhoanCountArgs<ExtArgs>
            result: $Utils.Optional<PC_NhomTaikhoanCountAggregateOutputType> | number
          }
        }
      }
      PC_Phienban: {
        payload: Prisma.$PC_PhienbanPayload<ExtArgs>
        fields: Prisma.PC_PhienbanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_PhienbanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_PhienbanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>
          }
          findFirst: {
            args: Prisma.PC_PhienbanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_PhienbanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>
          }
          findMany: {
            args: Prisma.PC_PhienbanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>[]
          }
          create: {
            args: Prisma.PC_PhienbanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>
          }
          createMany: {
            args: Prisma.PC_PhienbanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_PhienbanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>
          }
          update: {
            args: Prisma.PC_PhienbanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>
          }
          deleteMany: {
            args: Prisma.PC_PhienbanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_PhienbanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_PhienbanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_PhienbanPayload>
          }
          aggregate: {
            args: Prisma.PC_PhienbanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Phienban>
          }
          groupBy: {
            args: Prisma.PC_PhienbanGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_PhienbanGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_PhienbanCountArgs<ExtArgs>
            result: $Utils.Optional<PC_PhienbanCountAggregateOutputType> | number
          }
        }
      }
      PC_Taikhoan: {
        payload: Prisma.$PC_TaikhoanPayload<ExtArgs>
        fields: Prisma.PC_TaikhoanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_TaikhoanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_TaikhoanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>
          }
          findFirst: {
            args: Prisma.PC_TaikhoanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_TaikhoanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>
          }
          findMany: {
            args: Prisma.PC_TaikhoanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>[]
          }
          create: {
            args: Prisma.PC_TaikhoanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>
          }
          createMany: {
            args: Prisma.PC_TaikhoanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_TaikhoanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>
          }
          update: {
            args: Prisma.PC_TaikhoanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>
          }
          deleteMany: {
            args: Prisma.PC_TaikhoanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_TaikhoanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_TaikhoanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TaikhoanPayload>
          }
          aggregate: {
            args: Prisma.PC_TaikhoanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Taikhoan>
          }
          groupBy: {
            args: Prisma.PC_TaikhoanGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_TaikhoanGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_TaikhoanCountArgs<ExtArgs>
            result: $Utils.Optional<PC_TaikhoanCountAggregateOutputType> | number
          }
        }
      }
      PC_Taikhoan_Bangluong: {
        payload: Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>
        fields: Prisma.PC_Taikhoan_BangluongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_Taikhoan_BangluongFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_Taikhoan_BangluongFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>
          }
          findFirst: {
            args: Prisma.PC_Taikhoan_BangluongFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_Taikhoan_BangluongFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>
          }
          findMany: {
            args: Prisma.PC_Taikhoan_BangluongFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>[]
          }
          create: {
            args: Prisma.PC_Taikhoan_BangluongCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>
          }
          createMany: {
            args: Prisma.PC_Taikhoan_BangluongCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_Taikhoan_BangluongDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>
          }
          update: {
            args: Prisma.PC_Taikhoan_BangluongUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>
          }
          deleteMany: {
            args: Prisma.PC_Taikhoan_BangluongDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_Taikhoan_BangluongUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_Taikhoan_BangluongUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_Taikhoan_BangluongPayload>
          }
          aggregate: {
            args: Prisma.PC_Taikhoan_BangluongAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Taikhoan_Bangluong>
          }
          groupBy: {
            args: Prisma.PC_Taikhoan_BangluongGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_Taikhoan_BangluongGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_Taikhoan_BangluongCountArgs<ExtArgs>
            result: $Utils.Optional<PC_Taikhoan_BangluongCountAggregateOutputType> | number
          }
        }
      }
      PC_Thanhvien: {
        payload: Prisma.$PC_ThanhvienPayload<ExtArgs>
        fields: Prisma.PC_ThanhvienFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_ThanhvienFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_ThanhvienFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>
          }
          findFirst: {
            args: Prisma.PC_ThanhvienFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_ThanhvienFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>
          }
          findMany: {
            args: Prisma.PC_ThanhvienFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>[]
          }
          create: {
            args: Prisma.PC_ThanhvienCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>
          }
          createMany: {
            args: Prisma.PC_ThanhvienCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_ThanhvienDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>
          }
          update: {
            args: Prisma.PC_ThanhvienUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>
          }
          deleteMany: {
            args: Prisma.PC_ThanhvienDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_ThanhvienUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_ThanhvienUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_ThanhvienPayload>
          }
          aggregate: {
            args: Prisma.PC_ThanhvienAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_Thanhvien>
          }
          groupBy: {
            args: Prisma.PC_ThanhvienGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_ThanhvienGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_ThanhvienCountArgs<ExtArgs>
            result: $Utils.Optional<PC_ThanhvienCountAggregateOutputType> | number
          }
        }
      }
      PC_TheCapphat: {
        payload: Prisma.$PC_TheCapphatPayload<ExtArgs>
        fields: Prisma.PC_TheCapphatFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PC_TheCapphatFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PC_TheCapphatFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>
          }
          findFirst: {
            args: Prisma.PC_TheCapphatFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PC_TheCapphatFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>
          }
          findMany: {
            args: Prisma.PC_TheCapphatFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>[]
          }
          create: {
            args: Prisma.PC_TheCapphatCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>
          }
          createMany: {
            args: Prisma.PC_TheCapphatCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PC_TheCapphatDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>
          }
          update: {
            args: Prisma.PC_TheCapphatUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>
          }
          deleteMany: {
            args: Prisma.PC_TheCapphatDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PC_TheCapphatUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PC_TheCapphatUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PC_TheCapphatPayload>
          }
          aggregate: {
            args: Prisma.PC_TheCapphatAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePC_TheCapphat>
          }
          groupBy: {
            args: Prisma.PC_TheCapphatGroupByArgs<ExtArgs>
            result: $Utils.Optional<PC_TheCapphatGroupByOutputType>[]
          }
          count: {
            args: Prisma.PC_TheCapphatCountArgs<ExtArgs>
            result: $Utils.Optional<PC_TheCapphatCountAggregateOutputType> | number
          }
        }
      }
      tbl_Phishing: {
        payload: Prisma.$tbl_PhishingPayload<ExtArgs>
        fields: Prisma.tbl_PhishingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tbl_PhishingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tbl_PhishingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>
          }
          findFirst: {
            args: Prisma.tbl_PhishingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tbl_PhishingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>
          }
          findMany: {
            args: Prisma.tbl_PhishingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>[]
          }
          create: {
            args: Prisma.tbl_PhishingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>
          }
          createMany: {
            args: Prisma.tbl_PhishingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.tbl_PhishingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>
          }
          update: {
            args: Prisma.tbl_PhishingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>
          }
          deleteMany: {
            args: Prisma.tbl_PhishingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tbl_PhishingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.tbl_PhishingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tbl_PhishingPayload>
          }
          aggregate: {
            args: Prisma.Tbl_PhishingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTbl_Phishing>
          }
          groupBy: {
            args: Prisma.tbl_PhishingGroupByArgs<ExtArgs>
            result: $Utils.Optional<Tbl_PhishingGroupByOutputType>[]
          }
          count: {
            args: Prisma.tbl_PhishingCountArgs<ExtArgs>
            result: $Utils.Optional<Tbl_PhishingCountAggregateOutputType> | number
          }
        }
      }
      USER_PORTAL: {
        payload: Prisma.$USER_PORTALPayload<ExtArgs>
        fields: Prisma.USER_PORTALFieldRefs
        operations: {
          findUnique: {
            args: Prisma.USER_PORTALFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.USER_PORTALFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>
          }
          findFirst: {
            args: Prisma.USER_PORTALFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.USER_PORTALFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>
          }
          findMany: {
            args: Prisma.USER_PORTALFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>[]
          }
          create: {
            args: Prisma.USER_PORTALCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>
          }
          createMany: {
            args: Prisma.USER_PORTALCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.USER_PORTALDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>
          }
          update: {
            args: Prisma.USER_PORTALUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>
          }
          deleteMany: {
            args: Prisma.USER_PORTALDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.USER_PORTALUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.USER_PORTALUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$USER_PORTALPayload>
          }
          aggregate: {
            args: Prisma.USER_PORTALAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUSER_PORTAL>
          }
          groupBy: {
            args: Prisma.USER_PORTALGroupByArgs<ExtArgs>
            result: $Utils.Optional<USER_PORTALGroupByOutputType>[]
          }
          count: {
            args: Prisma.USER_PORTALCountArgs<ExtArgs>
            result: $Utils.Optional<USER_PORTALCountAggregateOutputType> | number
          }
        }
      }
      WS_DMChinhanh: {
        payload: Prisma.$WS_DMChinhanhPayload<ExtArgs>
        fields: Prisma.WS_DMChinhanhFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WS_DMChinhanhFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WS_DMChinhanhFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>
          }
          findFirst: {
            args: Prisma.WS_DMChinhanhFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WS_DMChinhanhFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>
          }
          findMany: {
            args: Prisma.WS_DMChinhanhFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>[]
          }
          create: {
            args: Prisma.WS_DMChinhanhCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>
          }
          createMany: {
            args: Prisma.WS_DMChinhanhCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WS_DMChinhanhDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>
          }
          update: {
            args: Prisma.WS_DMChinhanhUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>
          }
          deleteMany: {
            args: Prisma.WS_DMChinhanhDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WS_DMChinhanhUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WS_DMChinhanhUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMChinhanhPayload>
          }
          aggregate: {
            args: Prisma.WS_DMChinhanhAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWS_DMChinhanh>
          }
          groupBy: {
            args: Prisma.WS_DMChinhanhGroupByArgs<ExtArgs>
            result: $Utils.Optional<WS_DMChinhanhGroupByOutputType>[]
          }
          count: {
            args: Prisma.WS_DMChinhanhCountArgs<ExtArgs>
            result: $Utils.Optional<WS_DMChinhanhCountAggregateOutputType> | number
          }
        }
      }
      WS_DMDonvi: {
        payload: Prisma.$WS_DMDonviPayload<ExtArgs>
        fields: Prisma.WS_DMDonviFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WS_DMDonviFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WS_DMDonviFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>
          }
          findFirst: {
            args: Prisma.WS_DMDonviFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WS_DMDonviFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>
          }
          findMany: {
            args: Prisma.WS_DMDonviFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>[]
          }
          create: {
            args: Prisma.WS_DMDonviCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>
          }
          createMany: {
            args: Prisma.WS_DMDonviCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WS_DMDonviDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>
          }
          update: {
            args: Prisma.WS_DMDonviUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>
          }
          deleteMany: {
            args: Prisma.WS_DMDonviDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WS_DMDonviUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WS_DMDonviUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMDonviPayload>
          }
          aggregate: {
            args: Prisma.WS_DMDonviAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWS_DMDonvi>
          }
          groupBy: {
            args: Prisma.WS_DMDonviGroupByArgs<ExtArgs>
            result: $Utils.Optional<WS_DMDonviGroupByOutputType>[]
          }
          count: {
            args: Prisma.WS_DMDonviCountArgs<ExtArgs>
            result: $Utils.Optional<WS_DMDonviCountAggregateOutputType> | number
          }
        }
      }
      WS_DMKhoaPhong: {
        payload: Prisma.$WS_DMKhoaPhongPayload<ExtArgs>
        fields: Prisma.WS_DMKhoaPhongFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WS_DMKhoaPhongFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WS_DMKhoaPhongFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>
          }
          findFirst: {
            args: Prisma.WS_DMKhoaPhongFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WS_DMKhoaPhongFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>
          }
          findMany: {
            args: Prisma.WS_DMKhoaPhongFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>[]
          }
          create: {
            args: Prisma.WS_DMKhoaPhongCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>
          }
          createMany: {
            args: Prisma.WS_DMKhoaPhongCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WS_DMKhoaPhongDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>
          }
          update: {
            args: Prisma.WS_DMKhoaPhongUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>
          }
          deleteMany: {
            args: Prisma.WS_DMKhoaPhongDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WS_DMKhoaPhongUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WS_DMKhoaPhongUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMKhoaPhongPayload>
          }
          aggregate: {
            args: Prisma.WS_DMKhoaPhongAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWS_DMKhoaPhong>
          }
          groupBy: {
            args: Prisma.WS_DMKhoaPhongGroupByArgs<ExtArgs>
            result: $Utils.Optional<WS_DMKhoaPhongGroupByOutputType>[]
          }
          count: {
            args: Prisma.WS_DMKhoaPhongCountArgs<ExtArgs>
            result: $Utils.Optional<WS_DMKhoaPhongCountAggregateOutputType> | number
          }
        }
      }
      WS_DMNhomTochuc: {
        payload: Prisma.$WS_DMNhomTochucPayload<ExtArgs>
        fields: Prisma.WS_DMNhomTochucFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WS_DMNhomTochucFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WS_DMNhomTochucFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>
          }
          findFirst: {
            args: Prisma.WS_DMNhomTochucFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WS_DMNhomTochucFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>
          }
          findMany: {
            args: Prisma.WS_DMNhomTochucFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>[]
          }
          create: {
            args: Prisma.WS_DMNhomTochucCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>
          }
          createMany: {
            args: Prisma.WS_DMNhomTochucCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WS_DMNhomTochucDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>
          }
          update: {
            args: Prisma.WS_DMNhomTochucUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>
          }
          deleteMany: {
            args: Prisma.WS_DMNhomTochucDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WS_DMNhomTochucUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WS_DMNhomTochucUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_DMNhomTochucPayload>
          }
          aggregate: {
            args: Prisma.WS_DMNhomTochucAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWS_DMNhomTochuc>
          }
          groupBy: {
            args: Prisma.WS_DMNhomTochucGroupByArgs<ExtArgs>
            result: $Utils.Optional<WS_DMNhomTochucGroupByOutputType>[]
          }
          count: {
            args: Prisma.WS_DMNhomTochucCountArgs<ExtArgs>
            result: $Utils.Optional<WS_DMNhomTochucCountAggregateOutputType> | number
          }
        }
      }
      WS_Log: {
        payload: Prisma.$WS_LogPayload<ExtArgs>
        fields: Prisma.WS_LogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WS_LogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WS_LogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>
          }
          findFirst: {
            args: Prisma.WS_LogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WS_LogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>
          }
          findMany: {
            args: Prisma.WS_LogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>[]
          }
          create: {
            args: Prisma.WS_LogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>
          }
          createMany: {
            args: Prisma.WS_LogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WS_LogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>
          }
          update: {
            args: Prisma.WS_LogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>
          }
          deleteMany: {
            args: Prisma.WS_LogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WS_LogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WS_LogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_LogPayload>
          }
          aggregate: {
            args: Prisma.WS_LogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWS_Log>
          }
          groupBy: {
            args: Prisma.WS_LogGroupByArgs<ExtArgs>
            result: $Utils.Optional<WS_LogGroupByOutputType>[]
          }
          count: {
            args: Prisma.WS_LogCountArgs<ExtArgs>
            result: $Utils.Optional<WS_LogCountAggregateOutputType> | number
          }
        }
      }
      WS_Taikhoan: {
        payload: Prisma.$WS_TaikhoanPayload<ExtArgs>
        fields: Prisma.WS_TaikhoanFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WS_TaikhoanFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WS_TaikhoanFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>
          }
          findFirst: {
            args: Prisma.WS_TaikhoanFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WS_TaikhoanFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>
          }
          findMany: {
            args: Prisma.WS_TaikhoanFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>[]
          }
          create: {
            args: Prisma.WS_TaikhoanCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>
          }
          createMany: {
            args: Prisma.WS_TaikhoanCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WS_TaikhoanDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>
          }
          update: {
            args: Prisma.WS_TaikhoanUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>
          }
          deleteMany: {
            args: Prisma.WS_TaikhoanDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WS_TaikhoanUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WS_TaikhoanUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WS_TaikhoanPayload>
          }
          aggregate: {
            args: Prisma.WS_TaikhoanAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWS_Taikhoan>
          }
          groupBy: {
            args: Prisma.WS_TaikhoanGroupByArgs<ExtArgs>
            result: $Utils.Optional<WS_TaikhoanGroupByOutputType>[]
          }
          count: {
            args: Prisma.WS_TaikhoanCountArgs<ExtArgs>
            result: $Utils.Optional<WS_TaikhoanCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model CashierData
   */

  export type AggregateCashierData = {
    _count: CashierDataCountAggregateOutputType | null
    _avg: CashierDataAvgAggregateOutputType | null
    _sum: CashierDataSumAggregateOutputType | null
    _min: CashierDataMinAggregateOutputType | null
    _max: CashierDataMaxAggregateOutputType | null
  }

  export type CashierDataAvgAggregateOutputType = {
    IdTiepNhan: number | null
    TienTamUng: number | null
    TUConLai: number | null
    IdChiTiet: number | null
    SoLuong: number | null
    DonGia: number | null
    GiaBHYT: number | null
    ThanhTien: number | null
    BHYTChi: number | null
    ThanhTienBHYT: number | null
    TongTien: number | null
    ChenhLech: number | null
    GiamGia: number | null
    TienGiam: number | null
    ThanhToan: number | null
    TienGuiMau: number | null
  }

  export type CashierDataSumAggregateOutputType = {
    IdTiepNhan: number | null
    TienTamUng: number | null
    TUConLai: number | null
    IdChiTiet: number | null
    SoLuong: number | null
    DonGia: number | null
    GiaBHYT: number | null
    ThanhTien: number | null
    BHYTChi: number | null
    ThanhTienBHYT: number | null
    TongTien: number | null
    ChenhLech: number | null
    GiamGia: number | null
    TienGiam: number | null
    ThanhToan: number | null
    TienGuiMau: number | null
  }

  export type CashierDataMinAggregateOutputType = {
    Id: string | null
    IdChiNhanh: string | null
    ChiNhanh: string | null
    IdPhieuThu: string | null
    IdNhanVien: string | null
    HoTenNhanVien: string | null
    NgayThu: Date | null
    IdBenhNhan: string | null
    HoTenBenhNhan: string | null
    NamSinh: string | null
    TinhThanh: string | null
    IdTiepNhan: number | null
    DoiTuong: string | null
    LoaiTiepNhan: string | null
    KhamBenhVe: boolean | null
    LoaiPhieu: string | null
    IdPCD: string | null
    TienTamUng: number | null
    TUConLai: number | null
    DenTu: string | null
    ChuyenKhoa: string | null
    IdChiTiet: number | null
    IdDichVu: string | null
    TenDichVu: string | null
    PhanLoai: string | null
    LoaiHang: string | null
    CoBHYT: boolean | null
    SoLuong: number | null
    DonVi: string | null
    DonGia: number | null
    GiaBHYT: number | null
    ThanhTien: number | null
    BHYTChi: number | null
    ThanhTienBHYT: number | null
    TongTien: number | null
    ChenhLech: number | null
    GiamGia: number | null
    TienGiam: number | null
    ThanhToan: number | null
    TienGuiMau: number | null
  }

  export type CashierDataMaxAggregateOutputType = {
    Id: string | null
    IdChiNhanh: string | null
    ChiNhanh: string | null
    IdPhieuThu: string | null
    IdNhanVien: string | null
    HoTenNhanVien: string | null
    NgayThu: Date | null
    IdBenhNhan: string | null
    HoTenBenhNhan: string | null
    NamSinh: string | null
    TinhThanh: string | null
    IdTiepNhan: number | null
    DoiTuong: string | null
    LoaiTiepNhan: string | null
    KhamBenhVe: boolean | null
    LoaiPhieu: string | null
    IdPCD: string | null
    TienTamUng: number | null
    TUConLai: number | null
    DenTu: string | null
    ChuyenKhoa: string | null
    IdChiTiet: number | null
    IdDichVu: string | null
    TenDichVu: string | null
    PhanLoai: string | null
    LoaiHang: string | null
    CoBHYT: boolean | null
    SoLuong: number | null
    DonVi: string | null
    DonGia: number | null
    GiaBHYT: number | null
    ThanhTien: number | null
    BHYTChi: number | null
    ThanhTienBHYT: number | null
    TongTien: number | null
    ChenhLech: number | null
    GiamGia: number | null
    TienGiam: number | null
    ThanhToan: number | null
    TienGuiMau: number | null
  }

  export type CashierDataCountAggregateOutputType = {
    Id: number
    IdChiNhanh: number
    ChiNhanh: number
    IdPhieuThu: number
    IdNhanVien: number
    HoTenNhanVien: number
    NgayThu: number
    IdBenhNhan: number
    HoTenBenhNhan: number
    NamSinh: number
    TinhThanh: number
    IdTiepNhan: number
    DoiTuong: number
    LoaiTiepNhan: number
    KhamBenhVe: number
    LoaiPhieu: number
    IdPCD: number
    TienTamUng: number
    TUConLai: number
    DenTu: number
    ChuyenKhoa: number
    IdChiTiet: number
    IdDichVu: number
    TenDichVu: number
    PhanLoai: number
    LoaiHang: number
    CoBHYT: number
    SoLuong: number
    DonVi: number
    DonGia: number
    GiaBHYT: number
    ThanhTien: number
    BHYTChi: number
    ThanhTienBHYT: number
    TongTien: number
    ChenhLech: number
    GiamGia: number
    TienGiam: number
    ThanhToan: number
    TienGuiMau: number
    _all: number
  }


  export type CashierDataAvgAggregateInputType = {
    IdTiepNhan?: true
    TienTamUng?: true
    TUConLai?: true
    IdChiTiet?: true
    SoLuong?: true
    DonGia?: true
    GiaBHYT?: true
    ThanhTien?: true
    BHYTChi?: true
    ThanhTienBHYT?: true
    TongTien?: true
    ChenhLech?: true
    GiamGia?: true
    TienGiam?: true
    ThanhToan?: true
    TienGuiMau?: true
  }

  export type CashierDataSumAggregateInputType = {
    IdTiepNhan?: true
    TienTamUng?: true
    TUConLai?: true
    IdChiTiet?: true
    SoLuong?: true
    DonGia?: true
    GiaBHYT?: true
    ThanhTien?: true
    BHYTChi?: true
    ThanhTienBHYT?: true
    TongTien?: true
    ChenhLech?: true
    GiamGia?: true
    TienGiam?: true
    ThanhToan?: true
    TienGuiMau?: true
  }

  export type CashierDataMinAggregateInputType = {
    Id?: true
    IdChiNhanh?: true
    ChiNhanh?: true
    IdPhieuThu?: true
    IdNhanVien?: true
    HoTenNhanVien?: true
    NgayThu?: true
    IdBenhNhan?: true
    HoTenBenhNhan?: true
    NamSinh?: true
    TinhThanh?: true
    IdTiepNhan?: true
    DoiTuong?: true
    LoaiTiepNhan?: true
    KhamBenhVe?: true
    LoaiPhieu?: true
    IdPCD?: true
    TienTamUng?: true
    TUConLai?: true
    DenTu?: true
    ChuyenKhoa?: true
    IdChiTiet?: true
    IdDichVu?: true
    TenDichVu?: true
    PhanLoai?: true
    LoaiHang?: true
    CoBHYT?: true
    SoLuong?: true
    DonVi?: true
    DonGia?: true
    GiaBHYT?: true
    ThanhTien?: true
    BHYTChi?: true
    ThanhTienBHYT?: true
    TongTien?: true
    ChenhLech?: true
    GiamGia?: true
    TienGiam?: true
    ThanhToan?: true
    TienGuiMau?: true
  }

  export type CashierDataMaxAggregateInputType = {
    Id?: true
    IdChiNhanh?: true
    ChiNhanh?: true
    IdPhieuThu?: true
    IdNhanVien?: true
    HoTenNhanVien?: true
    NgayThu?: true
    IdBenhNhan?: true
    HoTenBenhNhan?: true
    NamSinh?: true
    TinhThanh?: true
    IdTiepNhan?: true
    DoiTuong?: true
    LoaiTiepNhan?: true
    KhamBenhVe?: true
    LoaiPhieu?: true
    IdPCD?: true
    TienTamUng?: true
    TUConLai?: true
    DenTu?: true
    ChuyenKhoa?: true
    IdChiTiet?: true
    IdDichVu?: true
    TenDichVu?: true
    PhanLoai?: true
    LoaiHang?: true
    CoBHYT?: true
    SoLuong?: true
    DonVi?: true
    DonGia?: true
    GiaBHYT?: true
    ThanhTien?: true
    BHYTChi?: true
    ThanhTienBHYT?: true
    TongTien?: true
    ChenhLech?: true
    GiamGia?: true
    TienGiam?: true
    ThanhToan?: true
    TienGuiMau?: true
  }

  export type CashierDataCountAggregateInputType = {
    Id?: true
    IdChiNhanh?: true
    ChiNhanh?: true
    IdPhieuThu?: true
    IdNhanVien?: true
    HoTenNhanVien?: true
    NgayThu?: true
    IdBenhNhan?: true
    HoTenBenhNhan?: true
    NamSinh?: true
    TinhThanh?: true
    IdTiepNhan?: true
    DoiTuong?: true
    LoaiTiepNhan?: true
    KhamBenhVe?: true
    LoaiPhieu?: true
    IdPCD?: true
    TienTamUng?: true
    TUConLai?: true
    DenTu?: true
    ChuyenKhoa?: true
    IdChiTiet?: true
    IdDichVu?: true
    TenDichVu?: true
    PhanLoai?: true
    LoaiHang?: true
    CoBHYT?: true
    SoLuong?: true
    DonVi?: true
    DonGia?: true
    GiaBHYT?: true
    ThanhTien?: true
    BHYTChi?: true
    ThanhTienBHYT?: true
    TongTien?: true
    ChenhLech?: true
    GiamGia?: true
    TienGiam?: true
    ThanhToan?: true
    TienGuiMau?: true
    _all?: true
  }

  export type CashierDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CashierData to aggregate.
     */
    where?: CashierDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CashierData to fetch.
     */
    orderBy?: CashierDataOrderByWithRelationInput | CashierDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CashierDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CashierData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CashierData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CashierData
    **/
    _count?: true | CashierDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CashierDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CashierDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CashierDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CashierDataMaxAggregateInputType
  }

  export type GetCashierDataAggregateType<T extends CashierDataAggregateArgs> = {
        [P in keyof T & keyof AggregateCashierData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCashierData[P]>
      : GetScalarType<T[P], AggregateCashierData[P]>
  }




  export type CashierDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CashierDataWhereInput
    orderBy?: CashierDataOrderByWithAggregationInput | CashierDataOrderByWithAggregationInput[]
    by: CashierDataScalarFieldEnum[] | CashierDataScalarFieldEnum
    having?: CashierDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CashierDataCountAggregateInputType | true
    _avg?: CashierDataAvgAggregateInputType
    _sum?: CashierDataSumAggregateInputType
    _min?: CashierDataMinAggregateInputType
    _max?: CashierDataMaxAggregateInputType
  }

  export type CashierDataGroupByOutputType = {
    Id: string
    IdChiNhanh: string | null
    ChiNhanh: string | null
    IdPhieuThu: string | null
    IdNhanVien: string | null
    HoTenNhanVien: string | null
    NgayThu: Date | null
    IdBenhNhan: string | null
    HoTenBenhNhan: string | null
    NamSinh: string | null
    TinhThanh: string | null
    IdTiepNhan: number | null
    DoiTuong: string | null
    LoaiTiepNhan: string | null
    KhamBenhVe: boolean | null
    LoaiPhieu: string | null
    IdPCD: string | null
    TienTamUng: number | null
    TUConLai: number | null
    DenTu: string | null
    ChuyenKhoa: string | null
    IdChiTiet: number | null
    IdDichVu: string | null
    TenDichVu: string | null
    PhanLoai: string | null
    LoaiHang: string | null
    CoBHYT: boolean | null
    SoLuong: number | null
    DonVi: string | null
    DonGia: number | null
    GiaBHYT: number | null
    ThanhTien: number | null
    BHYTChi: number | null
    ThanhTienBHYT: number | null
    TongTien: number | null
    ChenhLech: number | null
    GiamGia: number | null
    TienGiam: number | null
    ThanhToan: number | null
    TienGuiMau: number | null
    _count: CashierDataCountAggregateOutputType | null
    _avg: CashierDataAvgAggregateOutputType | null
    _sum: CashierDataSumAggregateOutputType | null
    _min: CashierDataMinAggregateOutputType | null
    _max: CashierDataMaxAggregateOutputType | null
  }

  type GetCashierDataGroupByPayload<T extends CashierDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CashierDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CashierDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CashierDataGroupByOutputType[P]>
            : GetScalarType<T[P], CashierDataGroupByOutputType[P]>
        }
      >
    >


  export type CashierDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IdChiNhanh?: boolean
    ChiNhanh?: boolean
    IdPhieuThu?: boolean
    IdNhanVien?: boolean
    HoTenNhanVien?: boolean
    NgayThu?: boolean
    IdBenhNhan?: boolean
    HoTenBenhNhan?: boolean
    NamSinh?: boolean
    TinhThanh?: boolean
    IdTiepNhan?: boolean
    DoiTuong?: boolean
    LoaiTiepNhan?: boolean
    KhamBenhVe?: boolean
    LoaiPhieu?: boolean
    IdPCD?: boolean
    TienTamUng?: boolean
    TUConLai?: boolean
    DenTu?: boolean
    ChuyenKhoa?: boolean
    IdChiTiet?: boolean
    IdDichVu?: boolean
    TenDichVu?: boolean
    PhanLoai?: boolean
    LoaiHang?: boolean
    CoBHYT?: boolean
    SoLuong?: boolean
    DonVi?: boolean
    DonGia?: boolean
    GiaBHYT?: boolean
    ThanhTien?: boolean
    BHYTChi?: boolean
    ThanhTienBHYT?: boolean
    TongTien?: boolean
    ChenhLech?: boolean
    GiamGia?: boolean
    TienGiam?: boolean
    ThanhToan?: boolean
    TienGuiMau?: boolean
  }, ExtArgs["result"]["cashierData"]>


  export type CashierDataSelectScalar = {
    Id?: boolean
    IdChiNhanh?: boolean
    ChiNhanh?: boolean
    IdPhieuThu?: boolean
    IdNhanVien?: boolean
    HoTenNhanVien?: boolean
    NgayThu?: boolean
    IdBenhNhan?: boolean
    HoTenBenhNhan?: boolean
    NamSinh?: boolean
    TinhThanh?: boolean
    IdTiepNhan?: boolean
    DoiTuong?: boolean
    LoaiTiepNhan?: boolean
    KhamBenhVe?: boolean
    LoaiPhieu?: boolean
    IdPCD?: boolean
    TienTamUng?: boolean
    TUConLai?: boolean
    DenTu?: boolean
    ChuyenKhoa?: boolean
    IdChiTiet?: boolean
    IdDichVu?: boolean
    TenDichVu?: boolean
    PhanLoai?: boolean
    LoaiHang?: boolean
    CoBHYT?: boolean
    SoLuong?: boolean
    DonVi?: boolean
    DonGia?: boolean
    GiaBHYT?: boolean
    ThanhTien?: boolean
    BHYTChi?: boolean
    ThanhTienBHYT?: boolean
    TongTien?: boolean
    ChenhLech?: boolean
    GiamGia?: boolean
    TienGiam?: boolean
    ThanhToan?: boolean
    TienGuiMau?: boolean
  }


  export type $CashierDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CashierData"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      IdChiNhanh: string | null
      ChiNhanh: string | null
      IdPhieuThu: string | null
      IdNhanVien: string | null
      HoTenNhanVien: string | null
      NgayThu: Date | null
      IdBenhNhan: string | null
      HoTenBenhNhan: string | null
      NamSinh: string | null
      TinhThanh: string | null
      IdTiepNhan: number | null
      DoiTuong: string | null
      LoaiTiepNhan: string | null
      KhamBenhVe: boolean | null
      LoaiPhieu: string | null
      IdPCD: string | null
      TienTamUng: number | null
      TUConLai: number | null
      DenTu: string | null
      ChuyenKhoa: string | null
      IdChiTiet: number | null
      IdDichVu: string | null
      TenDichVu: string | null
      PhanLoai: string | null
      LoaiHang: string | null
      CoBHYT: boolean | null
      SoLuong: number | null
      DonVi: string | null
      DonGia: number | null
      GiaBHYT: number | null
      ThanhTien: number | null
      BHYTChi: number | null
      ThanhTienBHYT: number | null
      TongTien: number | null
      ChenhLech: number | null
      GiamGia: number | null
      TienGiam: number | null
      ThanhToan: number | null
      TienGuiMau: number | null
    }, ExtArgs["result"]["cashierData"]>
    composites: {}
  }

  type CashierDataGetPayload<S extends boolean | null | undefined | CashierDataDefaultArgs> = $Result.GetResult<Prisma.$CashierDataPayload, S>

  type CashierDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CashierDataFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CashierDataCountAggregateInputType | true
    }

  export interface CashierDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CashierData'], meta: { name: 'CashierData' } }
    /**
     * Find zero or one CashierData that matches the filter.
     * @param {CashierDataFindUniqueArgs} args - Arguments to find a CashierData
     * @example
     * // Get one CashierData
     * const cashierData = await prisma.cashierData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CashierDataFindUniqueArgs>(args: SelectSubset<T, CashierDataFindUniqueArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CashierData that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CashierDataFindUniqueOrThrowArgs} args - Arguments to find a CashierData
     * @example
     * // Get one CashierData
     * const cashierData = await prisma.cashierData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CashierDataFindUniqueOrThrowArgs>(args: SelectSubset<T, CashierDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CashierData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataFindFirstArgs} args - Arguments to find a CashierData
     * @example
     * // Get one CashierData
     * const cashierData = await prisma.cashierData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CashierDataFindFirstArgs>(args?: SelectSubset<T, CashierDataFindFirstArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CashierData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataFindFirstOrThrowArgs} args - Arguments to find a CashierData
     * @example
     * // Get one CashierData
     * const cashierData = await prisma.cashierData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CashierDataFindFirstOrThrowArgs>(args?: SelectSubset<T, CashierDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CashierData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CashierData
     * const cashierData = await prisma.cashierData.findMany()
     * 
     * // Get first 10 CashierData
     * const cashierData = await prisma.cashierData.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const cashierDataWithIdOnly = await prisma.cashierData.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends CashierDataFindManyArgs>(args?: SelectSubset<T, CashierDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CashierData.
     * @param {CashierDataCreateArgs} args - Arguments to create a CashierData.
     * @example
     * // Create one CashierData
     * const CashierData = await prisma.cashierData.create({
     *   data: {
     *     // ... data to create a CashierData
     *   }
     * })
     * 
     */
    create<T extends CashierDataCreateArgs>(args: SelectSubset<T, CashierDataCreateArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CashierData.
     * @param {CashierDataCreateManyArgs} args - Arguments to create many CashierData.
     * @example
     * // Create many CashierData
     * const cashierData = await prisma.cashierData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CashierDataCreateManyArgs>(args?: SelectSubset<T, CashierDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CashierData.
     * @param {CashierDataDeleteArgs} args - Arguments to delete one CashierData.
     * @example
     * // Delete one CashierData
     * const CashierData = await prisma.cashierData.delete({
     *   where: {
     *     // ... filter to delete one CashierData
     *   }
     * })
     * 
     */
    delete<T extends CashierDataDeleteArgs>(args: SelectSubset<T, CashierDataDeleteArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CashierData.
     * @param {CashierDataUpdateArgs} args - Arguments to update one CashierData.
     * @example
     * // Update one CashierData
     * const cashierData = await prisma.cashierData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CashierDataUpdateArgs>(args: SelectSubset<T, CashierDataUpdateArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CashierData.
     * @param {CashierDataDeleteManyArgs} args - Arguments to filter CashierData to delete.
     * @example
     * // Delete a few CashierData
     * const { count } = await prisma.cashierData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CashierDataDeleteManyArgs>(args?: SelectSubset<T, CashierDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CashierData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CashierData
     * const cashierData = await prisma.cashierData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CashierDataUpdateManyArgs>(args: SelectSubset<T, CashierDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CashierData.
     * @param {CashierDataUpsertArgs} args - Arguments to update or create a CashierData.
     * @example
     * // Update or create a CashierData
     * const cashierData = await prisma.cashierData.upsert({
     *   create: {
     *     // ... data to create a CashierData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CashierData we want to update
     *   }
     * })
     */
    upsert<T extends CashierDataUpsertArgs>(args: SelectSubset<T, CashierDataUpsertArgs<ExtArgs>>): Prisma__CashierDataClient<$Result.GetResult<Prisma.$CashierDataPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CashierData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataCountArgs} args - Arguments to filter CashierData to count.
     * @example
     * // Count the number of CashierData
     * const count = await prisma.cashierData.count({
     *   where: {
     *     // ... the filter for the CashierData we want to count
     *   }
     * })
    **/
    count<T extends CashierDataCountArgs>(
      args?: Subset<T, CashierDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CashierDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CashierData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CashierDataAggregateArgs>(args: Subset<T, CashierDataAggregateArgs>): Prisma.PrismaPromise<GetCashierDataAggregateType<T>>

    /**
     * Group by CashierData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CashierDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CashierDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CashierDataGroupByArgs['orderBy'] }
        : { orderBy?: CashierDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CashierDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCashierDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CashierData model
   */
  readonly fields: CashierDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CashierData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CashierDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CashierData model
   */ 
  interface CashierDataFieldRefs {
    readonly Id: FieldRef<"CashierData", 'String'>
    readonly IdChiNhanh: FieldRef<"CashierData", 'String'>
    readonly ChiNhanh: FieldRef<"CashierData", 'String'>
    readonly IdPhieuThu: FieldRef<"CashierData", 'String'>
    readonly IdNhanVien: FieldRef<"CashierData", 'String'>
    readonly HoTenNhanVien: FieldRef<"CashierData", 'String'>
    readonly NgayThu: FieldRef<"CashierData", 'DateTime'>
    readonly IdBenhNhan: FieldRef<"CashierData", 'String'>
    readonly HoTenBenhNhan: FieldRef<"CashierData", 'String'>
    readonly NamSinh: FieldRef<"CashierData", 'String'>
    readonly TinhThanh: FieldRef<"CashierData", 'String'>
    readonly IdTiepNhan: FieldRef<"CashierData", 'Int'>
    readonly DoiTuong: FieldRef<"CashierData", 'String'>
    readonly LoaiTiepNhan: FieldRef<"CashierData", 'String'>
    readonly KhamBenhVe: FieldRef<"CashierData", 'Boolean'>
    readonly LoaiPhieu: FieldRef<"CashierData", 'String'>
    readonly IdPCD: FieldRef<"CashierData", 'String'>
    readonly TienTamUng: FieldRef<"CashierData", 'Float'>
    readonly TUConLai: FieldRef<"CashierData", 'Float'>
    readonly DenTu: FieldRef<"CashierData", 'String'>
    readonly ChuyenKhoa: FieldRef<"CashierData", 'String'>
    readonly IdChiTiet: FieldRef<"CashierData", 'Int'>
    readonly IdDichVu: FieldRef<"CashierData", 'String'>
    readonly TenDichVu: FieldRef<"CashierData", 'String'>
    readonly PhanLoai: FieldRef<"CashierData", 'String'>
    readonly LoaiHang: FieldRef<"CashierData", 'String'>
    readonly CoBHYT: FieldRef<"CashierData", 'Boolean'>
    readonly SoLuong: FieldRef<"CashierData", 'Float'>
    readonly DonVi: FieldRef<"CashierData", 'String'>
    readonly DonGia: FieldRef<"CashierData", 'Float'>
    readonly GiaBHYT: FieldRef<"CashierData", 'Float'>
    readonly ThanhTien: FieldRef<"CashierData", 'Float'>
    readonly BHYTChi: FieldRef<"CashierData", 'Float'>
    readonly ThanhTienBHYT: FieldRef<"CashierData", 'Float'>
    readonly TongTien: FieldRef<"CashierData", 'Float'>
    readonly ChenhLech: FieldRef<"CashierData", 'Float'>
    readonly GiamGia: FieldRef<"CashierData", 'Float'>
    readonly TienGiam: FieldRef<"CashierData", 'Float'>
    readonly ThanhToan: FieldRef<"CashierData", 'Float'>
    readonly TienGuiMau: FieldRef<"CashierData", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * CashierData findUnique
   */
  export type CashierDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * Filter, which CashierData to fetch.
     */
    where: CashierDataWhereUniqueInput
  }

  /**
   * CashierData findUniqueOrThrow
   */
  export type CashierDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * Filter, which CashierData to fetch.
     */
    where: CashierDataWhereUniqueInput
  }

  /**
   * CashierData findFirst
   */
  export type CashierDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * Filter, which CashierData to fetch.
     */
    where?: CashierDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CashierData to fetch.
     */
    orderBy?: CashierDataOrderByWithRelationInput | CashierDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CashierData.
     */
    cursor?: CashierDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CashierData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CashierData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CashierData.
     */
    distinct?: CashierDataScalarFieldEnum | CashierDataScalarFieldEnum[]
  }

  /**
   * CashierData findFirstOrThrow
   */
  export type CashierDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * Filter, which CashierData to fetch.
     */
    where?: CashierDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CashierData to fetch.
     */
    orderBy?: CashierDataOrderByWithRelationInput | CashierDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CashierData.
     */
    cursor?: CashierDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CashierData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CashierData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CashierData.
     */
    distinct?: CashierDataScalarFieldEnum | CashierDataScalarFieldEnum[]
  }

  /**
   * CashierData findMany
   */
  export type CashierDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * Filter, which CashierData to fetch.
     */
    where?: CashierDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CashierData to fetch.
     */
    orderBy?: CashierDataOrderByWithRelationInput | CashierDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CashierData.
     */
    cursor?: CashierDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CashierData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CashierData.
     */
    skip?: number
    distinct?: CashierDataScalarFieldEnum | CashierDataScalarFieldEnum[]
  }

  /**
   * CashierData create
   */
  export type CashierDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * The data needed to create a CashierData.
     */
    data: XOR<CashierDataCreateInput, CashierDataUncheckedCreateInput>
  }

  /**
   * CashierData createMany
   */
  export type CashierDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CashierData.
     */
    data: CashierDataCreateManyInput | CashierDataCreateManyInput[]
  }

  /**
   * CashierData update
   */
  export type CashierDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * The data needed to update a CashierData.
     */
    data: XOR<CashierDataUpdateInput, CashierDataUncheckedUpdateInput>
    /**
     * Choose, which CashierData to update.
     */
    where: CashierDataWhereUniqueInput
  }

  /**
   * CashierData updateMany
   */
  export type CashierDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CashierData.
     */
    data: XOR<CashierDataUpdateManyMutationInput, CashierDataUncheckedUpdateManyInput>
    /**
     * Filter which CashierData to update
     */
    where?: CashierDataWhereInput
  }

  /**
   * CashierData upsert
   */
  export type CashierDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * The filter to search for the CashierData to update in case it exists.
     */
    where: CashierDataWhereUniqueInput
    /**
     * In case the CashierData found by the `where` argument doesn't exist, create a new CashierData with this data.
     */
    create: XOR<CashierDataCreateInput, CashierDataUncheckedCreateInput>
    /**
     * In case the CashierData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CashierDataUpdateInput, CashierDataUncheckedUpdateInput>
  }

  /**
   * CashierData delete
   */
  export type CashierDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
    /**
     * Filter which CashierData to delete.
     */
    where: CashierDataWhereUniqueInput
  }

  /**
   * CashierData deleteMany
   */
  export type CashierDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CashierData to delete
     */
    where?: CashierDataWhereInput
  }

  /**
   * CashierData without action
   */
  export type CashierDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CashierData
     */
    select?: CashierDataSelect<ExtArgs> | null
  }


  /**
   * Model DrugRevenueData
   */

  export type AggregateDrugRevenueData = {
    _count: DrugRevenueDataCountAggregateOutputType | null
    _avg: DrugRevenueDataAvgAggregateOutputType | null
    _sum: DrugRevenueDataSumAggregateOutputType | null
    _min: DrugRevenueDataMinAggregateOutputType | null
    _max: DrugRevenueDataMaxAggregateOutputType | null
  }

  export type DrugRevenueDataAvgAggregateOutputType = {
    TongTien: number | null
    ChietKhau: number | null
    TienTruocThue: number | null
    ThanhTien: number | null
  }

  export type DrugRevenueDataSumAggregateOutputType = {
    TongTien: number | null
    ChietKhau: number | null
    TienTruocThue: number | null
    ThanhTien: number | null
  }

  export type DrugRevenueDataMinAggregateOutputType = {
    Id: string | null
    IdChiNhanh: string | null
    ChiNhanh: string | null
    IdXuatKho: string | null
    IdToaThuoc: string | null
    IdNhanVien: string | null
    HoTenNhanVien: string | null
    IdPhongKham: string | null
    TenPhongKham: string | null
    IdBenhNhan: string | null
    HoTenBenhNhan: string | null
    DoiTuong: string | null
    NgayXuat: Date | null
    LoaiPhieu: string | null
    MaNghiepVu: string | null
    IdKho: string | null
    TenKho: string | null
    TongTien: number | null
    ChietKhau: number | null
    TienTruocThue: number | null
    ThanhTien: number | null
  }

  export type DrugRevenueDataMaxAggregateOutputType = {
    Id: string | null
    IdChiNhanh: string | null
    ChiNhanh: string | null
    IdXuatKho: string | null
    IdToaThuoc: string | null
    IdNhanVien: string | null
    HoTenNhanVien: string | null
    IdPhongKham: string | null
    TenPhongKham: string | null
    IdBenhNhan: string | null
    HoTenBenhNhan: string | null
    DoiTuong: string | null
    NgayXuat: Date | null
    LoaiPhieu: string | null
    MaNghiepVu: string | null
    IdKho: string | null
    TenKho: string | null
    TongTien: number | null
    ChietKhau: number | null
    TienTruocThue: number | null
    ThanhTien: number | null
  }

  export type DrugRevenueDataCountAggregateOutputType = {
    Id: number
    IdChiNhanh: number
    ChiNhanh: number
    IdXuatKho: number
    IdToaThuoc: number
    IdNhanVien: number
    HoTenNhanVien: number
    IdPhongKham: number
    TenPhongKham: number
    IdBenhNhan: number
    HoTenBenhNhan: number
    DoiTuong: number
    NgayXuat: number
    LoaiPhieu: number
    MaNghiepVu: number
    IdKho: number
    TenKho: number
    TongTien: number
    ChietKhau: number
    TienTruocThue: number
    ThanhTien: number
    _all: number
  }


  export type DrugRevenueDataAvgAggregateInputType = {
    TongTien?: true
    ChietKhau?: true
    TienTruocThue?: true
    ThanhTien?: true
  }

  export type DrugRevenueDataSumAggregateInputType = {
    TongTien?: true
    ChietKhau?: true
    TienTruocThue?: true
    ThanhTien?: true
  }

  export type DrugRevenueDataMinAggregateInputType = {
    Id?: true
    IdChiNhanh?: true
    ChiNhanh?: true
    IdXuatKho?: true
    IdToaThuoc?: true
    IdNhanVien?: true
    HoTenNhanVien?: true
    IdPhongKham?: true
    TenPhongKham?: true
    IdBenhNhan?: true
    HoTenBenhNhan?: true
    DoiTuong?: true
    NgayXuat?: true
    LoaiPhieu?: true
    MaNghiepVu?: true
    IdKho?: true
    TenKho?: true
    TongTien?: true
    ChietKhau?: true
    TienTruocThue?: true
    ThanhTien?: true
  }

  export type DrugRevenueDataMaxAggregateInputType = {
    Id?: true
    IdChiNhanh?: true
    ChiNhanh?: true
    IdXuatKho?: true
    IdToaThuoc?: true
    IdNhanVien?: true
    HoTenNhanVien?: true
    IdPhongKham?: true
    TenPhongKham?: true
    IdBenhNhan?: true
    HoTenBenhNhan?: true
    DoiTuong?: true
    NgayXuat?: true
    LoaiPhieu?: true
    MaNghiepVu?: true
    IdKho?: true
    TenKho?: true
    TongTien?: true
    ChietKhau?: true
    TienTruocThue?: true
    ThanhTien?: true
  }

  export type DrugRevenueDataCountAggregateInputType = {
    Id?: true
    IdChiNhanh?: true
    ChiNhanh?: true
    IdXuatKho?: true
    IdToaThuoc?: true
    IdNhanVien?: true
    HoTenNhanVien?: true
    IdPhongKham?: true
    TenPhongKham?: true
    IdBenhNhan?: true
    HoTenBenhNhan?: true
    DoiTuong?: true
    NgayXuat?: true
    LoaiPhieu?: true
    MaNghiepVu?: true
    IdKho?: true
    TenKho?: true
    TongTien?: true
    ChietKhau?: true
    TienTruocThue?: true
    ThanhTien?: true
    _all?: true
  }

  export type DrugRevenueDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DrugRevenueData to aggregate.
     */
    where?: DrugRevenueDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DrugRevenueData to fetch.
     */
    orderBy?: DrugRevenueDataOrderByWithRelationInput | DrugRevenueDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DrugRevenueDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DrugRevenueData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DrugRevenueData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned DrugRevenueData
    **/
    _count?: true | DrugRevenueDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DrugRevenueDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DrugRevenueDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DrugRevenueDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DrugRevenueDataMaxAggregateInputType
  }

  export type GetDrugRevenueDataAggregateType<T extends DrugRevenueDataAggregateArgs> = {
        [P in keyof T & keyof AggregateDrugRevenueData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDrugRevenueData[P]>
      : GetScalarType<T[P], AggregateDrugRevenueData[P]>
  }




  export type DrugRevenueDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DrugRevenueDataWhereInput
    orderBy?: DrugRevenueDataOrderByWithAggregationInput | DrugRevenueDataOrderByWithAggregationInput[]
    by: DrugRevenueDataScalarFieldEnum[] | DrugRevenueDataScalarFieldEnum
    having?: DrugRevenueDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DrugRevenueDataCountAggregateInputType | true
    _avg?: DrugRevenueDataAvgAggregateInputType
    _sum?: DrugRevenueDataSumAggregateInputType
    _min?: DrugRevenueDataMinAggregateInputType
    _max?: DrugRevenueDataMaxAggregateInputType
  }

  export type DrugRevenueDataGroupByOutputType = {
    Id: string
    IdChiNhanh: string | null
    ChiNhanh: string | null
    IdXuatKho: string | null
    IdToaThuoc: string | null
    IdNhanVien: string | null
    HoTenNhanVien: string | null
    IdPhongKham: string | null
    TenPhongKham: string | null
    IdBenhNhan: string | null
    HoTenBenhNhan: string | null
    DoiTuong: string | null
    NgayXuat: Date | null
    LoaiPhieu: string | null
    MaNghiepVu: string | null
    IdKho: string | null
    TenKho: string | null
    TongTien: number | null
    ChietKhau: number | null
    TienTruocThue: number | null
    ThanhTien: number | null
    _count: DrugRevenueDataCountAggregateOutputType | null
    _avg: DrugRevenueDataAvgAggregateOutputType | null
    _sum: DrugRevenueDataSumAggregateOutputType | null
    _min: DrugRevenueDataMinAggregateOutputType | null
    _max: DrugRevenueDataMaxAggregateOutputType | null
  }

  type GetDrugRevenueDataGroupByPayload<T extends DrugRevenueDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DrugRevenueDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DrugRevenueDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DrugRevenueDataGroupByOutputType[P]>
            : GetScalarType<T[P], DrugRevenueDataGroupByOutputType[P]>
        }
      >
    >


  export type DrugRevenueDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    Id?: boolean
    IdChiNhanh?: boolean
    ChiNhanh?: boolean
    IdXuatKho?: boolean
    IdToaThuoc?: boolean
    IdNhanVien?: boolean
    HoTenNhanVien?: boolean
    IdPhongKham?: boolean
    TenPhongKham?: boolean
    IdBenhNhan?: boolean
    HoTenBenhNhan?: boolean
    DoiTuong?: boolean
    NgayXuat?: boolean
    LoaiPhieu?: boolean
    MaNghiepVu?: boolean
    IdKho?: boolean
    TenKho?: boolean
    TongTien?: boolean
    ChietKhau?: boolean
    TienTruocThue?: boolean
    ThanhTien?: boolean
  }, ExtArgs["result"]["drugRevenueData"]>


  export type DrugRevenueDataSelectScalar = {
    Id?: boolean
    IdChiNhanh?: boolean
    ChiNhanh?: boolean
    IdXuatKho?: boolean
    IdToaThuoc?: boolean
    IdNhanVien?: boolean
    HoTenNhanVien?: boolean
    IdPhongKham?: boolean
    TenPhongKham?: boolean
    IdBenhNhan?: boolean
    HoTenBenhNhan?: boolean
    DoiTuong?: boolean
    NgayXuat?: boolean
    LoaiPhieu?: boolean
    MaNghiepVu?: boolean
    IdKho?: boolean
    TenKho?: boolean
    TongTien?: boolean
    ChietKhau?: boolean
    TienTruocThue?: boolean
    ThanhTien?: boolean
  }


  export type $DrugRevenueDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "DrugRevenueData"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      Id: string
      IdChiNhanh: string | null
      ChiNhanh: string | null
      IdXuatKho: string | null
      IdToaThuoc: string | null
      IdNhanVien: string | null
      HoTenNhanVien: string | null
      IdPhongKham: string | null
      TenPhongKham: string | null
      IdBenhNhan: string | null
      HoTenBenhNhan: string | null
      DoiTuong: string | null
      NgayXuat: Date | null
      LoaiPhieu: string | null
      MaNghiepVu: string | null
      IdKho: string | null
      TenKho: string | null
      TongTien: number | null
      ChietKhau: number | null
      TienTruocThue: number | null
      ThanhTien: number | null
    }, ExtArgs["result"]["drugRevenueData"]>
    composites: {}
  }

  type DrugRevenueDataGetPayload<S extends boolean | null | undefined | DrugRevenueDataDefaultArgs> = $Result.GetResult<Prisma.$DrugRevenueDataPayload, S>

  type DrugRevenueDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<DrugRevenueDataFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: DrugRevenueDataCountAggregateInputType | true
    }

  export interface DrugRevenueDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['DrugRevenueData'], meta: { name: 'DrugRevenueData' } }
    /**
     * Find zero or one DrugRevenueData that matches the filter.
     * @param {DrugRevenueDataFindUniqueArgs} args - Arguments to find a DrugRevenueData
     * @example
     * // Get one DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DrugRevenueDataFindUniqueArgs>(args: SelectSubset<T, DrugRevenueDataFindUniqueArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one DrugRevenueData that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {DrugRevenueDataFindUniqueOrThrowArgs} args - Arguments to find a DrugRevenueData
     * @example
     * // Get one DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DrugRevenueDataFindUniqueOrThrowArgs>(args: SelectSubset<T, DrugRevenueDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first DrugRevenueData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataFindFirstArgs} args - Arguments to find a DrugRevenueData
     * @example
     * // Get one DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DrugRevenueDataFindFirstArgs>(args?: SelectSubset<T, DrugRevenueDataFindFirstArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first DrugRevenueData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataFindFirstOrThrowArgs} args - Arguments to find a DrugRevenueData
     * @example
     * // Get one DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DrugRevenueDataFindFirstOrThrowArgs>(args?: SelectSubset<T, DrugRevenueDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more DrugRevenueData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.findMany()
     * 
     * // Get first 10 DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.findMany({ take: 10 })
     * 
     * // Only select the `Id`
     * const drugRevenueDataWithIdOnly = await prisma.drugRevenueData.findMany({ select: { Id: true } })
     * 
     */
    findMany<T extends DrugRevenueDataFindManyArgs>(args?: SelectSubset<T, DrugRevenueDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a DrugRevenueData.
     * @param {DrugRevenueDataCreateArgs} args - Arguments to create a DrugRevenueData.
     * @example
     * // Create one DrugRevenueData
     * const DrugRevenueData = await prisma.drugRevenueData.create({
     *   data: {
     *     // ... data to create a DrugRevenueData
     *   }
     * })
     * 
     */
    create<T extends DrugRevenueDataCreateArgs>(args: SelectSubset<T, DrugRevenueDataCreateArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many DrugRevenueData.
     * @param {DrugRevenueDataCreateManyArgs} args - Arguments to create many DrugRevenueData.
     * @example
     * // Create many DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DrugRevenueDataCreateManyArgs>(args?: SelectSubset<T, DrugRevenueDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a DrugRevenueData.
     * @param {DrugRevenueDataDeleteArgs} args - Arguments to delete one DrugRevenueData.
     * @example
     * // Delete one DrugRevenueData
     * const DrugRevenueData = await prisma.drugRevenueData.delete({
     *   where: {
     *     // ... filter to delete one DrugRevenueData
     *   }
     * })
     * 
     */
    delete<T extends DrugRevenueDataDeleteArgs>(args: SelectSubset<T, DrugRevenueDataDeleteArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one DrugRevenueData.
     * @param {DrugRevenueDataUpdateArgs} args - Arguments to update one DrugRevenueData.
     * @example
     * // Update one DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DrugRevenueDataUpdateArgs>(args: SelectSubset<T, DrugRevenueDataUpdateArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more DrugRevenueData.
     * @param {DrugRevenueDataDeleteManyArgs} args - Arguments to filter DrugRevenueData to delete.
     * @example
     * // Delete a few DrugRevenueData
     * const { count } = await prisma.drugRevenueData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DrugRevenueDataDeleteManyArgs>(args?: SelectSubset<T, DrugRevenueDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more DrugRevenueData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DrugRevenueDataUpdateManyArgs>(args: SelectSubset<T, DrugRevenueDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one DrugRevenueData.
     * @param {DrugRevenueDataUpsertArgs} args - Arguments to update or create a DrugRevenueData.
     * @example
     * // Update or create a DrugRevenueData
     * const drugRevenueData = await prisma.drugRevenueData.upsert({
     *   create: {
     *     // ... data to create a DrugRevenueData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the DrugRevenueData we want to update
     *   }
     * })
     */
    upsert<T extends DrugRevenueDataUpsertArgs>(args: SelectSubset<T, DrugRevenueDataUpsertArgs<ExtArgs>>): Prisma__DrugRevenueDataClient<$Result.GetResult<Prisma.$DrugRevenueDataPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of DrugRevenueData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataCountArgs} args - Arguments to filter DrugRevenueData to count.
     * @example
     * // Count the number of DrugRevenueData
     * const count = await prisma.drugRevenueData.count({
     *   where: {
     *     // ... the filter for the DrugRevenueData we want to count
     *   }
     * })
    **/
    count<T extends DrugRevenueDataCountArgs>(
      args?: Subset<T, DrugRevenueDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DrugRevenueDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a DrugRevenueData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DrugRevenueDataAggregateArgs>(args: Subset<T, DrugRevenueDataAggregateArgs>): Prisma.PrismaPromise<GetDrugRevenueDataAggregateType<T>>

    /**
     * Group by DrugRevenueData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DrugRevenueDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DrugRevenueDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DrugRevenueDataGroupByArgs['orderBy'] }
        : { orderBy?: DrugRevenueDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DrugRevenueDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDrugRevenueDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the DrugRevenueData model
   */
  readonly fields: DrugRevenueDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for DrugRevenueData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DrugRevenueDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the DrugRevenueData model
   */ 
  interface DrugRevenueDataFieldRefs {
    readonly Id: FieldRef<"DrugRevenueData", 'String'>
    readonly IdChiNhanh: FieldRef<"DrugRevenueData", 'String'>
    readonly ChiNhanh: FieldRef<"DrugRevenueData", 'String'>
    readonly IdXuatKho: FieldRef<"DrugRevenueData", 'String'>
    readonly IdToaThuoc: FieldRef<"DrugRevenueData", 'String'>
    readonly IdNhanVien: FieldRef<"DrugRevenueData", 'String'>
    readonly HoTenNhanVien: FieldRef<"DrugRevenueData", 'String'>
    readonly IdPhongKham: FieldRef<"DrugRevenueData", 'String'>
    readonly TenPhongKham: FieldRef<"DrugRevenueData", 'String'>
    readonly IdBenhNhan: FieldRef<"DrugRevenueData", 'String'>
    readonly HoTenBenhNhan: FieldRef<"DrugRevenueData", 'String'>
    readonly DoiTuong: FieldRef<"DrugRevenueData", 'String'>
    readonly NgayXuat: FieldRef<"DrugRevenueData", 'DateTime'>
    readonly LoaiPhieu: FieldRef<"DrugRevenueData", 'String'>
    readonly MaNghiepVu: FieldRef<"DrugRevenueData", 'String'>
    readonly IdKho: FieldRef<"DrugRevenueData", 'String'>
    readonly TenKho: FieldRef<"DrugRevenueData", 'String'>
    readonly TongTien: FieldRef<"DrugRevenueData", 'Float'>
    readonly ChietKhau: FieldRef<"DrugRevenueData", 'Float'>
    readonly TienTruocThue: FieldRef<"DrugRevenueData", 'Float'>
    readonly ThanhTien: FieldRef<"DrugRevenueData", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * DrugRevenueData findUnique
   */
  export type DrugRevenueDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * Filter, which DrugRevenueData to fetch.
     */
    where: DrugRevenueDataWhereUniqueInput
  }

  /**
   * DrugRevenueData findUniqueOrThrow
   */
  export type DrugRevenueDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * Filter, which DrugRevenueData to fetch.
     */
    where: DrugRevenueDataWhereUniqueInput
  }

  /**
   * DrugRevenueData findFirst
   */
  export type DrugRevenueDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * Filter, which DrugRevenueData to fetch.
     */
    where?: DrugRevenueDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DrugRevenueData to fetch.
     */
    orderBy?: DrugRevenueDataOrderByWithRelationInput | DrugRevenueDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DrugRevenueData.
     */
    cursor?: DrugRevenueDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DrugRevenueData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DrugRevenueData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DrugRevenueData.
     */
    distinct?: DrugRevenueDataScalarFieldEnum | DrugRevenueDataScalarFieldEnum[]
  }

  /**
   * DrugRevenueData findFirstOrThrow
   */
  export type DrugRevenueDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * Filter, which DrugRevenueData to fetch.
     */
    where?: DrugRevenueDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DrugRevenueData to fetch.
     */
    orderBy?: DrugRevenueDataOrderByWithRelationInput | DrugRevenueDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for DrugRevenueData.
     */
    cursor?: DrugRevenueDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DrugRevenueData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DrugRevenueData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of DrugRevenueData.
     */
    distinct?: DrugRevenueDataScalarFieldEnum | DrugRevenueDataScalarFieldEnum[]
  }

  /**
   * DrugRevenueData findMany
   */
  export type DrugRevenueDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * Filter, which DrugRevenueData to fetch.
     */
    where?: DrugRevenueDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of DrugRevenueData to fetch.
     */
    orderBy?: DrugRevenueDataOrderByWithRelationInput | DrugRevenueDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing DrugRevenueData.
     */
    cursor?: DrugRevenueDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` DrugRevenueData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` DrugRevenueData.
     */
    skip?: number
    distinct?: DrugRevenueDataScalarFieldEnum | DrugRevenueDataScalarFieldEnum[]
  }

  /**
   * DrugRevenueData create
   */
  export type DrugRevenueDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * The data needed to create a DrugRevenueData.
     */
    data: XOR<DrugRevenueDataCreateInput, DrugRevenueDataUncheckedCreateInput>
  }

  /**
   * DrugRevenueData createMany
   */
  export type DrugRevenueDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many DrugRevenueData.
     */
    data: DrugRevenueDataCreateManyInput | DrugRevenueDataCreateManyInput[]
  }

  /**
   * DrugRevenueData update
   */
  export type DrugRevenueDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * The data needed to update a DrugRevenueData.
     */
    data: XOR<DrugRevenueDataUpdateInput, DrugRevenueDataUncheckedUpdateInput>
    /**
     * Choose, which DrugRevenueData to update.
     */
    where: DrugRevenueDataWhereUniqueInput
  }

  /**
   * DrugRevenueData updateMany
   */
  export type DrugRevenueDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update DrugRevenueData.
     */
    data: XOR<DrugRevenueDataUpdateManyMutationInput, DrugRevenueDataUncheckedUpdateManyInput>
    /**
     * Filter which DrugRevenueData to update
     */
    where?: DrugRevenueDataWhereInput
  }

  /**
   * DrugRevenueData upsert
   */
  export type DrugRevenueDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * The filter to search for the DrugRevenueData to update in case it exists.
     */
    where: DrugRevenueDataWhereUniqueInput
    /**
     * In case the DrugRevenueData found by the `where` argument doesn't exist, create a new DrugRevenueData with this data.
     */
    create: XOR<DrugRevenueDataCreateInput, DrugRevenueDataUncheckedCreateInput>
    /**
     * In case the DrugRevenueData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DrugRevenueDataUpdateInput, DrugRevenueDataUncheckedUpdateInput>
  }

  /**
   * DrugRevenueData delete
   */
  export type DrugRevenueDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
    /**
     * Filter which DrugRevenueData to delete.
     */
    where: DrugRevenueDataWhereUniqueInput
  }

  /**
   * DrugRevenueData deleteMany
   */
  export type DrugRevenueDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which DrugRevenueData to delete
     */
    where?: DrugRevenueDataWhereInput
  }

  /**
   * DrugRevenueData without action
   */
  export type DrugRevenueDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DrugRevenueData
     */
    select?: DrugRevenueDataSelect<ExtArgs> | null
  }


  /**
   * Model PC_Bangluong
   */

  export type AggregatePC_Bangluong = {
    _count: PC_BangluongCountAggregateOutputType | null
    _avg: PC_BangluongAvgAggregateOutputType | null
    _sum: PC_BangluongSumAggregateOutputType | null
    _min: PC_BangluongMinAggregateOutputType | null
    _max: PC_BangluongMaxAggregateOutputType | null
  }

  export type PC_BangluongAvgAggregateOutputType = {
    id_bangluong: number | null
    nam_luong: number | null
    thang_luong: number | null
  }

  export type PC_BangluongSumAggregateOutputType = {
    id_bangluong: number | null
    nam_luong: number | null
    thang_luong: number | null
  }

  export type PC_BangluongMinAggregateOutputType = {
    id_bangluong: number | null
    id_chinhanh: string | null
    id_nhanvien: string | null
    nam_luong: number | null
    thang_luong: number | null
    chitiet_luong: Buffer | null
    luong_sanpham: Buffer | null
    id_nhanvien_upload: string | null
    ngay_upload: Date | null
  }

  export type PC_BangluongMaxAggregateOutputType = {
    id_bangluong: number | null
    id_chinhanh: string | null
    id_nhanvien: string | null
    nam_luong: number | null
    thang_luong: number | null
    chitiet_luong: Buffer | null
    luong_sanpham: Buffer | null
    id_nhanvien_upload: string | null
    ngay_upload: Date | null
  }

  export type PC_BangluongCountAggregateOutputType = {
    id_bangluong: number
    id_chinhanh: number
    id_nhanvien: number
    nam_luong: number
    thang_luong: number
    chitiet_luong: number
    luong_sanpham: number
    id_nhanvien_upload: number
    ngay_upload: number
    _all: number
  }


  export type PC_BangluongAvgAggregateInputType = {
    id_bangluong?: true
    nam_luong?: true
    thang_luong?: true
  }

  export type PC_BangluongSumAggregateInputType = {
    id_bangluong?: true
    nam_luong?: true
    thang_luong?: true
  }

  export type PC_BangluongMinAggregateInputType = {
    id_bangluong?: true
    id_chinhanh?: true
    id_nhanvien?: true
    nam_luong?: true
    thang_luong?: true
    chitiet_luong?: true
    luong_sanpham?: true
    id_nhanvien_upload?: true
    ngay_upload?: true
  }

  export type PC_BangluongMaxAggregateInputType = {
    id_bangluong?: true
    id_chinhanh?: true
    id_nhanvien?: true
    nam_luong?: true
    thang_luong?: true
    chitiet_luong?: true
    luong_sanpham?: true
    id_nhanvien_upload?: true
    ngay_upload?: true
  }

  export type PC_BangluongCountAggregateInputType = {
    id_bangluong?: true
    id_chinhanh?: true
    id_nhanvien?: true
    nam_luong?: true
    thang_luong?: true
    chitiet_luong?: true
    luong_sanpham?: true
    id_nhanvien_upload?: true
    ngay_upload?: true
    _all?: true
  }

  export type PC_BangluongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Bangluong to aggregate.
     */
    where?: PC_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bangluongs to fetch.
     */
    orderBy?: PC_BangluongOrderByWithRelationInput | PC_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bangluongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Bangluongs
    **/
    _count?: true | PC_BangluongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_BangluongAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_BangluongSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_BangluongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_BangluongMaxAggregateInputType
  }

  export type GetPC_BangluongAggregateType<T extends PC_BangluongAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Bangluong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Bangluong[P]>
      : GetScalarType<T[P], AggregatePC_Bangluong[P]>
  }




  export type PC_BangluongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_BangluongWhereInput
    orderBy?: PC_BangluongOrderByWithAggregationInput | PC_BangluongOrderByWithAggregationInput[]
    by: PC_BangluongScalarFieldEnum[] | PC_BangluongScalarFieldEnum
    having?: PC_BangluongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_BangluongCountAggregateInputType | true
    _avg?: PC_BangluongAvgAggregateInputType
    _sum?: PC_BangluongSumAggregateInputType
    _min?: PC_BangluongMinAggregateInputType
    _max?: PC_BangluongMaxAggregateInputType
  }

  export type PC_BangluongGroupByOutputType = {
    id_bangluong: number
    id_chinhanh: string | null
    id_nhanvien: string | null
    nam_luong: number | null
    thang_luong: number | null
    chitiet_luong: Buffer | null
    luong_sanpham: Buffer | null
    id_nhanvien_upload: string | null
    ngay_upload: Date | null
    _count: PC_BangluongCountAggregateOutputType | null
    _avg: PC_BangluongAvgAggregateOutputType | null
    _sum: PC_BangluongSumAggregateOutputType | null
    _min: PC_BangluongMinAggregateOutputType | null
    _max: PC_BangluongMaxAggregateOutputType | null
  }

  type GetPC_BangluongGroupByPayload<T extends PC_BangluongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_BangluongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_BangluongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_BangluongGroupByOutputType[P]>
            : GetScalarType<T[P], PC_BangluongGroupByOutputType[P]>
        }
      >
    >


  export type PC_BangluongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_bangluong?: boolean
    id_chinhanh?: boolean
    id_nhanvien?: boolean
    nam_luong?: boolean
    thang_luong?: boolean
    chitiet_luong?: boolean
    luong_sanpham?: boolean
    id_nhanvien_upload?: boolean
    ngay_upload?: boolean
  }, ExtArgs["result"]["pC_Bangluong"]>


  export type PC_BangluongSelectScalar = {
    id_bangluong?: boolean
    id_chinhanh?: boolean
    id_nhanvien?: boolean
    nam_luong?: boolean
    thang_luong?: boolean
    chitiet_luong?: boolean
    luong_sanpham?: boolean
    id_nhanvien_upload?: boolean
    ngay_upload?: boolean
  }


  export type $PC_BangluongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Bangluong"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_bangluong: number
      id_chinhanh: string | null
      id_nhanvien: string | null
      nam_luong: number | null
      thang_luong: number | null
      chitiet_luong: Buffer | null
      luong_sanpham: Buffer | null
      id_nhanvien_upload: string | null
      ngay_upload: Date | null
    }, ExtArgs["result"]["pC_Bangluong"]>
    composites: {}
  }

  type PC_BangluongGetPayload<S extends boolean | null | undefined | PC_BangluongDefaultArgs> = $Result.GetResult<Prisma.$PC_BangluongPayload, S>

  type PC_BangluongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_BangluongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_BangluongCountAggregateInputType | true
    }

  export interface PC_BangluongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Bangluong'], meta: { name: 'PC_Bangluong' } }
    /**
     * Find zero or one PC_Bangluong that matches the filter.
     * @param {PC_BangluongFindUniqueArgs} args - Arguments to find a PC_Bangluong
     * @example
     * // Get one PC_Bangluong
     * const pC_Bangluong = await prisma.pC_Bangluong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_BangluongFindUniqueArgs>(args: SelectSubset<T, PC_BangluongFindUniqueArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Bangluong that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_BangluongFindUniqueOrThrowArgs} args - Arguments to find a PC_Bangluong
     * @example
     * // Get one PC_Bangluong
     * const pC_Bangluong = await prisma.pC_Bangluong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_BangluongFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_BangluongFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Bangluong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongFindFirstArgs} args - Arguments to find a PC_Bangluong
     * @example
     * // Get one PC_Bangluong
     * const pC_Bangluong = await prisma.pC_Bangluong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_BangluongFindFirstArgs>(args?: SelectSubset<T, PC_BangluongFindFirstArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Bangluong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongFindFirstOrThrowArgs} args - Arguments to find a PC_Bangluong
     * @example
     * // Get one PC_Bangluong
     * const pC_Bangluong = await prisma.pC_Bangluong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_BangluongFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_BangluongFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Bangluongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Bangluongs
     * const pC_Bangluongs = await prisma.pC_Bangluong.findMany()
     * 
     * // Get first 10 PC_Bangluongs
     * const pC_Bangluongs = await prisma.pC_Bangluong.findMany({ take: 10 })
     * 
     * // Only select the `id_bangluong`
     * const pC_BangluongWithId_bangluongOnly = await prisma.pC_Bangluong.findMany({ select: { id_bangluong: true } })
     * 
     */
    findMany<T extends PC_BangluongFindManyArgs>(args?: SelectSubset<T, PC_BangluongFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Bangluong.
     * @param {PC_BangluongCreateArgs} args - Arguments to create a PC_Bangluong.
     * @example
     * // Create one PC_Bangluong
     * const PC_Bangluong = await prisma.pC_Bangluong.create({
     *   data: {
     *     // ... data to create a PC_Bangluong
     *   }
     * })
     * 
     */
    create<T extends PC_BangluongCreateArgs>(args: SelectSubset<T, PC_BangluongCreateArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Bangluongs.
     * @param {PC_BangluongCreateManyArgs} args - Arguments to create many PC_Bangluongs.
     * @example
     * // Create many PC_Bangluongs
     * const pC_Bangluong = await prisma.pC_Bangluong.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_BangluongCreateManyArgs>(args?: SelectSubset<T, PC_BangluongCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Bangluong.
     * @param {PC_BangluongDeleteArgs} args - Arguments to delete one PC_Bangluong.
     * @example
     * // Delete one PC_Bangluong
     * const PC_Bangluong = await prisma.pC_Bangluong.delete({
     *   where: {
     *     // ... filter to delete one PC_Bangluong
     *   }
     * })
     * 
     */
    delete<T extends PC_BangluongDeleteArgs>(args: SelectSubset<T, PC_BangluongDeleteArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Bangluong.
     * @param {PC_BangluongUpdateArgs} args - Arguments to update one PC_Bangluong.
     * @example
     * // Update one PC_Bangluong
     * const pC_Bangluong = await prisma.pC_Bangluong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_BangluongUpdateArgs>(args: SelectSubset<T, PC_BangluongUpdateArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Bangluongs.
     * @param {PC_BangluongDeleteManyArgs} args - Arguments to filter PC_Bangluongs to delete.
     * @example
     * // Delete a few PC_Bangluongs
     * const { count } = await prisma.pC_Bangluong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_BangluongDeleteManyArgs>(args?: SelectSubset<T, PC_BangluongDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Bangluongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Bangluongs
     * const pC_Bangluong = await prisma.pC_Bangluong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_BangluongUpdateManyArgs>(args: SelectSubset<T, PC_BangluongUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Bangluong.
     * @param {PC_BangluongUpsertArgs} args - Arguments to update or create a PC_Bangluong.
     * @example
     * // Update or create a PC_Bangluong
     * const pC_Bangluong = await prisma.pC_Bangluong.upsert({
     *   create: {
     *     // ... data to create a PC_Bangluong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Bangluong we want to update
     *   }
     * })
     */
    upsert<T extends PC_BangluongUpsertArgs>(args: SelectSubset<T, PC_BangluongUpsertArgs<ExtArgs>>): Prisma__PC_BangluongClient<$Result.GetResult<Prisma.$PC_BangluongPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Bangluongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongCountArgs} args - Arguments to filter PC_Bangluongs to count.
     * @example
     * // Count the number of PC_Bangluongs
     * const count = await prisma.pC_Bangluong.count({
     *   where: {
     *     // ... the filter for the PC_Bangluongs we want to count
     *   }
     * })
    **/
    count<T extends PC_BangluongCountArgs>(
      args?: Subset<T, PC_BangluongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_BangluongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Bangluong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_BangluongAggregateArgs>(args: Subset<T, PC_BangluongAggregateArgs>): Prisma.PrismaPromise<GetPC_BangluongAggregateType<T>>

    /**
     * Group by PC_Bangluong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BangluongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_BangluongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_BangluongGroupByArgs['orderBy'] }
        : { orderBy?: PC_BangluongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_BangluongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_BangluongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Bangluong model
   */
  readonly fields: PC_BangluongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Bangluong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_BangluongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Bangluong model
   */ 
  interface PC_BangluongFieldRefs {
    readonly id_bangluong: FieldRef<"PC_Bangluong", 'Int'>
    readonly id_chinhanh: FieldRef<"PC_Bangluong", 'String'>
    readonly id_nhanvien: FieldRef<"PC_Bangluong", 'String'>
    readonly nam_luong: FieldRef<"PC_Bangluong", 'Int'>
    readonly thang_luong: FieldRef<"PC_Bangluong", 'Int'>
    readonly chitiet_luong: FieldRef<"PC_Bangluong", 'Bytes'>
    readonly luong_sanpham: FieldRef<"PC_Bangluong", 'Bytes'>
    readonly id_nhanvien_upload: FieldRef<"PC_Bangluong", 'String'>
    readonly ngay_upload: FieldRef<"PC_Bangluong", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PC_Bangluong findUnique
   */
  export type PC_BangluongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bangluong to fetch.
     */
    where: PC_BangluongWhereUniqueInput
  }

  /**
   * PC_Bangluong findUniqueOrThrow
   */
  export type PC_BangluongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bangluong to fetch.
     */
    where: PC_BangluongWhereUniqueInput
  }

  /**
   * PC_Bangluong findFirst
   */
  export type PC_BangluongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bangluong to fetch.
     */
    where?: PC_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bangluongs to fetch.
     */
    orderBy?: PC_BangluongOrderByWithRelationInput | PC_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Bangluongs.
     */
    cursor?: PC_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bangluongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Bangluongs.
     */
    distinct?: PC_BangluongScalarFieldEnum | PC_BangluongScalarFieldEnum[]
  }

  /**
   * PC_Bangluong findFirstOrThrow
   */
  export type PC_BangluongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bangluong to fetch.
     */
    where?: PC_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bangluongs to fetch.
     */
    orderBy?: PC_BangluongOrderByWithRelationInput | PC_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Bangluongs.
     */
    cursor?: PC_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bangluongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Bangluongs.
     */
    distinct?: PC_BangluongScalarFieldEnum | PC_BangluongScalarFieldEnum[]
  }

  /**
   * PC_Bangluong findMany
   */
  export type PC_BangluongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bangluongs to fetch.
     */
    where?: PC_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bangluongs to fetch.
     */
    orderBy?: PC_BangluongOrderByWithRelationInput | PC_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Bangluongs.
     */
    cursor?: PC_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bangluongs.
     */
    skip?: number
    distinct?: PC_BangluongScalarFieldEnum | PC_BangluongScalarFieldEnum[]
  }

  /**
   * PC_Bangluong create
   */
  export type PC_BangluongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Bangluong.
     */
    data?: XOR<PC_BangluongCreateInput, PC_BangluongUncheckedCreateInput>
  }

  /**
   * PC_Bangluong createMany
   */
  export type PC_BangluongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Bangluongs.
     */
    data: PC_BangluongCreateManyInput | PC_BangluongCreateManyInput[]
  }

  /**
   * PC_Bangluong update
   */
  export type PC_BangluongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Bangluong.
     */
    data: XOR<PC_BangluongUpdateInput, PC_BangluongUncheckedUpdateInput>
    /**
     * Choose, which PC_Bangluong to update.
     */
    where: PC_BangluongWhereUniqueInput
  }

  /**
   * PC_Bangluong updateMany
   */
  export type PC_BangluongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Bangluongs.
     */
    data: XOR<PC_BangluongUpdateManyMutationInput, PC_BangluongUncheckedUpdateManyInput>
    /**
     * Filter which PC_Bangluongs to update
     */
    where?: PC_BangluongWhereInput
  }

  /**
   * PC_Bangluong upsert
   */
  export type PC_BangluongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Bangluong to update in case it exists.
     */
    where: PC_BangluongWhereUniqueInput
    /**
     * In case the PC_Bangluong found by the `where` argument doesn't exist, create a new PC_Bangluong with this data.
     */
    create: XOR<PC_BangluongCreateInput, PC_BangluongUncheckedCreateInput>
    /**
     * In case the PC_Bangluong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_BangluongUpdateInput, PC_BangluongUncheckedUpdateInput>
  }

  /**
   * PC_Bangluong delete
   */
  export type PC_BangluongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
    /**
     * Filter which PC_Bangluong to delete.
     */
    where: PC_BangluongWhereUniqueInput
  }

  /**
   * PC_Bangluong deleteMany
   */
  export type PC_BangluongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Bangluongs to delete
     */
    where?: PC_BangluongWhereInput
  }

  /**
   * PC_Bangluong without action
   */
  export type PC_BangluongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bangluong
     */
    select?: PC_BangluongSelect<ExtArgs> | null
  }


  /**
   * Model PC_Bantin
   */

  export type AggregatePC_Bantin = {
    _count: PC_BantinCountAggregateOutputType | null
    _avg: PC_BantinAvgAggregateOutputType | null
    _sum: PC_BantinSumAggregateOutputType | null
    _min: PC_BantinMinAggregateOutputType | null
    _max: PC_BantinMaxAggregateOutputType | null
  }

  export type PC_BantinAvgAggregateOutputType = {
    id_Bantin: number | null
    Luotxem: number | null
    id_DMPhanloai: number | null
    id_DMPhanloaiCT: number | null
  }

  export type PC_BantinSumAggregateOutputType = {
    id_Bantin: number | null
    Luotxem: number | null
    id_DMPhanloai: number | null
    id_DMPhanloaiCT: number | null
  }

  export type PC_BantinMinAggregateOutputType = {
    id_Bantin: number | null
    Tieude: string | null
    Tomtat: string | null
    Noidung: string | null
    Url_Images: string | null
    id_Chinhanh: string | null
    id_KP_Banhanh: string | null
    Ten_KP_Banhanh: string | null
    id_To_Banhanh: string | null
    Ten_To_Banhanh: string | null
    id_NV_Them: string | null
    Ngaydang: Date | null
    Ngay_Hethan: Date | null
    Hienthi_Home: boolean | null
    Sudung: boolean | null
    Luotxem: number | null
    Ghim_Bantin: boolean | null
    Bantin_Tapdoan: boolean | null
    id_DMPhanloai: number | null
    TenPhanloai: string | null
    id_DMPhanloaiCT: number | null
    TenChitiet: string | null
    Url_Video: string | null
  }

  export type PC_BantinMaxAggregateOutputType = {
    id_Bantin: number | null
    Tieude: string | null
    Tomtat: string | null
    Noidung: string | null
    Url_Images: string | null
    id_Chinhanh: string | null
    id_KP_Banhanh: string | null
    Ten_KP_Banhanh: string | null
    id_To_Banhanh: string | null
    Ten_To_Banhanh: string | null
    id_NV_Them: string | null
    Ngaydang: Date | null
    Ngay_Hethan: Date | null
    Hienthi_Home: boolean | null
    Sudung: boolean | null
    Luotxem: number | null
    Ghim_Bantin: boolean | null
    Bantin_Tapdoan: boolean | null
    id_DMPhanloai: number | null
    TenPhanloai: string | null
    id_DMPhanloaiCT: number | null
    TenChitiet: string | null
    Url_Video: string | null
  }

  export type PC_BantinCountAggregateOutputType = {
    id_Bantin: number
    Tieude: number
    Tomtat: number
    Noidung: number
    Url_Images: number
    id_Chinhanh: number
    id_KP_Banhanh: number
    Ten_KP_Banhanh: number
    id_To_Banhanh: number
    Ten_To_Banhanh: number
    id_NV_Them: number
    Ngaydang: number
    Ngay_Hethan: number
    Hienthi_Home: number
    Sudung: number
    Luotxem: number
    Ghim_Bantin: number
    Bantin_Tapdoan: number
    id_DMPhanloai: number
    TenPhanloai: number
    id_DMPhanloaiCT: number
    TenChitiet: number
    Url_Video: number
    _all: number
  }


  export type PC_BantinAvgAggregateInputType = {
    id_Bantin?: true
    Luotxem?: true
    id_DMPhanloai?: true
    id_DMPhanloaiCT?: true
  }

  export type PC_BantinSumAggregateInputType = {
    id_Bantin?: true
    Luotxem?: true
    id_DMPhanloai?: true
    id_DMPhanloaiCT?: true
  }

  export type PC_BantinMinAggregateInputType = {
    id_Bantin?: true
    Tieude?: true
    Tomtat?: true
    Noidung?: true
    Url_Images?: true
    id_Chinhanh?: true
    id_KP_Banhanh?: true
    Ten_KP_Banhanh?: true
    id_To_Banhanh?: true
    Ten_To_Banhanh?: true
    id_NV_Them?: true
    Ngaydang?: true
    Ngay_Hethan?: true
    Hienthi_Home?: true
    Sudung?: true
    Luotxem?: true
    Ghim_Bantin?: true
    Bantin_Tapdoan?: true
    id_DMPhanloai?: true
    TenPhanloai?: true
    id_DMPhanloaiCT?: true
    TenChitiet?: true
    Url_Video?: true
  }

  export type PC_BantinMaxAggregateInputType = {
    id_Bantin?: true
    Tieude?: true
    Tomtat?: true
    Noidung?: true
    Url_Images?: true
    id_Chinhanh?: true
    id_KP_Banhanh?: true
    Ten_KP_Banhanh?: true
    id_To_Banhanh?: true
    Ten_To_Banhanh?: true
    id_NV_Them?: true
    Ngaydang?: true
    Ngay_Hethan?: true
    Hienthi_Home?: true
    Sudung?: true
    Luotxem?: true
    Ghim_Bantin?: true
    Bantin_Tapdoan?: true
    id_DMPhanloai?: true
    TenPhanloai?: true
    id_DMPhanloaiCT?: true
    TenChitiet?: true
    Url_Video?: true
  }

  export type PC_BantinCountAggregateInputType = {
    id_Bantin?: true
    Tieude?: true
    Tomtat?: true
    Noidung?: true
    Url_Images?: true
    id_Chinhanh?: true
    id_KP_Banhanh?: true
    Ten_KP_Banhanh?: true
    id_To_Banhanh?: true
    Ten_To_Banhanh?: true
    id_NV_Them?: true
    Ngaydang?: true
    Ngay_Hethan?: true
    Hienthi_Home?: true
    Sudung?: true
    Luotxem?: true
    Ghim_Bantin?: true
    Bantin_Tapdoan?: true
    id_DMPhanloai?: true
    TenPhanloai?: true
    id_DMPhanloaiCT?: true
    TenChitiet?: true
    Url_Video?: true
    _all?: true
  }

  export type PC_BantinAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Bantin to aggregate.
     */
    where?: PC_BantinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bantins to fetch.
     */
    orderBy?: PC_BantinOrderByWithRelationInput | PC_BantinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_BantinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bantins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bantins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Bantins
    **/
    _count?: true | PC_BantinCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_BantinAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_BantinSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_BantinMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_BantinMaxAggregateInputType
  }

  export type GetPC_BantinAggregateType<T extends PC_BantinAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Bantin]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Bantin[P]>
      : GetScalarType<T[P], AggregatePC_Bantin[P]>
  }




  export type PC_BantinGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_BantinWhereInput
    orderBy?: PC_BantinOrderByWithAggregationInput | PC_BantinOrderByWithAggregationInput[]
    by: PC_BantinScalarFieldEnum[] | PC_BantinScalarFieldEnum
    having?: PC_BantinScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_BantinCountAggregateInputType | true
    _avg?: PC_BantinAvgAggregateInputType
    _sum?: PC_BantinSumAggregateInputType
    _min?: PC_BantinMinAggregateInputType
    _max?: PC_BantinMaxAggregateInputType
  }

  export type PC_BantinGroupByOutputType = {
    id_Bantin: number
    Tieude: string | null
    Tomtat: string | null
    Noidung: string | null
    Url_Images: string | null
    id_Chinhanh: string | null
    id_KP_Banhanh: string | null
    Ten_KP_Banhanh: string | null
    id_To_Banhanh: string | null
    Ten_To_Banhanh: string | null
    id_NV_Them: string | null
    Ngaydang: Date | null
    Ngay_Hethan: Date | null
    Hienthi_Home: boolean | null
    Sudung: boolean | null
    Luotxem: number | null
    Ghim_Bantin: boolean | null
    Bantin_Tapdoan: boolean | null
    id_DMPhanloai: number | null
    TenPhanloai: string | null
    id_DMPhanloaiCT: number | null
    TenChitiet: string | null
    Url_Video: string | null
    _count: PC_BantinCountAggregateOutputType | null
    _avg: PC_BantinAvgAggregateOutputType | null
    _sum: PC_BantinSumAggregateOutputType | null
    _min: PC_BantinMinAggregateOutputType | null
    _max: PC_BantinMaxAggregateOutputType | null
  }

  type GetPC_BantinGroupByPayload<T extends PC_BantinGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_BantinGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_BantinGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_BantinGroupByOutputType[P]>
            : GetScalarType<T[P], PC_BantinGroupByOutputType[P]>
        }
      >
    >


  export type PC_BantinSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_Bantin?: boolean
    Tieude?: boolean
    Tomtat?: boolean
    Noidung?: boolean
    Url_Images?: boolean
    id_Chinhanh?: boolean
    id_KP_Banhanh?: boolean
    Ten_KP_Banhanh?: boolean
    id_To_Banhanh?: boolean
    Ten_To_Banhanh?: boolean
    id_NV_Them?: boolean
    Ngaydang?: boolean
    Ngay_Hethan?: boolean
    Hienthi_Home?: boolean
    Sudung?: boolean
    Luotxem?: boolean
    Ghim_Bantin?: boolean
    Bantin_Tapdoan?: boolean
    id_DMPhanloai?: boolean
    TenPhanloai?: boolean
    id_DMPhanloaiCT?: boolean
    TenChitiet?: boolean
    Url_Video?: boolean
  }, ExtArgs["result"]["pC_Bantin"]>


  export type PC_BantinSelectScalar = {
    id_Bantin?: boolean
    Tieude?: boolean
    Tomtat?: boolean
    Noidung?: boolean
    Url_Images?: boolean
    id_Chinhanh?: boolean
    id_KP_Banhanh?: boolean
    Ten_KP_Banhanh?: boolean
    id_To_Banhanh?: boolean
    Ten_To_Banhanh?: boolean
    id_NV_Them?: boolean
    Ngaydang?: boolean
    Ngay_Hethan?: boolean
    Hienthi_Home?: boolean
    Sudung?: boolean
    Luotxem?: boolean
    Ghim_Bantin?: boolean
    Bantin_Tapdoan?: boolean
    id_DMPhanloai?: boolean
    TenPhanloai?: boolean
    id_DMPhanloaiCT?: boolean
    TenChitiet?: boolean
    Url_Video?: boolean
  }


  export type $PC_BantinPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Bantin"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_Bantin: number
      Tieude: string | null
      Tomtat: string | null
      Noidung: string | null
      Url_Images: string | null
      id_Chinhanh: string | null
      id_KP_Banhanh: string | null
      Ten_KP_Banhanh: string | null
      id_To_Banhanh: string | null
      Ten_To_Banhanh: string | null
      id_NV_Them: string | null
      Ngaydang: Date | null
      Ngay_Hethan: Date | null
      Hienthi_Home: boolean | null
      Sudung: boolean | null
      Luotxem: number | null
      Ghim_Bantin: boolean | null
      Bantin_Tapdoan: boolean | null
      id_DMPhanloai: number | null
      TenPhanloai: string | null
      id_DMPhanloaiCT: number | null
      TenChitiet: string | null
      Url_Video: string | null
    }, ExtArgs["result"]["pC_Bantin"]>
    composites: {}
  }

  type PC_BantinGetPayload<S extends boolean | null | undefined | PC_BantinDefaultArgs> = $Result.GetResult<Prisma.$PC_BantinPayload, S>

  type PC_BantinCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_BantinFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_BantinCountAggregateInputType | true
    }

  export interface PC_BantinDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Bantin'], meta: { name: 'PC_Bantin' } }
    /**
     * Find zero or one PC_Bantin that matches the filter.
     * @param {PC_BantinFindUniqueArgs} args - Arguments to find a PC_Bantin
     * @example
     * // Get one PC_Bantin
     * const pC_Bantin = await prisma.pC_Bantin.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_BantinFindUniqueArgs>(args: SelectSubset<T, PC_BantinFindUniqueArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Bantin that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_BantinFindUniqueOrThrowArgs} args - Arguments to find a PC_Bantin
     * @example
     * // Get one PC_Bantin
     * const pC_Bantin = await prisma.pC_Bantin.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_BantinFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_BantinFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Bantin that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinFindFirstArgs} args - Arguments to find a PC_Bantin
     * @example
     * // Get one PC_Bantin
     * const pC_Bantin = await prisma.pC_Bantin.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_BantinFindFirstArgs>(args?: SelectSubset<T, PC_BantinFindFirstArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Bantin that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinFindFirstOrThrowArgs} args - Arguments to find a PC_Bantin
     * @example
     * // Get one PC_Bantin
     * const pC_Bantin = await prisma.pC_Bantin.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_BantinFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_BantinFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Bantins that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Bantins
     * const pC_Bantins = await prisma.pC_Bantin.findMany()
     * 
     * // Get first 10 PC_Bantins
     * const pC_Bantins = await prisma.pC_Bantin.findMany({ take: 10 })
     * 
     * // Only select the `id_Bantin`
     * const pC_BantinWithId_BantinOnly = await prisma.pC_Bantin.findMany({ select: { id_Bantin: true } })
     * 
     */
    findMany<T extends PC_BantinFindManyArgs>(args?: SelectSubset<T, PC_BantinFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Bantin.
     * @param {PC_BantinCreateArgs} args - Arguments to create a PC_Bantin.
     * @example
     * // Create one PC_Bantin
     * const PC_Bantin = await prisma.pC_Bantin.create({
     *   data: {
     *     // ... data to create a PC_Bantin
     *   }
     * })
     * 
     */
    create<T extends PC_BantinCreateArgs>(args: SelectSubset<T, PC_BantinCreateArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Bantins.
     * @param {PC_BantinCreateManyArgs} args - Arguments to create many PC_Bantins.
     * @example
     * // Create many PC_Bantins
     * const pC_Bantin = await prisma.pC_Bantin.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_BantinCreateManyArgs>(args?: SelectSubset<T, PC_BantinCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Bantin.
     * @param {PC_BantinDeleteArgs} args - Arguments to delete one PC_Bantin.
     * @example
     * // Delete one PC_Bantin
     * const PC_Bantin = await prisma.pC_Bantin.delete({
     *   where: {
     *     // ... filter to delete one PC_Bantin
     *   }
     * })
     * 
     */
    delete<T extends PC_BantinDeleteArgs>(args: SelectSubset<T, PC_BantinDeleteArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Bantin.
     * @param {PC_BantinUpdateArgs} args - Arguments to update one PC_Bantin.
     * @example
     * // Update one PC_Bantin
     * const pC_Bantin = await prisma.pC_Bantin.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_BantinUpdateArgs>(args: SelectSubset<T, PC_BantinUpdateArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Bantins.
     * @param {PC_BantinDeleteManyArgs} args - Arguments to filter PC_Bantins to delete.
     * @example
     * // Delete a few PC_Bantins
     * const { count } = await prisma.pC_Bantin.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_BantinDeleteManyArgs>(args?: SelectSubset<T, PC_BantinDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Bantins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Bantins
     * const pC_Bantin = await prisma.pC_Bantin.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_BantinUpdateManyArgs>(args: SelectSubset<T, PC_BantinUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Bantin.
     * @param {PC_BantinUpsertArgs} args - Arguments to update or create a PC_Bantin.
     * @example
     * // Update or create a PC_Bantin
     * const pC_Bantin = await prisma.pC_Bantin.upsert({
     *   create: {
     *     // ... data to create a PC_Bantin
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Bantin we want to update
     *   }
     * })
     */
    upsert<T extends PC_BantinUpsertArgs>(args: SelectSubset<T, PC_BantinUpsertArgs<ExtArgs>>): Prisma__PC_BantinClient<$Result.GetResult<Prisma.$PC_BantinPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Bantins.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinCountArgs} args - Arguments to filter PC_Bantins to count.
     * @example
     * // Count the number of PC_Bantins
     * const count = await prisma.pC_Bantin.count({
     *   where: {
     *     // ... the filter for the PC_Bantins we want to count
     *   }
     * })
    **/
    count<T extends PC_BantinCountArgs>(
      args?: Subset<T, PC_BantinCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_BantinCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Bantin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_BantinAggregateArgs>(args: Subset<T, PC_BantinAggregateArgs>): Prisma.PrismaPromise<GetPC_BantinAggregateType<T>>

    /**
     * Group by PC_Bantin.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BantinGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_BantinGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_BantinGroupByArgs['orderBy'] }
        : { orderBy?: PC_BantinGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_BantinGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_BantinGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Bantin model
   */
  readonly fields: PC_BantinFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Bantin.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_BantinClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Bantin model
   */ 
  interface PC_BantinFieldRefs {
    readonly id_Bantin: FieldRef<"PC_Bantin", 'Int'>
    readonly Tieude: FieldRef<"PC_Bantin", 'String'>
    readonly Tomtat: FieldRef<"PC_Bantin", 'String'>
    readonly Noidung: FieldRef<"PC_Bantin", 'String'>
    readonly Url_Images: FieldRef<"PC_Bantin", 'String'>
    readonly id_Chinhanh: FieldRef<"PC_Bantin", 'String'>
    readonly id_KP_Banhanh: FieldRef<"PC_Bantin", 'String'>
    readonly Ten_KP_Banhanh: FieldRef<"PC_Bantin", 'String'>
    readonly id_To_Banhanh: FieldRef<"PC_Bantin", 'String'>
    readonly Ten_To_Banhanh: FieldRef<"PC_Bantin", 'String'>
    readonly id_NV_Them: FieldRef<"PC_Bantin", 'String'>
    readonly Ngaydang: FieldRef<"PC_Bantin", 'DateTime'>
    readonly Ngay_Hethan: FieldRef<"PC_Bantin", 'DateTime'>
    readonly Hienthi_Home: FieldRef<"PC_Bantin", 'Boolean'>
    readonly Sudung: FieldRef<"PC_Bantin", 'Boolean'>
    readonly Luotxem: FieldRef<"PC_Bantin", 'Int'>
    readonly Ghim_Bantin: FieldRef<"PC_Bantin", 'Boolean'>
    readonly Bantin_Tapdoan: FieldRef<"PC_Bantin", 'Boolean'>
    readonly id_DMPhanloai: FieldRef<"PC_Bantin", 'Int'>
    readonly TenPhanloai: FieldRef<"PC_Bantin", 'String'>
    readonly id_DMPhanloaiCT: FieldRef<"PC_Bantin", 'Int'>
    readonly TenChitiet: FieldRef<"PC_Bantin", 'String'>
    readonly Url_Video: FieldRef<"PC_Bantin", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Bantin findUnique
   */
  export type PC_BantinFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bantin to fetch.
     */
    where: PC_BantinWhereUniqueInput
  }

  /**
   * PC_Bantin findUniqueOrThrow
   */
  export type PC_BantinFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bantin to fetch.
     */
    where: PC_BantinWhereUniqueInput
  }

  /**
   * PC_Bantin findFirst
   */
  export type PC_BantinFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bantin to fetch.
     */
    where?: PC_BantinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bantins to fetch.
     */
    orderBy?: PC_BantinOrderByWithRelationInput | PC_BantinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Bantins.
     */
    cursor?: PC_BantinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bantins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bantins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Bantins.
     */
    distinct?: PC_BantinScalarFieldEnum | PC_BantinScalarFieldEnum[]
  }

  /**
   * PC_Bantin findFirstOrThrow
   */
  export type PC_BantinFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bantin to fetch.
     */
    where?: PC_BantinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bantins to fetch.
     */
    orderBy?: PC_BantinOrderByWithRelationInput | PC_BantinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Bantins.
     */
    cursor?: PC_BantinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bantins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bantins.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Bantins.
     */
    distinct?: PC_BantinScalarFieldEnum | PC_BantinScalarFieldEnum[]
  }

  /**
   * PC_Bantin findMany
   */
  export type PC_BantinFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * Filter, which PC_Bantins to fetch.
     */
    where?: PC_BantinWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Bantins to fetch.
     */
    orderBy?: PC_BantinOrderByWithRelationInput | PC_BantinOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Bantins.
     */
    cursor?: PC_BantinWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Bantins from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Bantins.
     */
    skip?: number
    distinct?: PC_BantinScalarFieldEnum | PC_BantinScalarFieldEnum[]
  }

  /**
   * PC_Bantin create
   */
  export type PC_BantinCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Bantin.
     */
    data?: XOR<PC_BantinCreateInput, PC_BantinUncheckedCreateInput>
  }

  /**
   * PC_Bantin createMany
   */
  export type PC_BantinCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Bantins.
     */
    data: PC_BantinCreateManyInput | PC_BantinCreateManyInput[]
  }

  /**
   * PC_Bantin update
   */
  export type PC_BantinUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Bantin.
     */
    data: XOR<PC_BantinUpdateInput, PC_BantinUncheckedUpdateInput>
    /**
     * Choose, which PC_Bantin to update.
     */
    where: PC_BantinWhereUniqueInput
  }

  /**
   * PC_Bantin updateMany
   */
  export type PC_BantinUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Bantins.
     */
    data: XOR<PC_BantinUpdateManyMutationInput, PC_BantinUncheckedUpdateManyInput>
    /**
     * Filter which PC_Bantins to update
     */
    where?: PC_BantinWhereInput
  }

  /**
   * PC_Bantin upsert
   */
  export type PC_BantinUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Bantin to update in case it exists.
     */
    where: PC_BantinWhereUniqueInput
    /**
     * In case the PC_Bantin found by the `where` argument doesn't exist, create a new PC_Bantin with this data.
     */
    create: XOR<PC_BantinCreateInput, PC_BantinUncheckedCreateInput>
    /**
     * In case the PC_Bantin was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_BantinUpdateInput, PC_BantinUncheckedUpdateInput>
  }

  /**
   * PC_Bantin delete
   */
  export type PC_BantinDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
    /**
     * Filter which PC_Bantin to delete.
     */
    where: PC_BantinWhereUniqueInput
  }

  /**
   * PC_Bantin deleteMany
   */
  export type PC_BantinDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Bantins to delete
     */
    where?: PC_BantinWhereInput
  }

  /**
   * PC_Bantin without action
   */
  export type PC_BantinDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Bantin
     */
    select?: PC_BantinSelect<ExtArgs> | null
  }


  /**
   * Model PC_Benhnhan
   */

  export type AggregatePC_Benhnhan = {
    _count: PC_BenhnhanCountAggregateOutputType | null
    _avg: PC_BenhnhanAvgAggregateOutputType | null
    _sum: PC_BenhnhanSumAggregateOutputType | null
    _min: PC_BenhnhanMinAggregateOutputType | null
    _max: PC_BenhnhanMaxAggregateOutputType | null
  }

  export type PC_BenhnhanAvgAggregateOutputType = {
    Sync_Version: number | null
  }

  export type PC_BenhnhanSumAggregateOutputType = {
    Sync_Version: number | null
  }

  export type PC_BenhnhanMinAggregateOutputType = {
    id_Benhnhan: string | null
    Hoten: string | null
    Ten: string | null
    Hotenkhongdau: string | null
    Ngaythangnamsinh: string | null
    Namsinh: string | null
    Gioitinh: string | null
    Noilamviec: string | null
    SoCMND: string | null
    Email: string | null
    Dienthoai_didong: string | null
    Tamtru_diachi: string | null
    Tamtru_xaphuong: string | null
    Tamtru_idXaphuong: string | null
    Tamtru_quanhuyen: string | null
    Tamtru_idQuanhuyen: string | null
    Tamtru_tinhthanh: string | null
    Tamtru_idTinhthanh: string | null
    id_DMQuoctich: string | null
    Quoctich: string | null
    id_DMNghenghiep: string | null
    Nghenghiep: string | null
    id_DMDantoc: string | null
    Dantoc: string | null
    id_DMTongiao: string | null
    Tongiao: string | null
    Trangthai: string | null
    Cogiadinh: boolean | null
    Ngaygiotaohoso: Date | null
    id_Nhanvien: string | null
    DCNuocngoai: boolean | null
    id_ChiNhanh: string | null
    id_BenhnhanMoi: string | null
    id_BenhnhanMe: string | null
    MahosoIVF: string | null
    BNLH_Ten: string | null
    BNLH_DiaChi: string | null
    BNLH_SoDienThoai: string | null
    BNLH_QuanHe: string | null
    BNTT_Para: string | null
    BNTT_TienSuBanThan: string | null
    BNTT_TienSuGD: string | null
    BNTT_SanhTaiBV: boolean | null
    BNTT_DuocSinhTaiBV: boolean | null
    BNTT_MaTiemngua: string | null
    BNTT_ChoTrung: boolean | null
    BNTT_NhanTrung_TenVo: string | null
    BNTT_NhanTrung_NamsinhVo: string | null
    BNTT_NhanTrung_TenChong: string | null
    BNTT_NhanTrung_NamsinhChong: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
  }

  export type PC_BenhnhanMaxAggregateOutputType = {
    id_Benhnhan: string | null
    Hoten: string | null
    Ten: string | null
    Hotenkhongdau: string | null
    Ngaythangnamsinh: string | null
    Namsinh: string | null
    Gioitinh: string | null
    Noilamviec: string | null
    SoCMND: string | null
    Email: string | null
    Dienthoai_didong: string | null
    Tamtru_diachi: string | null
    Tamtru_xaphuong: string | null
    Tamtru_idXaphuong: string | null
    Tamtru_quanhuyen: string | null
    Tamtru_idQuanhuyen: string | null
    Tamtru_tinhthanh: string | null
    Tamtru_idTinhthanh: string | null
    id_DMQuoctich: string | null
    Quoctich: string | null
    id_DMNghenghiep: string | null
    Nghenghiep: string | null
    id_DMDantoc: string | null
    Dantoc: string | null
    id_DMTongiao: string | null
    Tongiao: string | null
    Trangthai: string | null
    Cogiadinh: boolean | null
    Ngaygiotaohoso: Date | null
    id_Nhanvien: string | null
    DCNuocngoai: boolean | null
    id_ChiNhanh: string | null
    id_BenhnhanMoi: string | null
    id_BenhnhanMe: string | null
    MahosoIVF: string | null
    BNLH_Ten: string | null
    BNLH_DiaChi: string | null
    BNLH_SoDienThoai: string | null
    BNLH_QuanHe: string | null
    BNTT_Para: string | null
    BNTT_TienSuBanThan: string | null
    BNTT_TienSuGD: string | null
    BNTT_SanhTaiBV: boolean | null
    BNTT_DuocSinhTaiBV: boolean | null
    BNTT_MaTiemngua: string | null
    BNTT_ChoTrung: boolean | null
    BNTT_NhanTrung_TenVo: string | null
    BNTT_NhanTrung_NamsinhVo: string | null
    BNTT_NhanTrung_TenChong: string | null
    BNTT_NhanTrung_NamsinhChong: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
  }

  export type PC_BenhnhanCountAggregateOutputType = {
    id_Benhnhan: number
    Hoten: number
    Ten: number
    Hotenkhongdau: number
    Ngaythangnamsinh: number
    Namsinh: number
    Gioitinh: number
    Noilamviec: number
    SoCMND: number
    Email: number
    Dienthoai_didong: number
    Tamtru_diachi: number
    Tamtru_xaphuong: number
    Tamtru_idXaphuong: number
    Tamtru_quanhuyen: number
    Tamtru_idQuanhuyen: number
    Tamtru_tinhthanh: number
    Tamtru_idTinhthanh: number
    id_DMQuoctich: number
    Quoctich: number
    id_DMNghenghiep: number
    Nghenghiep: number
    id_DMDantoc: number
    Dantoc: number
    id_DMTongiao: number
    Tongiao: number
    Trangthai: number
    Cogiadinh: number
    Ngaygiotaohoso: number
    id_Nhanvien: number
    DCNuocngoai: number
    id_ChiNhanh: number
    id_BenhnhanMoi: number
    id_BenhnhanMe: number
    MahosoIVF: number
    BNLH_Ten: number
    BNLH_DiaChi: number
    BNLH_SoDienThoai: number
    BNLH_QuanHe: number
    BNTT_Para: number
    BNTT_TienSuBanThan: number
    BNTT_TienSuGD: number
    BNTT_SanhTaiBV: number
    BNTT_DuocSinhTaiBV: number
    BNTT_MaTiemngua: number
    BNTT_ChoTrung: number
    BNTT_NhanTrung_TenVo: number
    BNTT_NhanTrung_NamsinhVo: number
    BNTT_NhanTrung_TenChong: number
    BNTT_NhanTrung_NamsinhChong: number
    Sync_Version: number
    Sync_Date: number
    Sync_To_All: number
    Sync_By_Branch: number
    _all: number
  }


  export type PC_BenhnhanAvgAggregateInputType = {
    Sync_Version?: true
  }

  export type PC_BenhnhanSumAggregateInputType = {
    Sync_Version?: true
  }

  export type PC_BenhnhanMinAggregateInputType = {
    id_Benhnhan?: true
    Hoten?: true
    Ten?: true
    Hotenkhongdau?: true
    Ngaythangnamsinh?: true
    Namsinh?: true
    Gioitinh?: true
    Noilamviec?: true
    SoCMND?: true
    Email?: true
    Dienthoai_didong?: true
    Tamtru_diachi?: true
    Tamtru_xaphuong?: true
    Tamtru_idXaphuong?: true
    Tamtru_quanhuyen?: true
    Tamtru_idQuanhuyen?: true
    Tamtru_tinhthanh?: true
    Tamtru_idTinhthanh?: true
    id_DMQuoctich?: true
    Quoctich?: true
    id_DMNghenghiep?: true
    Nghenghiep?: true
    id_DMDantoc?: true
    Dantoc?: true
    id_DMTongiao?: true
    Tongiao?: true
    Trangthai?: true
    Cogiadinh?: true
    Ngaygiotaohoso?: true
    id_Nhanvien?: true
    DCNuocngoai?: true
    id_ChiNhanh?: true
    id_BenhnhanMoi?: true
    id_BenhnhanMe?: true
    MahosoIVF?: true
    BNLH_Ten?: true
    BNLH_DiaChi?: true
    BNLH_SoDienThoai?: true
    BNLH_QuanHe?: true
    BNTT_Para?: true
    BNTT_TienSuBanThan?: true
    BNTT_TienSuGD?: true
    BNTT_SanhTaiBV?: true
    BNTT_DuocSinhTaiBV?: true
    BNTT_MaTiemngua?: true
    BNTT_ChoTrung?: true
    BNTT_NhanTrung_TenVo?: true
    BNTT_NhanTrung_NamsinhVo?: true
    BNTT_NhanTrung_TenChong?: true
    BNTT_NhanTrung_NamsinhChong?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
  }

  export type PC_BenhnhanMaxAggregateInputType = {
    id_Benhnhan?: true
    Hoten?: true
    Ten?: true
    Hotenkhongdau?: true
    Ngaythangnamsinh?: true
    Namsinh?: true
    Gioitinh?: true
    Noilamviec?: true
    SoCMND?: true
    Email?: true
    Dienthoai_didong?: true
    Tamtru_diachi?: true
    Tamtru_xaphuong?: true
    Tamtru_idXaphuong?: true
    Tamtru_quanhuyen?: true
    Tamtru_idQuanhuyen?: true
    Tamtru_tinhthanh?: true
    Tamtru_idTinhthanh?: true
    id_DMQuoctich?: true
    Quoctich?: true
    id_DMNghenghiep?: true
    Nghenghiep?: true
    id_DMDantoc?: true
    Dantoc?: true
    id_DMTongiao?: true
    Tongiao?: true
    Trangthai?: true
    Cogiadinh?: true
    Ngaygiotaohoso?: true
    id_Nhanvien?: true
    DCNuocngoai?: true
    id_ChiNhanh?: true
    id_BenhnhanMoi?: true
    id_BenhnhanMe?: true
    MahosoIVF?: true
    BNLH_Ten?: true
    BNLH_DiaChi?: true
    BNLH_SoDienThoai?: true
    BNLH_QuanHe?: true
    BNTT_Para?: true
    BNTT_TienSuBanThan?: true
    BNTT_TienSuGD?: true
    BNTT_SanhTaiBV?: true
    BNTT_DuocSinhTaiBV?: true
    BNTT_MaTiemngua?: true
    BNTT_ChoTrung?: true
    BNTT_NhanTrung_TenVo?: true
    BNTT_NhanTrung_NamsinhVo?: true
    BNTT_NhanTrung_TenChong?: true
    BNTT_NhanTrung_NamsinhChong?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
  }

  export type PC_BenhnhanCountAggregateInputType = {
    id_Benhnhan?: true
    Hoten?: true
    Ten?: true
    Hotenkhongdau?: true
    Ngaythangnamsinh?: true
    Namsinh?: true
    Gioitinh?: true
    Noilamviec?: true
    SoCMND?: true
    Email?: true
    Dienthoai_didong?: true
    Tamtru_diachi?: true
    Tamtru_xaphuong?: true
    Tamtru_idXaphuong?: true
    Tamtru_quanhuyen?: true
    Tamtru_idQuanhuyen?: true
    Tamtru_tinhthanh?: true
    Tamtru_idTinhthanh?: true
    id_DMQuoctich?: true
    Quoctich?: true
    id_DMNghenghiep?: true
    Nghenghiep?: true
    id_DMDantoc?: true
    Dantoc?: true
    id_DMTongiao?: true
    Tongiao?: true
    Trangthai?: true
    Cogiadinh?: true
    Ngaygiotaohoso?: true
    id_Nhanvien?: true
    DCNuocngoai?: true
    id_ChiNhanh?: true
    id_BenhnhanMoi?: true
    id_BenhnhanMe?: true
    MahosoIVF?: true
    BNLH_Ten?: true
    BNLH_DiaChi?: true
    BNLH_SoDienThoai?: true
    BNLH_QuanHe?: true
    BNTT_Para?: true
    BNTT_TienSuBanThan?: true
    BNTT_TienSuGD?: true
    BNTT_SanhTaiBV?: true
    BNTT_DuocSinhTaiBV?: true
    BNTT_MaTiemngua?: true
    BNTT_ChoTrung?: true
    BNTT_NhanTrung_TenVo?: true
    BNTT_NhanTrung_NamsinhVo?: true
    BNTT_NhanTrung_TenChong?: true
    BNTT_NhanTrung_NamsinhChong?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
    _all?: true
  }

  export type PC_BenhnhanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Benhnhan to aggregate.
     */
    where?: PC_BenhnhanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Benhnhans to fetch.
     */
    orderBy?: PC_BenhnhanOrderByWithRelationInput | PC_BenhnhanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_BenhnhanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Benhnhans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Benhnhans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Benhnhans
    **/
    _count?: true | PC_BenhnhanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_BenhnhanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_BenhnhanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_BenhnhanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_BenhnhanMaxAggregateInputType
  }

  export type GetPC_BenhnhanAggregateType<T extends PC_BenhnhanAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Benhnhan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Benhnhan[P]>
      : GetScalarType<T[P], AggregatePC_Benhnhan[P]>
  }




  export type PC_BenhnhanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_BenhnhanWhereInput
    orderBy?: PC_BenhnhanOrderByWithAggregationInput | PC_BenhnhanOrderByWithAggregationInput[]
    by: PC_BenhnhanScalarFieldEnum[] | PC_BenhnhanScalarFieldEnum
    having?: PC_BenhnhanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_BenhnhanCountAggregateInputType | true
    _avg?: PC_BenhnhanAvgAggregateInputType
    _sum?: PC_BenhnhanSumAggregateInputType
    _min?: PC_BenhnhanMinAggregateInputType
    _max?: PC_BenhnhanMaxAggregateInputType
  }

  export type PC_BenhnhanGroupByOutputType = {
    id_Benhnhan: string
    Hoten: string | null
    Ten: string | null
    Hotenkhongdau: string | null
    Ngaythangnamsinh: string | null
    Namsinh: string | null
    Gioitinh: string | null
    Noilamviec: string | null
    SoCMND: string | null
    Email: string | null
    Dienthoai_didong: string | null
    Tamtru_diachi: string | null
    Tamtru_xaphuong: string | null
    Tamtru_idXaphuong: string | null
    Tamtru_quanhuyen: string | null
    Tamtru_idQuanhuyen: string | null
    Tamtru_tinhthanh: string | null
    Tamtru_idTinhthanh: string | null
    id_DMQuoctich: string | null
    Quoctich: string | null
    id_DMNghenghiep: string | null
    Nghenghiep: string | null
    id_DMDantoc: string | null
    Dantoc: string | null
    id_DMTongiao: string | null
    Tongiao: string | null
    Trangthai: string | null
    Cogiadinh: boolean | null
    Ngaygiotaohoso: Date | null
    id_Nhanvien: string | null
    DCNuocngoai: boolean | null
    id_ChiNhanh: string | null
    id_BenhnhanMoi: string | null
    id_BenhnhanMe: string | null
    MahosoIVF: string | null
    BNLH_Ten: string | null
    BNLH_DiaChi: string | null
    BNLH_SoDienThoai: string | null
    BNLH_QuanHe: string | null
    BNTT_Para: string | null
    BNTT_TienSuBanThan: string | null
    BNTT_TienSuGD: string | null
    BNTT_SanhTaiBV: boolean | null
    BNTT_DuocSinhTaiBV: boolean | null
    BNTT_MaTiemngua: string | null
    BNTT_ChoTrung: boolean | null
    BNTT_NhanTrung_TenVo: string | null
    BNTT_NhanTrung_NamsinhVo: string | null
    BNTT_NhanTrung_TenChong: string | null
    BNTT_NhanTrung_NamsinhChong: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
    _count: PC_BenhnhanCountAggregateOutputType | null
    _avg: PC_BenhnhanAvgAggregateOutputType | null
    _sum: PC_BenhnhanSumAggregateOutputType | null
    _min: PC_BenhnhanMinAggregateOutputType | null
    _max: PC_BenhnhanMaxAggregateOutputType | null
  }

  type GetPC_BenhnhanGroupByPayload<T extends PC_BenhnhanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_BenhnhanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_BenhnhanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_BenhnhanGroupByOutputType[P]>
            : GetScalarType<T[P], PC_BenhnhanGroupByOutputType[P]>
        }
      >
    >


  export type PC_BenhnhanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_Benhnhan?: boolean
    Hoten?: boolean
    Ten?: boolean
    Hotenkhongdau?: boolean
    Ngaythangnamsinh?: boolean
    Namsinh?: boolean
    Gioitinh?: boolean
    Noilamviec?: boolean
    SoCMND?: boolean
    Email?: boolean
    Dienthoai_didong?: boolean
    Tamtru_diachi?: boolean
    Tamtru_xaphuong?: boolean
    Tamtru_idXaphuong?: boolean
    Tamtru_quanhuyen?: boolean
    Tamtru_idQuanhuyen?: boolean
    Tamtru_tinhthanh?: boolean
    Tamtru_idTinhthanh?: boolean
    id_DMQuoctich?: boolean
    Quoctich?: boolean
    id_DMNghenghiep?: boolean
    Nghenghiep?: boolean
    id_DMDantoc?: boolean
    Dantoc?: boolean
    id_DMTongiao?: boolean
    Tongiao?: boolean
    Trangthai?: boolean
    Cogiadinh?: boolean
    Ngaygiotaohoso?: boolean
    id_Nhanvien?: boolean
    DCNuocngoai?: boolean
    id_ChiNhanh?: boolean
    id_BenhnhanMoi?: boolean
    id_BenhnhanMe?: boolean
    MahosoIVF?: boolean
    BNLH_Ten?: boolean
    BNLH_DiaChi?: boolean
    BNLH_SoDienThoai?: boolean
    BNLH_QuanHe?: boolean
    BNTT_Para?: boolean
    BNTT_TienSuBanThan?: boolean
    BNTT_TienSuGD?: boolean
    BNTT_SanhTaiBV?: boolean
    BNTT_DuocSinhTaiBV?: boolean
    BNTT_MaTiemngua?: boolean
    BNTT_ChoTrung?: boolean
    BNTT_NhanTrung_TenVo?: boolean
    BNTT_NhanTrung_NamsinhVo?: boolean
    BNTT_NhanTrung_TenChong?: boolean
    BNTT_NhanTrung_NamsinhChong?: boolean
    Sync_Version?: boolean
    Sync_Date?: boolean
    Sync_To_All?: boolean
    Sync_By_Branch?: boolean
  }, ExtArgs["result"]["pC_Benhnhan"]>


  export type PC_BenhnhanSelectScalar = {
    id_Benhnhan?: boolean
    Hoten?: boolean
    Ten?: boolean
    Hotenkhongdau?: boolean
    Ngaythangnamsinh?: boolean
    Namsinh?: boolean
    Gioitinh?: boolean
    Noilamviec?: boolean
    SoCMND?: boolean
    Email?: boolean
    Dienthoai_didong?: boolean
    Tamtru_diachi?: boolean
    Tamtru_xaphuong?: boolean
    Tamtru_idXaphuong?: boolean
    Tamtru_quanhuyen?: boolean
    Tamtru_idQuanhuyen?: boolean
    Tamtru_tinhthanh?: boolean
    Tamtru_idTinhthanh?: boolean
    id_DMQuoctich?: boolean
    Quoctich?: boolean
    id_DMNghenghiep?: boolean
    Nghenghiep?: boolean
    id_DMDantoc?: boolean
    Dantoc?: boolean
    id_DMTongiao?: boolean
    Tongiao?: boolean
    Trangthai?: boolean
    Cogiadinh?: boolean
    Ngaygiotaohoso?: boolean
    id_Nhanvien?: boolean
    DCNuocngoai?: boolean
    id_ChiNhanh?: boolean
    id_BenhnhanMoi?: boolean
    id_BenhnhanMe?: boolean
    MahosoIVF?: boolean
    BNLH_Ten?: boolean
    BNLH_DiaChi?: boolean
    BNLH_SoDienThoai?: boolean
    BNLH_QuanHe?: boolean
    BNTT_Para?: boolean
    BNTT_TienSuBanThan?: boolean
    BNTT_TienSuGD?: boolean
    BNTT_SanhTaiBV?: boolean
    BNTT_DuocSinhTaiBV?: boolean
    BNTT_MaTiemngua?: boolean
    BNTT_ChoTrung?: boolean
    BNTT_NhanTrung_TenVo?: boolean
    BNTT_NhanTrung_NamsinhVo?: boolean
    BNTT_NhanTrung_TenChong?: boolean
    BNTT_NhanTrung_NamsinhChong?: boolean
    Sync_Version?: boolean
    Sync_Date?: boolean
    Sync_To_All?: boolean
    Sync_By_Branch?: boolean
  }


  export type $PC_BenhnhanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Benhnhan"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_Benhnhan: string
      Hoten: string | null
      Ten: string | null
      Hotenkhongdau: string | null
      Ngaythangnamsinh: string | null
      Namsinh: string | null
      Gioitinh: string | null
      Noilamviec: string | null
      SoCMND: string | null
      Email: string | null
      Dienthoai_didong: string | null
      Tamtru_diachi: string | null
      Tamtru_xaphuong: string | null
      Tamtru_idXaphuong: string | null
      Tamtru_quanhuyen: string | null
      Tamtru_idQuanhuyen: string | null
      Tamtru_tinhthanh: string | null
      Tamtru_idTinhthanh: string | null
      id_DMQuoctich: string | null
      Quoctich: string | null
      id_DMNghenghiep: string | null
      Nghenghiep: string | null
      id_DMDantoc: string | null
      Dantoc: string | null
      id_DMTongiao: string | null
      Tongiao: string | null
      Trangthai: string | null
      Cogiadinh: boolean | null
      Ngaygiotaohoso: Date | null
      id_Nhanvien: string | null
      DCNuocngoai: boolean | null
      id_ChiNhanh: string | null
      id_BenhnhanMoi: string | null
      id_BenhnhanMe: string | null
      MahosoIVF: string | null
      BNLH_Ten: string | null
      BNLH_DiaChi: string | null
      BNLH_SoDienThoai: string | null
      BNLH_QuanHe: string | null
      BNTT_Para: string | null
      BNTT_TienSuBanThan: string | null
      BNTT_TienSuGD: string | null
      BNTT_SanhTaiBV: boolean | null
      BNTT_DuocSinhTaiBV: boolean | null
      BNTT_MaTiemngua: string | null
      BNTT_ChoTrung: boolean | null
      BNTT_NhanTrung_TenVo: string | null
      BNTT_NhanTrung_NamsinhVo: string | null
      BNTT_NhanTrung_TenChong: string | null
      BNTT_NhanTrung_NamsinhChong: string | null
      Sync_Version: number | null
      Sync_Date: Date | null
      Sync_To_All: boolean | null
      Sync_By_Branch: string | null
    }, ExtArgs["result"]["pC_Benhnhan"]>
    composites: {}
  }

  type PC_BenhnhanGetPayload<S extends boolean | null | undefined | PC_BenhnhanDefaultArgs> = $Result.GetResult<Prisma.$PC_BenhnhanPayload, S>

  type PC_BenhnhanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_BenhnhanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_BenhnhanCountAggregateInputType | true
    }

  export interface PC_BenhnhanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Benhnhan'], meta: { name: 'PC_Benhnhan' } }
    /**
     * Find zero or one PC_Benhnhan that matches the filter.
     * @param {PC_BenhnhanFindUniqueArgs} args - Arguments to find a PC_Benhnhan
     * @example
     * // Get one PC_Benhnhan
     * const pC_Benhnhan = await prisma.pC_Benhnhan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_BenhnhanFindUniqueArgs>(args: SelectSubset<T, PC_BenhnhanFindUniqueArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Benhnhan that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_BenhnhanFindUniqueOrThrowArgs} args - Arguments to find a PC_Benhnhan
     * @example
     * // Get one PC_Benhnhan
     * const pC_Benhnhan = await prisma.pC_Benhnhan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_BenhnhanFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_BenhnhanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Benhnhan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanFindFirstArgs} args - Arguments to find a PC_Benhnhan
     * @example
     * // Get one PC_Benhnhan
     * const pC_Benhnhan = await prisma.pC_Benhnhan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_BenhnhanFindFirstArgs>(args?: SelectSubset<T, PC_BenhnhanFindFirstArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Benhnhan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanFindFirstOrThrowArgs} args - Arguments to find a PC_Benhnhan
     * @example
     * // Get one PC_Benhnhan
     * const pC_Benhnhan = await prisma.pC_Benhnhan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_BenhnhanFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_BenhnhanFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Benhnhans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Benhnhans
     * const pC_Benhnhans = await prisma.pC_Benhnhan.findMany()
     * 
     * // Get first 10 PC_Benhnhans
     * const pC_Benhnhans = await prisma.pC_Benhnhan.findMany({ take: 10 })
     * 
     * // Only select the `id_Benhnhan`
     * const pC_BenhnhanWithId_BenhnhanOnly = await prisma.pC_Benhnhan.findMany({ select: { id_Benhnhan: true } })
     * 
     */
    findMany<T extends PC_BenhnhanFindManyArgs>(args?: SelectSubset<T, PC_BenhnhanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Benhnhan.
     * @param {PC_BenhnhanCreateArgs} args - Arguments to create a PC_Benhnhan.
     * @example
     * // Create one PC_Benhnhan
     * const PC_Benhnhan = await prisma.pC_Benhnhan.create({
     *   data: {
     *     // ... data to create a PC_Benhnhan
     *   }
     * })
     * 
     */
    create<T extends PC_BenhnhanCreateArgs>(args: SelectSubset<T, PC_BenhnhanCreateArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Benhnhans.
     * @param {PC_BenhnhanCreateManyArgs} args - Arguments to create many PC_Benhnhans.
     * @example
     * // Create many PC_Benhnhans
     * const pC_Benhnhan = await prisma.pC_Benhnhan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_BenhnhanCreateManyArgs>(args?: SelectSubset<T, PC_BenhnhanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Benhnhan.
     * @param {PC_BenhnhanDeleteArgs} args - Arguments to delete one PC_Benhnhan.
     * @example
     * // Delete one PC_Benhnhan
     * const PC_Benhnhan = await prisma.pC_Benhnhan.delete({
     *   where: {
     *     // ... filter to delete one PC_Benhnhan
     *   }
     * })
     * 
     */
    delete<T extends PC_BenhnhanDeleteArgs>(args: SelectSubset<T, PC_BenhnhanDeleteArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Benhnhan.
     * @param {PC_BenhnhanUpdateArgs} args - Arguments to update one PC_Benhnhan.
     * @example
     * // Update one PC_Benhnhan
     * const pC_Benhnhan = await prisma.pC_Benhnhan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_BenhnhanUpdateArgs>(args: SelectSubset<T, PC_BenhnhanUpdateArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Benhnhans.
     * @param {PC_BenhnhanDeleteManyArgs} args - Arguments to filter PC_Benhnhans to delete.
     * @example
     * // Delete a few PC_Benhnhans
     * const { count } = await prisma.pC_Benhnhan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_BenhnhanDeleteManyArgs>(args?: SelectSubset<T, PC_BenhnhanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Benhnhans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Benhnhans
     * const pC_Benhnhan = await prisma.pC_Benhnhan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_BenhnhanUpdateManyArgs>(args: SelectSubset<T, PC_BenhnhanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Benhnhan.
     * @param {PC_BenhnhanUpsertArgs} args - Arguments to update or create a PC_Benhnhan.
     * @example
     * // Update or create a PC_Benhnhan
     * const pC_Benhnhan = await prisma.pC_Benhnhan.upsert({
     *   create: {
     *     // ... data to create a PC_Benhnhan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Benhnhan we want to update
     *   }
     * })
     */
    upsert<T extends PC_BenhnhanUpsertArgs>(args: SelectSubset<T, PC_BenhnhanUpsertArgs<ExtArgs>>): Prisma__PC_BenhnhanClient<$Result.GetResult<Prisma.$PC_BenhnhanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Benhnhans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanCountArgs} args - Arguments to filter PC_Benhnhans to count.
     * @example
     * // Count the number of PC_Benhnhans
     * const count = await prisma.pC_Benhnhan.count({
     *   where: {
     *     // ... the filter for the PC_Benhnhans we want to count
     *   }
     * })
    **/
    count<T extends PC_BenhnhanCountArgs>(
      args?: Subset<T, PC_BenhnhanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_BenhnhanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Benhnhan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_BenhnhanAggregateArgs>(args: Subset<T, PC_BenhnhanAggregateArgs>): Prisma.PrismaPromise<GetPC_BenhnhanAggregateType<T>>

    /**
     * Group by PC_Benhnhan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_BenhnhanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_BenhnhanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_BenhnhanGroupByArgs['orderBy'] }
        : { orderBy?: PC_BenhnhanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_BenhnhanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_BenhnhanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Benhnhan model
   */
  readonly fields: PC_BenhnhanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Benhnhan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_BenhnhanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Benhnhan model
   */ 
  interface PC_BenhnhanFieldRefs {
    readonly id_Benhnhan: FieldRef<"PC_Benhnhan", 'String'>
    readonly Hoten: FieldRef<"PC_Benhnhan", 'String'>
    readonly Ten: FieldRef<"PC_Benhnhan", 'String'>
    readonly Hotenkhongdau: FieldRef<"PC_Benhnhan", 'String'>
    readonly Ngaythangnamsinh: FieldRef<"PC_Benhnhan", 'String'>
    readonly Namsinh: FieldRef<"PC_Benhnhan", 'String'>
    readonly Gioitinh: FieldRef<"PC_Benhnhan", 'String'>
    readonly Noilamviec: FieldRef<"PC_Benhnhan", 'String'>
    readonly SoCMND: FieldRef<"PC_Benhnhan", 'String'>
    readonly Email: FieldRef<"PC_Benhnhan", 'String'>
    readonly Dienthoai_didong: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_diachi: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_xaphuong: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_idXaphuong: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_quanhuyen: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_idQuanhuyen: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_tinhthanh: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tamtru_idTinhthanh: FieldRef<"PC_Benhnhan", 'String'>
    readonly id_DMQuoctich: FieldRef<"PC_Benhnhan", 'String'>
    readonly Quoctich: FieldRef<"PC_Benhnhan", 'String'>
    readonly id_DMNghenghiep: FieldRef<"PC_Benhnhan", 'String'>
    readonly Nghenghiep: FieldRef<"PC_Benhnhan", 'String'>
    readonly id_DMDantoc: FieldRef<"PC_Benhnhan", 'String'>
    readonly Dantoc: FieldRef<"PC_Benhnhan", 'String'>
    readonly id_DMTongiao: FieldRef<"PC_Benhnhan", 'String'>
    readonly Tongiao: FieldRef<"PC_Benhnhan", 'String'>
    readonly Trangthai: FieldRef<"PC_Benhnhan", 'String'>
    readonly Cogiadinh: FieldRef<"PC_Benhnhan", 'Boolean'>
    readonly Ngaygiotaohoso: FieldRef<"PC_Benhnhan", 'DateTime'>
    readonly id_Nhanvien: FieldRef<"PC_Benhnhan", 'String'>
    readonly DCNuocngoai: FieldRef<"PC_Benhnhan", 'Boolean'>
    readonly id_ChiNhanh: FieldRef<"PC_Benhnhan", 'String'>
    readonly id_BenhnhanMoi: FieldRef<"PC_Benhnhan", 'String'>
    readonly id_BenhnhanMe: FieldRef<"PC_Benhnhan", 'String'>
    readonly MahosoIVF: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNLH_Ten: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNLH_DiaChi: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNLH_SoDienThoai: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNLH_QuanHe: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_Para: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_TienSuBanThan: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_TienSuGD: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_SanhTaiBV: FieldRef<"PC_Benhnhan", 'Boolean'>
    readonly BNTT_DuocSinhTaiBV: FieldRef<"PC_Benhnhan", 'Boolean'>
    readonly BNTT_MaTiemngua: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_ChoTrung: FieldRef<"PC_Benhnhan", 'Boolean'>
    readonly BNTT_NhanTrung_TenVo: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_NhanTrung_NamsinhVo: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_NhanTrung_TenChong: FieldRef<"PC_Benhnhan", 'String'>
    readonly BNTT_NhanTrung_NamsinhChong: FieldRef<"PC_Benhnhan", 'String'>
    readonly Sync_Version: FieldRef<"PC_Benhnhan", 'Int'>
    readonly Sync_Date: FieldRef<"PC_Benhnhan", 'DateTime'>
    readonly Sync_To_All: FieldRef<"PC_Benhnhan", 'Boolean'>
    readonly Sync_By_Branch: FieldRef<"PC_Benhnhan", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Benhnhan findUnique
   */
  export type PC_BenhnhanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Benhnhan to fetch.
     */
    where: PC_BenhnhanWhereUniqueInput
  }

  /**
   * PC_Benhnhan findUniqueOrThrow
   */
  export type PC_BenhnhanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Benhnhan to fetch.
     */
    where: PC_BenhnhanWhereUniqueInput
  }

  /**
   * PC_Benhnhan findFirst
   */
  export type PC_BenhnhanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Benhnhan to fetch.
     */
    where?: PC_BenhnhanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Benhnhans to fetch.
     */
    orderBy?: PC_BenhnhanOrderByWithRelationInput | PC_BenhnhanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Benhnhans.
     */
    cursor?: PC_BenhnhanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Benhnhans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Benhnhans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Benhnhans.
     */
    distinct?: PC_BenhnhanScalarFieldEnum | PC_BenhnhanScalarFieldEnum[]
  }

  /**
   * PC_Benhnhan findFirstOrThrow
   */
  export type PC_BenhnhanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Benhnhan to fetch.
     */
    where?: PC_BenhnhanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Benhnhans to fetch.
     */
    orderBy?: PC_BenhnhanOrderByWithRelationInput | PC_BenhnhanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Benhnhans.
     */
    cursor?: PC_BenhnhanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Benhnhans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Benhnhans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Benhnhans.
     */
    distinct?: PC_BenhnhanScalarFieldEnum | PC_BenhnhanScalarFieldEnum[]
  }

  /**
   * PC_Benhnhan findMany
   */
  export type PC_BenhnhanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Benhnhans to fetch.
     */
    where?: PC_BenhnhanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Benhnhans to fetch.
     */
    orderBy?: PC_BenhnhanOrderByWithRelationInput | PC_BenhnhanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Benhnhans.
     */
    cursor?: PC_BenhnhanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Benhnhans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Benhnhans.
     */
    skip?: number
    distinct?: PC_BenhnhanScalarFieldEnum | PC_BenhnhanScalarFieldEnum[]
  }

  /**
   * PC_Benhnhan create
   */
  export type PC_BenhnhanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Benhnhan.
     */
    data: XOR<PC_BenhnhanCreateInput, PC_BenhnhanUncheckedCreateInput>
  }

  /**
   * PC_Benhnhan createMany
   */
  export type PC_BenhnhanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Benhnhans.
     */
    data: PC_BenhnhanCreateManyInput | PC_BenhnhanCreateManyInput[]
  }

  /**
   * PC_Benhnhan update
   */
  export type PC_BenhnhanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Benhnhan.
     */
    data: XOR<PC_BenhnhanUpdateInput, PC_BenhnhanUncheckedUpdateInput>
    /**
     * Choose, which PC_Benhnhan to update.
     */
    where: PC_BenhnhanWhereUniqueInput
  }

  /**
   * PC_Benhnhan updateMany
   */
  export type PC_BenhnhanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Benhnhans.
     */
    data: XOR<PC_BenhnhanUpdateManyMutationInput, PC_BenhnhanUncheckedUpdateManyInput>
    /**
     * Filter which PC_Benhnhans to update
     */
    where?: PC_BenhnhanWhereInput
  }

  /**
   * PC_Benhnhan upsert
   */
  export type PC_BenhnhanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Benhnhan to update in case it exists.
     */
    where: PC_BenhnhanWhereUniqueInput
    /**
     * In case the PC_Benhnhan found by the `where` argument doesn't exist, create a new PC_Benhnhan with this data.
     */
    create: XOR<PC_BenhnhanCreateInput, PC_BenhnhanUncheckedCreateInput>
    /**
     * In case the PC_Benhnhan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_BenhnhanUpdateInput, PC_BenhnhanUncheckedUpdateInput>
  }

  /**
   * PC_Benhnhan delete
   */
  export type PC_BenhnhanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
    /**
     * Filter which PC_Benhnhan to delete.
     */
    where: PC_BenhnhanWhereUniqueInput
  }

  /**
   * PC_Benhnhan deleteMany
   */
  export type PC_BenhnhanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Benhnhans to delete
     */
    where?: PC_BenhnhanWhereInput
  }

  /**
   * PC_Benhnhan without action
   */
  export type PC_BenhnhanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Benhnhan
     */
    select?: PC_BenhnhanSelect<ExtArgs> | null
  }


  /**
   * Model PC_Customer
   */

  export type AggregatePC_Customer = {
    _count: PC_CustomerCountAggregateOutputType | null
    _min: PC_CustomerMinAggregateOutputType | null
    _max: PC_CustomerMaxAggregateOutputType | null
  }

  export type PC_CustomerMinAggregateOutputType = {
    pcId: string | null
    name: string | null
    birthday: string | null
    phoneNumber: string | null
    gender: string | null
    idCardNo: string | null
    email: string | null
    careerCode: string | null
    nationalityCode: string | null
    ethnicCode: string | null
    countryCode: string | null
    cityCode: string | null
    districtCode: string | null
    wardCode: string | null
    homeAddress: string | null
    managerId: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type PC_CustomerMaxAggregateOutputType = {
    pcId: string | null
    name: string | null
    birthday: string | null
    phoneNumber: string | null
    gender: string | null
    idCardNo: string | null
    email: string | null
    careerCode: string | null
    nationalityCode: string | null
    ethnicCode: string | null
    countryCode: string | null
    cityCode: string | null
    districtCode: string | null
    wardCode: string | null
    homeAddress: string | null
    managerId: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type PC_CustomerCountAggregateOutputType = {
    pcId: number
    name: number
    birthday: number
    phoneNumber: number
    gender: number
    idCardNo: number
    email: number
    careerCode: number
    nationalityCode: number
    ethnicCode: number
    countryCode: number
    cityCode: number
    districtCode: number
    wardCode: number
    homeAddress: number
    managerId: number
    status: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type PC_CustomerMinAggregateInputType = {
    pcId?: true
    name?: true
    birthday?: true
    phoneNumber?: true
    gender?: true
    idCardNo?: true
    email?: true
    careerCode?: true
    nationalityCode?: true
    ethnicCode?: true
    countryCode?: true
    cityCode?: true
    districtCode?: true
    wardCode?: true
    homeAddress?: true
    managerId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type PC_CustomerMaxAggregateInputType = {
    pcId?: true
    name?: true
    birthday?: true
    phoneNumber?: true
    gender?: true
    idCardNo?: true
    email?: true
    careerCode?: true
    nationalityCode?: true
    ethnicCode?: true
    countryCode?: true
    cityCode?: true
    districtCode?: true
    wardCode?: true
    homeAddress?: true
    managerId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type PC_CustomerCountAggregateInputType = {
    pcId?: true
    name?: true
    birthday?: true
    phoneNumber?: true
    gender?: true
    idCardNo?: true
    email?: true
    careerCode?: true
    nationalityCode?: true
    ethnicCode?: true
    countryCode?: true
    cityCode?: true
    districtCode?: true
    wardCode?: true
    homeAddress?: true
    managerId?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type PC_CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Customer to aggregate.
     */
    where?: PC_CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Customers to fetch.
     */
    orderBy?: PC_CustomerOrderByWithRelationInput | PC_CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Customers
    **/
    _count?: true | PC_CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_CustomerMaxAggregateInputType
  }

  export type GetPC_CustomerAggregateType<T extends PC_CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Customer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Customer[P]>
      : GetScalarType<T[P], AggregatePC_Customer[P]>
  }




  export type PC_CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_CustomerWhereInput
    orderBy?: PC_CustomerOrderByWithAggregationInput | PC_CustomerOrderByWithAggregationInput[]
    by: PC_CustomerScalarFieldEnum[] | PC_CustomerScalarFieldEnum
    having?: PC_CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_CustomerCountAggregateInputType | true
    _min?: PC_CustomerMinAggregateInputType
    _max?: PC_CustomerMaxAggregateInputType
  }

  export type PC_CustomerGroupByOutputType = {
    pcId: string
    name: string | null
    birthday: string | null
    phoneNumber: string | null
    gender: string | null
    idCardNo: string | null
    email: string | null
    careerCode: string | null
    nationalityCode: string | null
    ethnicCode: string | null
    countryCode: string | null
    cityCode: string | null
    districtCode: string | null
    wardCode: string | null
    homeAddress: string | null
    managerId: string | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    _count: PC_CustomerCountAggregateOutputType | null
    _min: PC_CustomerMinAggregateOutputType | null
    _max: PC_CustomerMaxAggregateOutputType | null
  }

  type GetPC_CustomerGroupByPayload<T extends PC_CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], PC_CustomerGroupByOutputType[P]>
        }
      >
    >


  export type PC_CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    pcId?: boolean
    name?: boolean
    birthday?: boolean
    phoneNumber?: boolean
    gender?: boolean
    idCardNo?: boolean
    email?: boolean
    careerCode?: boolean
    nationalityCode?: boolean
    ethnicCode?: boolean
    countryCode?: boolean
    cityCode?: boolean
    districtCode?: boolean
    wardCode?: boolean
    homeAddress?: boolean
    managerId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["pC_Customer"]>


  export type PC_CustomerSelectScalar = {
    pcId?: boolean
    name?: boolean
    birthday?: boolean
    phoneNumber?: boolean
    gender?: boolean
    idCardNo?: boolean
    email?: boolean
    careerCode?: boolean
    nationalityCode?: boolean
    ethnicCode?: boolean
    countryCode?: boolean
    cityCode?: boolean
    districtCode?: boolean
    wardCode?: boolean
    homeAddress?: boolean
    managerId?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }


  export type $PC_CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Customer"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      pcId: string
      name: string | null
      birthday: string | null
      phoneNumber: string | null
      gender: string | null
      idCardNo: string | null
      email: string | null
      careerCode: string | null
      nationalityCode: string | null
      ethnicCode: string | null
      countryCode: string | null
      cityCode: string | null
      districtCode: string | null
      wardCode: string | null
      homeAddress: string | null
      managerId: string | null
      status: string | null
      createdAt: Date | null
      updatedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["pC_Customer"]>
    composites: {}
  }

  type PC_CustomerGetPayload<S extends boolean | null | undefined | PC_CustomerDefaultArgs> = $Result.GetResult<Prisma.$PC_CustomerPayload, S>

  type PC_CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_CustomerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_CustomerCountAggregateInputType | true
    }

  export interface PC_CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Customer'], meta: { name: 'PC_Customer' } }
    /**
     * Find zero or one PC_Customer that matches the filter.
     * @param {PC_CustomerFindUniqueArgs} args - Arguments to find a PC_Customer
     * @example
     * // Get one PC_Customer
     * const pC_Customer = await prisma.pC_Customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_CustomerFindUniqueArgs>(args: SelectSubset<T, PC_CustomerFindUniqueArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Customer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_CustomerFindUniqueOrThrowArgs} args - Arguments to find a PC_Customer
     * @example
     * // Get one PC_Customer
     * const pC_Customer = await prisma.pC_Customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerFindFirstArgs} args - Arguments to find a PC_Customer
     * @example
     * // Get one PC_Customer
     * const pC_Customer = await prisma.pC_Customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_CustomerFindFirstArgs>(args?: SelectSubset<T, PC_CustomerFindFirstArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerFindFirstOrThrowArgs} args - Arguments to find a PC_Customer
     * @example
     * // Get one PC_Customer
     * const pC_Customer = await prisma.pC_Customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Customers
     * const pC_Customers = await prisma.pC_Customer.findMany()
     * 
     * // Get first 10 PC_Customers
     * const pC_Customers = await prisma.pC_Customer.findMany({ take: 10 })
     * 
     * // Only select the `pcId`
     * const pC_CustomerWithPcIdOnly = await prisma.pC_Customer.findMany({ select: { pcId: true } })
     * 
     */
    findMany<T extends PC_CustomerFindManyArgs>(args?: SelectSubset<T, PC_CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Customer.
     * @param {PC_CustomerCreateArgs} args - Arguments to create a PC_Customer.
     * @example
     * // Create one PC_Customer
     * const PC_Customer = await prisma.pC_Customer.create({
     *   data: {
     *     // ... data to create a PC_Customer
     *   }
     * })
     * 
     */
    create<T extends PC_CustomerCreateArgs>(args: SelectSubset<T, PC_CustomerCreateArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Customers.
     * @param {PC_CustomerCreateManyArgs} args - Arguments to create many PC_Customers.
     * @example
     * // Create many PC_Customers
     * const pC_Customer = await prisma.pC_Customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_CustomerCreateManyArgs>(args?: SelectSubset<T, PC_CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Customer.
     * @param {PC_CustomerDeleteArgs} args - Arguments to delete one PC_Customer.
     * @example
     * // Delete one PC_Customer
     * const PC_Customer = await prisma.pC_Customer.delete({
     *   where: {
     *     // ... filter to delete one PC_Customer
     *   }
     * })
     * 
     */
    delete<T extends PC_CustomerDeleteArgs>(args: SelectSubset<T, PC_CustomerDeleteArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Customer.
     * @param {PC_CustomerUpdateArgs} args - Arguments to update one PC_Customer.
     * @example
     * // Update one PC_Customer
     * const pC_Customer = await prisma.pC_Customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_CustomerUpdateArgs>(args: SelectSubset<T, PC_CustomerUpdateArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Customers.
     * @param {PC_CustomerDeleteManyArgs} args - Arguments to filter PC_Customers to delete.
     * @example
     * // Delete a few PC_Customers
     * const { count } = await prisma.pC_Customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_CustomerDeleteManyArgs>(args?: SelectSubset<T, PC_CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Customers
     * const pC_Customer = await prisma.pC_Customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_CustomerUpdateManyArgs>(args: SelectSubset<T, PC_CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Customer.
     * @param {PC_CustomerUpsertArgs} args - Arguments to update or create a PC_Customer.
     * @example
     * // Update or create a PC_Customer
     * const pC_Customer = await prisma.pC_Customer.upsert({
     *   create: {
     *     // ... data to create a PC_Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Customer we want to update
     *   }
     * })
     */
    upsert<T extends PC_CustomerUpsertArgs>(args: SelectSubset<T, PC_CustomerUpsertArgs<ExtArgs>>): Prisma__PC_CustomerClient<$Result.GetResult<Prisma.$PC_CustomerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerCountArgs} args - Arguments to filter PC_Customers to count.
     * @example
     * // Count the number of PC_Customers
     * const count = await prisma.pC_Customer.count({
     *   where: {
     *     // ... the filter for the PC_Customers we want to count
     *   }
     * })
    **/
    count<T extends PC_CustomerCountArgs>(
      args?: Subset<T, PC_CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_CustomerAggregateArgs>(args: Subset<T, PC_CustomerAggregateArgs>): Prisma.PrismaPromise<GetPC_CustomerAggregateType<T>>

    /**
     * Group by PC_Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_CustomerGroupByArgs['orderBy'] }
        : { orderBy?: PC_CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_CustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Customer model
   */
  readonly fields: PC_CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Customer model
   */ 
  interface PC_CustomerFieldRefs {
    readonly pcId: FieldRef<"PC_Customer", 'String'>
    readonly name: FieldRef<"PC_Customer", 'String'>
    readonly birthday: FieldRef<"PC_Customer", 'String'>
    readonly phoneNumber: FieldRef<"PC_Customer", 'String'>
    readonly gender: FieldRef<"PC_Customer", 'String'>
    readonly idCardNo: FieldRef<"PC_Customer", 'String'>
    readonly email: FieldRef<"PC_Customer", 'String'>
    readonly careerCode: FieldRef<"PC_Customer", 'String'>
    readonly nationalityCode: FieldRef<"PC_Customer", 'String'>
    readonly ethnicCode: FieldRef<"PC_Customer", 'String'>
    readonly countryCode: FieldRef<"PC_Customer", 'String'>
    readonly cityCode: FieldRef<"PC_Customer", 'String'>
    readonly districtCode: FieldRef<"PC_Customer", 'String'>
    readonly wardCode: FieldRef<"PC_Customer", 'String'>
    readonly homeAddress: FieldRef<"PC_Customer", 'String'>
    readonly managerId: FieldRef<"PC_Customer", 'String'>
    readonly status: FieldRef<"PC_Customer", 'String'>
    readonly createdAt: FieldRef<"PC_Customer", 'DateTime'>
    readonly updatedAt: FieldRef<"PC_Customer", 'DateTime'>
    readonly deletedAt: FieldRef<"PC_Customer", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * PC_Customer findUnique
   */
  export type PC_CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * Filter, which PC_Customer to fetch.
     */
    where: PC_CustomerWhereUniqueInput
  }

  /**
   * PC_Customer findUniqueOrThrow
   */
  export type PC_CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * Filter, which PC_Customer to fetch.
     */
    where: PC_CustomerWhereUniqueInput
  }

  /**
   * PC_Customer findFirst
   */
  export type PC_CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * Filter, which PC_Customer to fetch.
     */
    where?: PC_CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Customers to fetch.
     */
    orderBy?: PC_CustomerOrderByWithRelationInput | PC_CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Customers.
     */
    cursor?: PC_CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Customers.
     */
    distinct?: PC_CustomerScalarFieldEnum | PC_CustomerScalarFieldEnum[]
  }

  /**
   * PC_Customer findFirstOrThrow
   */
  export type PC_CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * Filter, which PC_Customer to fetch.
     */
    where?: PC_CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Customers to fetch.
     */
    orderBy?: PC_CustomerOrderByWithRelationInput | PC_CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Customers.
     */
    cursor?: PC_CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Customers.
     */
    distinct?: PC_CustomerScalarFieldEnum | PC_CustomerScalarFieldEnum[]
  }

  /**
   * PC_Customer findMany
   */
  export type PC_CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * Filter, which PC_Customers to fetch.
     */
    where?: PC_CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Customers to fetch.
     */
    orderBy?: PC_CustomerOrderByWithRelationInput | PC_CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Customers.
     */
    cursor?: PC_CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Customers.
     */
    skip?: number
    distinct?: PC_CustomerScalarFieldEnum | PC_CustomerScalarFieldEnum[]
  }

  /**
   * PC_Customer create
   */
  export type PC_CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Customer.
     */
    data: XOR<PC_CustomerCreateInput, PC_CustomerUncheckedCreateInput>
  }

  /**
   * PC_Customer createMany
   */
  export type PC_CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Customers.
     */
    data: PC_CustomerCreateManyInput | PC_CustomerCreateManyInput[]
  }

  /**
   * PC_Customer update
   */
  export type PC_CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Customer.
     */
    data: XOR<PC_CustomerUpdateInput, PC_CustomerUncheckedUpdateInput>
    /**
     * Choose, which PC_Customer to update.
     */
    where: PC_CustomerWhereUniqueInput
  }

  /**
   * PC_Customer updateMany
   */
  export type PC_CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Customers.
     */
    data: XOR<PC_CustomerUpdateManyMutationInput, PC_CustomerUncheckedUpdateManyInput>
    /**
     * Filter which PC_Customers to update
     */
    where?: PC_CustomerWhereInput
  }

  /**
   * PC_Customer upsert
   */
  export type PC_CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Customer to update in case it exists.
     */
    where: PC_CustomerWhereUniqueInput
    /**
     * In case the PC_Customer found by the `where` argument doesn't exist, create a new PC_Customer with this data.
     */
    create: XOR<PC_CustomerCreateInput, PC_CustomerUncheckedCreateInput>
    /**
     * In case the PC_Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_CustomerUpdateInput, PC_CustomerUncheckedUpdateInput>
  }

  /**
   * PC_Customer delete
   */
  export type PC_CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
    /**
     * Filter which PC_Customer to delete.
     */
    where: PC_CustomerWhereUniqueInput
  }

  /**
   * PC_Customer deleteMany
   */
  export type PC_CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Customers to delete
     */
    where?: PC_CustomerWhereInput
  }

  /**
   * PC_Customer without action
   */
  export type PC_CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Customer
     */
    select?: PC_CustomerSelect<ExtArgs> | null
  }


  /**
   * Model PC_HosoIVF
   */

  export type AggregatePC_HosoIVF = {
    _count: PC_HosoIVFCountAggregateOutputType | null
    _avg: PC_HosoIVFAvgAggregateOutputType | null
    _sum: PC_HosoIVFSumAggregateOutputType | null
    _min: PC_HosoIVFMinAggregateOutputType | null
    _max: PC_HosoIVFMaxAggregateOutputType | null
  }

  export type PC_HosoIVFAvgAggregateOutputType = {
    id_HosoIVF: number | null
    Namluutru: number | null
    Sohientai: number | null
    Sync_Version: number | null
  }

  export type PC_HosoIVFSumAggregateOutputType = {
    id_HosoIVF: number | null
    Namluutru: number | null
    Sohientai: number | null
    Sync_Version: number | null
  }

  export type PC_HosoIVFMinAggregateOutputType = {
    id_HosoIVF: number | null
    MasoHS: string | null
    Namluutru: number | null
    Sohientai: number | null
    id_BN_Vo: string | null
    id_BN_Chong: string | null
    Trangthai: string | null
    Ngaytao: Date | null
    id_nhanvien: string | null
    id_Khoaphong: string | null
    Phanloai: string | null
    Ghichu: string | null
    id_BSGuibenh: string | null
    Hoten_BSGuibenh: string | null
    id_ChiNhanh: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
  }

  export type PC_HosoIVFMaxAggregateOutputType = {
    id_HosoIVF: number | null
    MasoHS: string | null
    Namluutru: number | null
    Sohientai: number | null
    id_BN_Vo: string | null
    id_BN_Chong: string | null
    Trangthai: string | null
    Ngaytao: Date | null
    id_nhanvien: string | null
    id_Khoaphong: string | null
    Phanloai: string | null
    Ghichu: string | null
    id_BSGuibenh: string | null
    Hoten_BSGuibenh: string | null
    id_ChiNhanh: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
  }

  export type PC_HosoIVFCountAggregateOutputType = {
    id_HosoIVF: number
    MasoHS: number
    Namluutru: number
    Sohientai: number
    id_BN_Vo: number
    id_BN_Chong: number
    Trangthai: number
    Ngaytao: number
    id_nhanvien: number
    id_Khoaphong: number
    Phanloai: number
    Ghichu: number
    id_BSGuibenh: number
    Hoten_BSGuibenh: number
    id_ChiNhanh: number
    Sync_Version: number
    Sync_Date: number
    Sync_To_All: number
    Sync_By_Branch: number
    _all: number
  }


  export type PC_HosoIVFAvgAggregateInputType = {
    id_HosoIVF?: true
    Namluutru?: true
    Sohientai?: true
    Sync_Version?: true
  }

  export type PC_HosoIVFSumAggregateInputType = {
    id_HosoIVF?: true
    Namluutru?: true
    Sohientai?: true
    Sync_Version?: true
  }

  export type PC_HosoIVFMinAggregateInputType = {
    id_HosoIVF?: true
    MasoHS?: true
    Namluutru?: true
    Sohientai?: true
    id_BN_Vo?: true
    id_BN_Chong?: true
    Trangthai?: true
    Ngaytao?: true
    id_nhanvien?: true
    id_Khoaphong?: true
    Phanloai?: true
    Ghichu?: true
    id_BSGuibenh?: true
    Hoten_BSGuibenh?: true
    id_ChiNhanh?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
  }

  export type PC_HosoIVFMaxAggregateInputType = {
    id_HosoIVF?: true
    MasoHS?: true
    Namluutru?: true
    Sohientai?: true
    id_BN_Vo?: true
    id_BN_Chong?: true
    Trangthai?: true
    Ngaytao?: true
    id_nhanvien?: true
    id_Khoaphong?: true
    Phanloai?: true
    Ghichu?: true
    id_BSGuibenh?: true
    Hoten_BSGuibenh?: true
    id_ChiNhanh?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
  }

  export type PC_HosoIVFCountAggregateInputType = {
    id_HosoIVF?: true
    MasoHS?: true
    Namluutru?: true
    Sohientai?: true
    id_BN_Vo?: true
    id_BN_Chong?: true
    Trangthai?: true
    Ngaytao?: true
    id_nhanvien?: true
    id_Khoaphong?: true
    Phanloai?: true
    Ghichu?: true
    id_BSGuibenh?: true
    Hoten_BSGuibenh?: true
    id_ChiNhanh?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
    _all?: true
  }

  export type PC_HosoIVFAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_HosoIVF to aggregate.
     */
    where?: PC_HosoIVFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_HosoIVFS to fetch.
     */
    orderBy?: PC_HosoIVFOrderByWithRelationInput | PC_HosoIVFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_HosoIVFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_HosoIVFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_HosoIVFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_HosoIVFS
    **/
    _count?: true | PC_HosoIVFCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_HosoIVFAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_HosoIVFSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_HosoIVFMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_HosoIVFMaxAggregateInputType
  }

  export type GetPC_HosoIVFAggregateType<T extends PC_HosoIVFAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_HosoIVF]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_HosoIVF[P]>
      : GetScalarType<T[P], AggregatePC_HosoIVF[P]>
  }




  export type PC_HosoIVFGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_HosoIVFWhereInput
    orderBy?: PC_HosoIVFOrderByWithAggregationInput | PC_HosoIVFOrderByWithAggregationInput[]
    by: PC_HosoIVFScalarFieldEnum[] | PC_HosoIVFScalarFieldEnum
    having?: PC_HosoIVFScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_HosoIVFCountAggregateInputType | true
    _avg?: PC_HosoIVFAvgAggregateInputType
    _sum?: PC_HosoIVFSumAggregateInputType
    _min?: PC_HosoIVFMinAggregateInputType
    _max?: PC_HosoIVFMaxAggregateInputType
  }

  export type PC_HosoIVFGroupByOutputType = {
    id_HosoIVF: number
    MasoHS: string | null
    Namluutru: number | null
    Sohientai: number | null
    id_BN_Vo: string | null
    id_BN_Chong: string | null
    Trangthai: string | null
    Ngaytao: Date | null
    id_nhanvien: string | null
    id_Khoaphong: string | null
    Phanloai: string | null
    Ghichu: string | null
    id_BSGuibenh: string | null
    Hoten_BSGuibenh: string | null
    id_ChiNhanh: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
    _count: PC_HosoIVFCountAggregateOutputType | null
    _avg: PC_HosoIVFAvgAggregateOutputType | null
    _sum: PC_HosoIVFSumAggregateOutputType | null
    _min: PC_HosoIVFMinAggregateOutputType | null
    _max: PC_HosoIVFMaxAggregateOutputType | null
  }

  type GetPC_HosoIVFGroupByPayload<T extends PC_HosoIVFGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_HosoIVFGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_HosoIVFGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_HosoIVFGroupByOutputType[P]>
            : GetScalarType<T[P], PC_HosoIVFGroupByOutputType[P]>
        }
      >
    >


  export type PC_HosoIVFSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_HosoIVF?: boolean
    MasoHS?: boolean
    Namluutru?: boolean
    Sohientai?: boolean
    id_BN_Vo?: boolean
    id_BN_Chong?: boolean
    Trangthai?: boolean
    Ngaytao?: boolean
    id_nhanvien?: boolean
    id_Khoaphong?: boolean
    Phanloai?: boolean
    Ghichu?: boolean
    id_BSGuibenh?: boolean
    Hoten_BSGuibenh?: boolean
    id_ChiNhanh?: boolean
    Sync_Version?: boolean
    Sync_Date?: boolean
    Sync_To_All?: boolean
    Sync_By_Branch?: boolean
  }, ExtArgs["result"]["pC_HosoIVF"]>


  export type PC_HosoIVFSelectScalar = {
    id_HosoIVF?: boolean
    MasoHS?: boolean
    Namluutru?: boolean
    Sohientai?: boolean
    id_BN_Vo?: boolean
    id_BN_Chong?: boolean
    Trangthai?: boolean
    Ngaytao?: boolean
    id_nhanvien?: boolean
    id_Khoaphong?: boolean
    Phanloai?: boolean
    Ghichu?: boolean
    id_BSGuibenh?: boolean
    Hoten_BSGuibenh?: boolean
    id_ChiNhanh?: boolean
    Sync_Version?: boolean
    Sync_Date?: boolean
    Sync_To_All?: boolean
    Sync_By_Branch?: boolean
  }


  export type $PC_HosoIVFPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_HosoIVF"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_HosoIVF: number
      MasoHS: string | null
      Namluutru: number | null
      Sohientai: number | null
      id_BN_Vo: string | null
      id_BN_Chong: string | null
      Trangthai: string | null
      Ngaytao: Date | null
      id_nhanvien: string | null
      id_Khoaphong: string | null
      Phanloai: string | null
      Ghichu: string | null
      id_BSGuibenh: string | null
      Hoten_BSGuibenh: string | null
      id_ChiNhanh: string | null
      Sync_Version: number | null
      Sync_Date: Date | null
      Sync_To_All: boolean | null
      Sync_By_Branch: string | null
    }, ExtArgs["result"]["pC_HosoIVF"]>
    composites: {}
  }

  type PC_HosoIVFGetPayload<S extends boolean | null | undefined | PC_HosoIVFDefaultArgs> = $Result.GetResult<Prisma.$PC_HosoIVFPayload, S>

  type PC_HosoIVFCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_HosoIVFFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_HosoIVFCountAggregateInputType | true
    }

  export interface PC_HosoIVFDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_HosoIVF'], meta: { name: 'PC_HosoIVF' } }
    /**
     * Find zero or one PC_HosoIVF that matches the filter.
     * @param {PC_HosoIVFFindUniqueArgs} args - Arguments to find a PC_HosoIVF
     * @example
     * // Get one PC_HosoIVF
     * const pC_HosoIVF = await prisma.pC_HosoIVF.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_HosoIVFFindUniqueArgs>(args: SelectSubset<T, PC_HosoIVFFindUniqueArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_HosoIVF that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_HosoIVFFindUniqueOrThrowArgs} args - Arguments to find a PC_HosoIVF
     * @example
     * // Get one PC_HosoIVF
     * const pC_HosoIVF = await prisma.pC_HosoIVF.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_HosoIVFFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_HosoIVFFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_HosoIVF that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFFindFirstArgs} args - Arguments to find a PC_HosoIVF
     * @example
     * // Get one PC_HosoIVF
     * const pC_HosoIVF = await prisma.pC_HosoIVF.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_HosoIVFFindFirstArgs>(args?: SelectSubset<T, PC_HosoIVFFindFirstArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_HosoIVF that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFFindFirstOrThrowArgs} args - Arguments to find a PC_HosoIVF
     * @example
     * // Get one PC_HosoIVF
     * const pC_HosoIVF = await prisma.pC_HosoIVF.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_HosoIVFFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_HosoIVFFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_HosoIVFS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_HosoIVFS
     * const pC_HosoIVFS = await prisma.pC_HosoIVF.findMany()
     * 
     * // Get first 10 PC_HosoIVFS
     * const pC_HosoIVFS = await prisma.pC_HosoIVF.findMany({ take: 10 })
     * 
     * // Only select the `id_HosoIVF`
     * const pC_HosoIVFWithId_HosoIVFOnly = await prisma.pC_HosoIVF.findMany({ select: { id_HosoIVF: true } })
     * 
     */
    findMany<T extends PC_HosoIVFFindManyArgs>(args?: SelectSubset<T, PC_HosoIVFFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_HosoIVF.
     * @param {PC_HosoIVFCreateArgs} args - Arguments to create a PC_HosoIVF.
     * @example
     * // Create one PC_HosoIVF
     * const PC_HosoIVF = await prisma.pC_HosoIVF.create({
     *   data: {
     *     // ... data to create a PC_HosoIVF
     *   }
     * })
     * 
     */
    create<T extends PC_HosoIVFCreateArgs>(args: SelectSubset<T, PC_HosoIVFCreateArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_HosoIVFS.
     * @param {PC_HosoIVFCreateManyArgs} args - Arguments to create many PC_HosoIVFS.
     * @example
     * // Create many PC_HosoIVFS
     * const pC_HosoIVF = await prisma.pC_HosoIVF.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_HosoIVFCreateManyArgs>(args?: SelectSubset<T, PC_HosoIVFCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_HosoIVF.
     * @param {PC_HosoIVFDeleteArgs} args - Arguments to delete one PC_HosoIVF.
     * @example
     * // Delete one PC_HosoIVF
     * const PC_HosoIVF = await prisma.pC_HosoIVF.delete({
     *   where: {
     *     // ... filter to delete one PC_HosoIVF
     *   }
     * })
     * 
     */
    delete<T extends PC_HosoIVFDeleteArgs>(args: SelectSubset<T, PC_HosoIVFDeleteArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_HosoIVF.
     * @param {PC_HosoIVFUpdateArgs} args - Arguments to update one PC_HosoIVF.
     * @example
     * // Update one PC_HosoIVF
     * const pC_HosoIVF = await prisma.pC_HosoIVF.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_HosoIVFUpdateArgs>(args: SelectSubset<T, PC_HosoIVFUpdateArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_HosoIVFS.
     * @param {PC_HosoIVFDeleteManyArgs} args - Arguments to filter PC_HosoIVFS to delete.
     * @example
     * // Delete a few PC_HosoIVFS
     * const { count } = await prisma.pC_HosoIVF.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_HosoIVFDeleteManyArgs>(args?: SelectSubset<T, PC_HosoIVFDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_HosoIVFS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_HosoIVFS
     * const pC_HosoIVF = await prisma.pC_HosoIVF.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_HosoIVFUpdateManyArgs>(args: SelectSubset<T, PC_HosoIVFUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_HosoIVF.
     * @param {PC_HosoIVFUpsertArgs} args - Arguments to update or create a PC_HosoIVF.
     * @example
     * // Update or create a PC_HosoIVF
     * const pC_HosoIVF = await prisma.pC_HosoIVF.upsert({
     *   create: {
     *     // ... data to create a PC_HosoIVF
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_HosoIVF we want to update
     *   }
     * })
     */
    upsert<T extends PC_HosoIVFUpsertArgs>(args: SelectSubset<T, PC_HosoIVFUpsertArgs<ExtArgs>>): Prisma__PC_HosoIVFClient<$Result.GetResult<Prisma.$PC_HosoIVFPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_HosoIVFS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFCountArgs} args - Arguments to filter PC_HosoIVFS to count.
     * @example
     * // Count the number of PC_HosoIVFS
     * const count = await prisma.pC_HosoIVF.count({
     *   where: {
     *     // ... the filter for the PC_HosoIVFS we want to count
     *   }
     * })
    **/
    count<T extends PC_HosoIVFCountArgs>(
      args?: Subset<T, PC_HosoIVFCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_HosoIVFCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_HosoIVF.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_HosoIVFAggregateArgs>(args: Subset<T, PC_HosoIVFAggregateArgs>): Prisma.PrismaPromise<GetPC_HosoIVFAggregateType<T>>

    /**
     * Group by PC_HosoIVF.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_HosoIVFGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_HosoIVFGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_HosoIVFGroupByArgs['orderBy'] }
        : { orderBy?: PC_HosoIVFGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_HosoIVFGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_HosoIVFGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_HosoIVF model
   */
  readonly fields: PC_HosoIVFFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_HosoIVF.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_HosoIVFClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_HosoIVF model
   */ 
  interface PC_HosoIVFFieldRefs {
    readonly id_HosoIVF: FieldRef<"PC_HosoIVF", 'Int'>
    readonly MasoHS: FieldRef<"PC_HosoIVF", 'String'>
    readonly Namluutru: FieldRef<"PC_HosoIVF", 'Int'>
    readonly Sohientai: FieldRef<"PC_HosoIVF", 'Int'>
    readonly id_BN_Vo: FieldRef<"PC_HosoIVF", 'String'>
    readonly id_BN_Chong: FieldRef<"PC_HosoIVF", 'String'>
    readonly Trangthai: FieldRef<"PC_HosoIVF", 'String'>
    readonly Ngaytao: FieldRef<"PC_HosoIVF", 'DateTime'>
    readonly id_nhanvien: FieldRef<"PC_HosoIVF", 'String'>
    readonly id_Khoaphong: FieldRef<"PC_HosoIVF", 'String'>
    readonly Phanloai: FieldRef<"PC_HosoIVF", 'String'>
    readonly Ghichu: FieldRef<"PC_HosoIVF", 'String'>
    readonly id_BSGuibenh: FieldRef<"PC_HosoIVF", 'String'>
    readonly Hoten_BSGuibenh: FieldRef<"PC_HosoIVF", 'String'>
    readonly id_ChiNhanh: FieldRef<"PC_HosoIVF", 'String'>
    readonly Sync_Version: FieldRef<"PC_HosoIVF", 'Int'>
    readonly Sync_Date: FieldRef<"PC_HosoIVF", 'DateTime'>
    readonly Sync_To_All: FieldRef<"PC_HosoIVF", 'Boolean'>
    readonly Sync_By_Branch: FieldRef<"PC_HosoIVF", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_HosoIVF findUnique
   */
  export type PC_HosoIVFFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * Filter, which PC_HosoIVF to fetch.
     */
    where: PC_HosoIVFWhereUniqueInput
  }

  /**
   * PC_HosoIVF findUniqueOrThrow
   */
  export type PC_HosoIVFFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * Filter, which PC_HosoIVF to fetch.
     */
    where: PC_HosoIVFWhereUniqueInput
  }

  /**
   * PC_HosoIVF findFirst
   */
  export type PC_HosoIVFFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * Filter, which PC_HosoIVF to fetch.
     */
    where?: PC_HosoIVFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_HosoIVFS to fetch.
     */
    orderBy?: PC_HosoIVFOrderByWithRelationInput | PC_HosoIVFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_HosoIVFS.
     */
    cursor?: PC_HosoIVFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_HosoIVFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_HosoIVFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_HosoIVFS.
     */
    distinct?: PC_HosoIVFScalarFieldEnum | PC_HosoIVFScalarFieldEnum[]
  }

  /**
   * PC_HosoIVF findFirstOrThrow
   */
  export type PC_HosoIVFFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * Filter, which PC_HosoIVF to fetch.
     */
    where?: PC_HosoIVFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_HosoIVFS to fetch.
     */
    orderBy?: PC_HosoIVFOrderByWithRelationInput | PC_HosoIVFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_HosoIVFS.
     */
    cursor?: PC_HosoIVFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_HosoIVFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_HosoIVFS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_HosoIVFS.
     */
    distinct?: PC_HosoIVFScalarFieldEnum | PC_HosoIVFScalarFieldEnum[]
  }

  /**
   * PC_HosoIVF findMany
   */
  export type PC_HosoIVFFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * Filter, which PC_HosoIVFS to fetch.
     */
    where?: PC_HosoIVFWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_HosoIVFS to fetch.
     */
    orderBy?: PC_HosoIVFOrderByWithRelationInput | PC_HosoIVFOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_HosoIVFS.
     */
    cursor?: PC_HosoIVFWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_HosoIVFS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_HosoIVFS.
     */
    skip?: number
    distinct?: PC_HosoIVFScalarFieldEnum | PC_HosoIVFScalarFieldEnum[]
  }

  /**
   * PC_HosoIVF create
   */
  export type PC_HosoIVFCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_HosoIVF.
     */
    data?: XOR<PC_HosoIVFCreateInput, PC_HosoIVFUncheckedCreateInput>
  }

  /**
   * PC_HosoIVF createMany
   */
  export type PC_HosoIVFCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_HosoIVFS.
     */
    data: PC_HosoIVFCreateManyInput | PC_HosoIVFCreateManyInput[]
  }

  /**
   * PC_HosoIVF update
   */
  export type PC_HosoIVFUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_HosoIVF.
     */
    data: XOR<PC_HosoIVFUpdateInput, PC_HosoIVFUncheckedUpdateInput>
    /**
     * Choose, which PC_HosoIVF to update.
     */
    where: PC_HosoIVFWhereUniqueInput
  }

  /**
   * PC_HosoIVF updateMany
   */
  export type PC_HosoIVFUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_HosoIVFS.
     */
    data: XOR<PC_HosoIVFUpdateManyMutationInput, PC_HosoIVFUncheckedUpdateManyInput>
    /**
     * Filter which PC_HosoIVFS to update
     */
    where?: PC_HosoIVFWhereInput
  }

  /**
   * PC_HosoIVF upsert
   */
  export type PC_HosoIVFUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_HosoIVF to update in case it exists.
     */
    where: PC_HosoIVFWhereUniqueInput
    /**
     * In case the PC_HosoIVF found by the `where` argument doesn't exist, create a new PC_HosoIVF with this data.
     */
    create: XOR<PC_HosoIVFCreateInput, PC_HosoIVFUncheckedCreateInput>
    /**
     * In case the PC_HosoIVF was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_HosoIVFUpdateInput, PC_HosoIVFUncheckedUpdateInput>
  }

  /**
   * PC_HosoIVF delete
   */
  export type PC_HosoIVFDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
    /**
     * Filter which PC_HosoIVF to delete.
     */
    where: PC_HosoIVFWhereUniqueInput
  }

  /**
   * PC_HosoIVF deleteMany
   */
  export type PC_HosoIVFDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_HosoIVFS to delete
     */
    where?: PC_HosoIVFWhereInput
  }

  /**
   * PC_HosoIVF without action
   */
  export type PC_HosoIVFDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_HosoIVF
     */
    select?: PC_HosoIVFSelect<ExtArgs> | null
  }


  /**
   * Model PC_Module
   */

  export type AggregatePC_Module = {
    _count: PC_ModuleCountAggregateOutputType | null
    _avg: PC_ModuleAvgAggregateOutputType | null
    _sum: PC_ModuleSumAggregateOutputType | null
    _min: PC_ModuleMinAggregateOutputType | null
    _max: PC_ModuleMaxAggregateOutputType | null
  }

  export type PC_ModuleAvgAggregateOutputType = {
    id_Module: number | null
  }

  export type PC_ModuleSumAggregateOutputType = {
    id_Module: number | null
  }

  export type PC_ModuleMinAggregateOutputType = {
    id_Module: number | null
    enumModule: string | null
    TenModule: string | null
    Loai_Ungdung: string | null
  }

  export type PC_ModuleMaxAggregateOutputType = {
    id_Module: number | null
    enumModule: string | null
    TenModule: string | null
    Loai_Ungdung: string | null
  }

  export type PC_ModuleCountAggregateOutputType = {
    id_Module: number
    enumModule: number
    TenModule: number
    Loai_Ungdung: number
    _all: number
  }


  export type PC_ModuleAvgAggregateInputType = {
    id_Module?: true
  }

  export type PC_ModuleSumAggregateInputType = {
    id_Module?: true
  }

  export type PC_ModuleMinAggregateInputType = {
    id_Module?: true
    enumModule?: true
    TenModule?: true
    Loai_Ungdung?: true
  }

  export type PC_ModuleMaxAggregateInputType = {
    id_Module?: true
    enumModule?: true
    TenModule?: true
    Loai_Ungdung?: true
  }

  export type PC_ModuleCountAggregateInputType = {
    id_Module?: true
    enumModule?: true
    TenModule?: true
    Loai_Ungdung?: true
    _all?: true
  }

  export type PC_ModuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Module to aggregate.
     */
    where?: PC_ModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Modules to fetch.
     */
    orderBy?: PC_ModuleOrderByWithRelationInput | PC_ModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_ModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Modules
    **/
    _count?: true | PC_ModuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_ModuleAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_ModuleSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_ModuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_ModuleMaxAggregateInputType
  }

  export type GetPC_ModuleAggregateType<T extends PC_ModuleAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Module]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Module[P]>
      : GetScalarType<T[P], AggregatePC_Module[P]>
  }




  export type PC_ModuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_ModuleWhereInput
    orderBy?: PC_ModuleOrderByWithAggregationInput | PC_ModuleOrderByWithAggregationInput[]
    by: PC_ModuleScalarFieldEnum[] | PC_ModuleScalarFieldEnum
    having?: PC_ModuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_ModuleCountAggregateInputType | true
    _avg?: PC_ModuleAvgAggregateInputType
    _sum?: PC_ModuleSumAggregateInputType
    _min?: PC_ModuleMinAggregateInputType
    _max?: PC_ModuleMaxAggregateInputType
  }

  export type PC_ModuleGroupByOutputType = {
    id_Module: number
    enumModule: string | null
    TenModule: string | null
    Loai_Ungdung: string | null
    _count: PC_ModuleCountAggregateOutputType | null
    _avg: PC_ModuleAvgAggregateOutputType | null
    _sum: PC_ModuleSumAggregateOutputType | null
    _min: PC_ModuleMinAggregateOutputType | null
    _max: PC_ModuleMaxAggregateOutputType | null
  }

  type GetPC_ModuleGroupByPayload<T extends PC_ModuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_ModuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_ModuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_ModuleGroupByOutputType[P]>
            : GetScalarType<T[P], PC_ModuleGroupByOutputType[P]>
        }
      >
    >


  export type PC_ModuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_Module?: boolean
    enumModule?: boolean
    TenModule?: boolean
    Loai_Ungdung?: boolean
  }, ExtArgs["result"]["pC_Module"]>


  export type PC_ModuleSelectScalar = {
    id_Module?: boolean
    enumModule?: boolean
    TenModule?: boolean
    Loai_Ungdung?: boolean
  }


  export type $PC_ModulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Module"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_Module: number
      enumModule: string | null
      TenModule: string | null
      Loai_Ungdung: string | null
    }, ExtArgs["result"]["pC_Module"]>
    composites: {}
  }

  type PC_ModuleGetPayload<S extends boolean | null | undefined | PC_ModuleDefaultArgs> = $Result.GetResult<Prisma.$PC_ModulePayload, S>

  type PC_ModuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_ModuleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_ModuleCountAggregateInputType | true
    }

  export interface PC_ModuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Module'], meta: { name: 'PC_Module' } }
    /**
     * Find zero or one PC_Module that matches the filter.
     * @param {PC_ModuleFindUniqueArgs} args - Arguments to find a PC_Module
     * @example
     * // Get one PC_Module
     * const pC_Module = await prisma.pC_Module.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_ModuleFindUniqueArgs>(args: SelectSubset<T, PC_ModuleFindUniqueArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Module that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_ModuleFindUniqueOrThrowArgs} args - Arguments to find a PC_Module
     * @example
     * // Get one PC_Module
     * const pC_Module = await prisma.pC_Module.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_ModuleFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_ModuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Module that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleFindFirstArgs} args - Arguments to find a PC_Module
     * @example
     * // Get one PC_Module
     * const pC_Module = await prisma.pC_Module.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_ModuleFindFirstArgs>(args?: SelectSubset<T, PC_ModuleFindFirstArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Module that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleFindFirstOrThrowArgs} args - Arguments to find a PC_Module
     * @example
     * // Get one PC_Module
     * const pC_Module = await prisma.pC_Module.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_ModuleFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_ModuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Modules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Modules
     * const pC_Modules = await prisma.pC_Module.findMany()
     * 
     * // Get first 10 PC_Modules
     * const pC_Modules = await prisma.pC_Module.findMany({ take: 10 })
     * 
     * // Only select the `id_Module`
     * const pC_ModuleWithId_ModuleOnly = await prisma.pC_Module.findMany({ select: { id_Module: true } })
     * 
     */
    findMany<T extends PC_ModuleFindManyArgs>(args?: SelectSubset<T, PC_ModuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Module.
     * @param {PC_ModuleCreateArgs} args - Arguments to create a PC_Module.
     * @example
     * // Create one PC_Module
     * const PC_Module = await prisma.pC_Module.create({
     *   data: {
     *     // ... data to create a PC_Module
     *   }
     * })
     * 
     */
    create<T extends PC_ModuleCreateArgs>(args: SelectSubset<T, PC_ModuleCreateArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Modules.
     * @param {PC_ModuleCreateManyArgs} args - Arguments to create many PC_Modules.
     * @example
     * // Create many PC_Modules
     * const pC_Module = await prisma.pC_Module.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_ModuleCreateManyArgs>(args?: SelectSubset<T, PC_ModuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Module.
     * @param {PC_ModuleDeleteArgs} args - Arguments to delete one PC_Module.
     * @example
     * // Delete one PC_Module
     * const PC_Module = await prisma.pC_Module.delete({
     *   where: {
     *     // ... filter to delete one PC_Module
     *   }
     * })
     * 
     */
    delete<T extends PC_ModuleDeleteArgs>(args: SelectSubset<T, PC_ModuleDeleteArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Module.
     * @param {PC_ModuleUpdateArgs} args - Arguments to update one PC_Module.
     * @example
     * // Update one PC_Module
     * const pC_Module = await prisma.pC_Module.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_ModuleUpdateArgs>(args: SelectSubset<T, PC_ModuleUpdateArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Modules.
     * @param {PC_ModuleDeleteManyArgs} args - Arguments to filter PC_Modules to delete.
     * @example
     * // Delete a few PC_Modules
     * const { count } = await prisma.pC_Module.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_ModuleDeleteManyArgs>(args?: SelectSubset<T, PC_ModuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Modules
     * const pC_Module = await prisma.pC_Module.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_ModuleUpdateManyArgs>(args: SelectSubset<T, PC_ModuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Module.
     * @param {PC_ModuleUpsertArgs} args - Arguments to update or create a PC_Module.
     * @example
     * // Update or create a PC_Module
     * const pC_Module = await prisma.pC_Module.upsert({
     *   create: {
     *     // ... data to create a PC_Module
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Module we want to update
     *   }
     * })
     */
    upsert<T extends PC_ModuleUpsertArgs>(args: SelectSubset<T, PC_ModuleUpsertArgs<ExtArgs>>): Prisma__PC_ModuleClient<$Result.GetResult<Prisma.$PC_ModulePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Modules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleCountArgs} args - Arguments to filter PC_Modules to count.
     * @example
     * // Count the number of PC_Modules
     * const count = await prisma.pC_Module.count({
     *   where: {
     *     // ... the filter for the PC_Modules we want to count
     *   }
     * })
    **/
    count<T extends PC_ModuleCountArgs>(
      args?: Subset<T, PC_ModuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_ModuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Module.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_ModuleAggregateArgs>(args: Subset<T, PC_ModuleAggregateArgs>): Prisma.PrismaPromise<GetPC_ModuleAggregateType<T>>

    /**
     * Group by PC_Module.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ModuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_ModuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_ModuleGroupByArgs['orderBy'] }
        : { orderBy?: PC_ModuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_ModuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_ModuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Module model
   */
  readonly fields: PC_ModuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Module.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_ModuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Module model
   */ 
  interface PC_ModuleFieldRefs {
    readonly id_Module: FieldRef<"PC_Module", 'Int'>
    readonly enumModule: FieldRef<"PC_Module", 'String'>
    readonly TenModule: FieldRef<"PC_Module", 'String'>
    readonly Loai_Ungdung: FieldRef<"PC_Module", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Module findUnique
   */
  export type PC_ModuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module to fetch.
     */
    where: PC_ModuleWhereUniqueInput
  }

  /**
   * PC_Module findUniqueOrThrow
   */
  export type PC_ModuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module to fetch.
     */
    where: PC_ModuleWhereUniqueInput
  }

  /**
   * PC_Module findFirst
   */
  export type PC_ModuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module to fetch.
     */
    where?: PC_ModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Modules to fetch.
     */
    orderBy?: PC_ModuleOrderByWithRelationInput | PC_ModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Modules.
     */
    cursor?: PC_ModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Modules.
     */
    distinct?: PC_ModuleScalarFieldEnum | PC_ModuleScalarFieldEnum[]
  }

  /**
   * PC_Module findFirstOrThrow
   */
  export type PC_ModuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module to fetch.
     */
    where?: PC_ModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Modules to fetch.
     */
    orderBy?: PC_ModuleOrderByWithRelationInput | PC_ModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Modules.
     */
    cursor?: PC_ModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Modules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Modules.
     */
    distinct?: PC_ModuleScalarFieldEnum | PC_ModuleScalarFieldEnum[]
  }

  /**
   * PC_Module findMany
   */
  export type PC_ModuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * Filter, which PC_Modules to fetch.
     */
    where?: PC_ModuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Modules to fetch.
     */
    orderBy?: PC_ModuleOrderByWithRelationInput | PC_ModuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Modules.
     */
    cursor?: PC_ModuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Modules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Modules.
     */
    skip?: number
    distinct?: PC_ModuleScalarFieldEnum | PC_ModuleScalarFieldEnum[]
  }

  /**
   * PC_Module create
   */
  export type PC_ModuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Module.
     */
    data?: XOR<PC_ModuleCreateInput, PC_ModuleUncheckedCreateInput>
  }

  /**
   * PC_Module createMany
   */
  export type PC_ModuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Modules.
     */
    data: PC_ModuleCreateManyInput | PC_ModuleCreateManyInput[]
  }

  /**
   * PC_Module update
   */
  export type PC_ModuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Module.
     */
    data: XOR<PC_ModuleUpdateInput, PC_ModuleUncheckedUpdateInput>
    /**
     * Choose, which PC_Module to update.
     */
    where: PC_ModuleWhereUniqueInput
  }

  /**
   * PC_Module updateMany
   */
  export type PC_ModuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Modules.
     */
    data: XOR<PC_ModuleUpdateManyMutationInput, PC_ModuleUncheckedUpdateManyInput>
    /**
     * Filter which PC_Modules to update
     */
    where?: PC_ModuleWhereInput
  }

  /**
   * PC_Module upsert
   */
  export type PC_ModuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Module to update in case it exists.
     */
    where: PC_ModuleWhereUniqueInput
    /**
     * In case the PC_Module found by the `where` argument doesn't exist, create a new PC_Module with this data.
     */
    create: XOR<PC_ModuleCreateInput, PC_ModuleUncheckedCreateInput>
    /**
     * In case the PC_Module was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_ModuleUpdateInput, PC_ModuleUncheckedUpdateInput>
  }

  /**
   * PC_Module delete
   */
  export type PC_ModuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
    /**
     * Filter which PC_Module to delete.
     */
    where: PC_ModuleWhereUniqueInput
  }

  /**
   * PC_Module deleteMany
   */
  export type PC_ModuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Modules to delete
     */
    where?: PC_ModuleWhereInput
  }

  /**
   * PC_Module without action
   */
  export type PC_ModuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module
     */
    select?: PC_ModuleSelect<ExtArgs> | null
  }


  /**
   * Model PC_Module_NhomTK
   */

  export type AggregatePC_Module_NhomTK = {
    _count: PC_Module_NhomTKCountAggregateOutputType | null
    _avg: PC_Module_NhomTKAvgAggregateOutputType | null
    _sum: PC_Module_NhomTKSumAggregateOutputType | null
    _min: PC_Module_NhomTKMinAggregateOutputType | null
    _max: PC_Module_NhomTKMaxAggregateOutputType | null
  }

  export type PC_Module_NhomTKAvgAggregateOutputType = {
    id_MDNhom: number | null
  }

  export type PC_Module_NhomTKSumAggregateOutputType = {
    id_MDNhom: number | null
  }

  export type PC_Module_NhomTKMinAggregateOutputType = {
    id_MDNhom: number | null
    enum_Module: string | null
    enum_NhomTK: string | null
    Mod_Xem: boolean | null
    Mod_Them: boolean | null
    Mod_Sua: boolean | null
    Mod_Xoa: boolean | null
    Mod_Xuat: boolean | null
    Ghichu: string | null
    Loai_Ungdung: string | null
  }

  export type PC_Module_NhomTKMaxAggregateOutputType = {
    id_MDNhom: number | null
    enum_Module: string | null
    enum_NhomTK: string | null
    Mod_Xem: boolean | null
    Mod_Them: boolean | null
    Mod_Sua: boolean | null
    Mod_Xoa: boolean | null
    Mod_Xuat: boolean | null
    Ghichu: string | null
    Loai_Ungdung: string | null
  }

  export type PC_Module_NhomTKCountAggregateOutputType = {
    id_MDNhom: number
    enum_Module: number
    enum_NhomTK: number
    Mod_Xem: number
    Mod_Them: number
    Mod_Sua: number
    Mod_Xoa: number
    Mod_Xuat: number
    Ghichu: number
    Loai_Ungdung: number
    _all: number
  }


  export type PC_Module_NhomTKAvgAggregateInputType = {
    id_MDNhom?: true
  }

  export type PC_Module_NhomTKSumAggregateInputType = {
    id_MDNhom?: true
  }

  export type PC_Module_NhomTKMinAggregateInputType = {
    id_MDNhom?: true
    enum_Module?: true
    enum_NhomTK?: true
    Mod_Xem?: true
    Mod_Them?: true
    Mod_Sua?: true
    Mod_Xoa?: true
    Mod_Xuat?: true
    Ghichu?: true
    Loai_Ungdung?: true
  }

  export type PC_Module_NhomTKMaxAggregateInputType = {
    id_MDNhom?: true
    enum_Module?: true
    enum_NhomTK?: true
    Mod_Xem?: true
    Mod_Them?: true
    Mod_Sua?: true
    Mod_Xoa?: true
    Mod_Xuat?: true
    Ghichu?: true
    Loai_Ungdung?: true
  }

  export type PC_Module_NhomTKCountAggregateInputType = {
    id_MDNhom?: true
    enum_Module?: true
    enum_NhomTK?: true
    Mod_Xem?: true
    Mod_Them?: true
    Mod_Sua?: true
    Mod_Xoa?: true
    Mod_Xuat?: true
    Ghichu?: true
    Loai_Ungdung?: true
    _all?: true
  }

  export type PC_Module_NhomTKAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Module_NhomTK to aggregate.
     */
    where?: PC_Module_NhomTKWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Module_NhomTKS to fetch.
     */
    orderBy?: PC_Module_NhomTKOrderByWithRelationInput | PC_Module_NhomTKOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_Module_NhomTKWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Module_NhomTKS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Module_NhomTKS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Module_NhomTKS
    **/
    _count?: true | PC_Module_NhomTKCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_Module_NhomTKAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_Module_NhomTKSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_Module_NhomTKMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_Module_NhomTKMaxAggregateInputType
  }

  export type GetPC_Module_NhomTKAggregateType<T extends PC_Module_NhomTKAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Module_NhomTK]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Module_NhomTK[P]>
      : GetScalarType<T[P], AggregatePC_Module_NhomTK[P]>
  }




  export type PC_Module_NhomTKGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_Module_NhomTKWhereInput
    orderBy?: PC_Module_NhomTKOrderByWithAggregationInput | PC_Module_NhomTKOrderByWithAggregationInput[]
    by: PC_Module_NhomTKScalarFieldEnum[] | PC_Module_NhomTKScalarFieldEnum
    having?: PC_Module_NhomTKScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_Module_NhomTKCountAggregateInputType | true
    _avg?: PC_Module_NhomTKAvgAggregateInputType
    _sum?: PC_Module_NhomTKSumAggregateInputType
    _min?: PC_Module_NhomTKMinAggregateInputType
    _max?: PC_Module_NhomTKMaxAggregateInputType
  }

  export type PC_Module_NhomTKGroupByOutputType = {
    id_MDNhom: number
    enum_Module: string | null
    enum_NhomTK: string | null
    Mod_Xem: boolean | null
    Mod_Them: boolean | null
    Mod_Sua: boolean | null
    Mod_Xoa: boolean | null
    Mod_Xuat: boolean | null
    Ghichu: string | null
    Loai_Ungdung: string | null
    _count: PC_Module_NhomTKCountAggregateOutputType | null
    _avg: PC_Module_NhomTKAvgAggregateOutputType | null
    _sum: PC_Module_NhomTKSumAggregateOutputType | null
    _min: PC_Module_NhomTKMinAggregateOutputType | null
    _max: PC_Module_NhomTKMaxAggregateOutputType | null
  }

  type GetPC_Module_NhomTKGroupByPayload<T extends PC_Module_NhomTKGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_Module_NhomTKGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_Module_NhomTKGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_Module_NhomTKGroupByOutputType[P]>
            : GetScalarType<T[P], PC_Module_NhomTKGroupByOutputType[P]>
        }
      >
    >


  export type PC_Module_NhomTKSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_MDNhom?: boolean
    enum_Module?: boolean
    enum_NhomTK?: boolean
    Mod_Xem?: boolean
    Mod_Them?: boolean
    Mod_Sua?: boolean
    Mod_Xoa?: boolean
    Mod_Xuat?: boolean
    Ghichu?: boolean
    Loai_Ungdung?: boolean
  }, ExtArgs["result"]["pC_Module_NhomTK"]>


  export type PC_Module_NhomTKSelectScalar = {
    id_MDNhom?: boolean
    enum_Module?: boolean
    enum_NhomTK?: boolean
    Mod_Xem?: boolean
    Mod_Them?: boolean
    Mod_Sua?: boolean
    Mod_Xoa?: boolean
    Mod_Xuat?: boolean
    Ghichu?: boolean
    Loai_Ungdung?: boolean
  }


  export type $PC_Module_NhomTKPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Module_NhomTK"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_MDNhom: number
      enum_Module: string | null
      enum_NhomTK: string | null
      Mod_Xem: boolean | null
      Mod_Them: boolean | null
      Mod_Sua: boolean | null
      Mod_Xoa: boolean | null
      Mod_Xuat: boolean | null
      Ghichu: string | null
      Loai_Ungdung: string | null
    }, ExtArgs["result"]["pC_Module_NhomTK"]>
    composites: {}
  }

  type PC_Module_NhomTKGetPayload<S extends boolean | null | undefined | PC_Module_NhomTKDefaultArgs> = $Result.GetResult<Prisma.$PC_Module_NhomTKPayload, S>

  type PC_Module_NhomTKCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_Module_NhomTKFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_Module_NhomTKCountAggregateInputType | true
    }

  export interface PC_Module_NhomTKDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Module_NhomTK'], meta: { name: 'PC_Module_NhomTK' } }
    /**
     * Find zero or one PC_Module_NhomTK that matches the filter.
     * @param {PC_Module_NhomTKFindUniqueArgs} args - Arguments to find a PC_Module_NhomTK
     * @example
     * // Get one PC_Module_NhomTK
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_Module_NhomTKFindUniqueArgs>(args: SelectSubset<T, PC_Module_NhomTKFindUniqueArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Module_NhomTK that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_Module_NhomTKFindUniqueOrThrowArgs} args - Arguments to find a PC_Module_NhomTK
     * @example
     * // Get one PC_Module_NhomTK
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_Module_NhomTKFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_Module_NhomTKFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Module_NhomTK that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKFindFirstArgs} args - Arguments to find a PC_Module_NhomTK
     * @example
     * // Get one PC_Module_NhomTK
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_Module_NhomTKFindFirstArgs>(args?: SelectSubset<T, PC_Module_NhomTKFindFirstArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Module_NhomTK that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKFindFirstOrThrowArgs} args - Arguments to find a PC_Module_NhomTK
     * @example
     * // Get one PC_Module_NhomTK
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_Module_NhomTKFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_Module_NhomTKFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Module_NhomTKS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Module_NhomTKS
     * const pC_Module_NhomTKS = await prisma.pC_Module_NhomTK.findMany()
     * 
     * // Get first 10 PC_Module_NhomTKS
     * const pC_Module_NhomTKS = await prisma.pC_Module_NhomTK.findMany({ take: 10 })
     * 
     * // Only select the `id_MDNhom`
     * const pC_Module_NhomTKWithId_MDNhomOnly = await prisma.pC_Module_NhomTK.findMany({ select: { id_MDNhom: true } })
     * 
     */
    findMany<T extends PC_Module_NhomTKFindManyArgs>(args?: SelectSubset<T, PC_Module_NhomTKFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Module_NhomTK.
     * @param {PC_Module_NhomTKCreateArgs} args - Arguments to create a PC_Module_NhomTK.
     * @example
     * // Create one PC_Module_NhomTK
     * const PC_Module_NhomTK = await prisma.pC_Module_NhomTK.create({
     *   data: {
     *     // ... data to create a PC_Module_NhomTK
     *   }
     * })
     * 
     */
    create<T extends PC_Module_NhomTKCreateArgs>(args: SelectSubset<T, PC_Module_NhomTKCreateArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Module_NhomTKS.
     * @param {PC_Module_NhomTKCreateManyArgs} args - Arguments to create many PC_Module_NhomTKS.
     * @example
     * // Create many PC_Module_NhomTKS
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_Module_NhomTKCreateManyArgs>(args?: SelectSubset<T, PC_Module_NhomTKCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Module_NhomTK.
     * @param {PC_Module_NhomTKDeleteArgs} args - Arguments to delete one PC_Module_NhomTK.
     * @example
     * // Delete one PC_Module_NhomTK
     * const PC_Module_NhomTK = await prisma.pC_Module_NhomTK.delete({
     *   where: {
     *     // ... filter to delete one PC_Module_NhomTK
     *   }
     * })
     * 
     */
    delete<T extends PC_Module_NhomTKDeleteArgs>(args: SelectSubset<T, PC_Module_NhomTKDeleteArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Module_NhomTK.
     * @param {PC_Module_NhomTKUpdateArgs} args - Arguments to update one PC_Module_NhomTK.
     * @example
     * // Update one PC_Module_NhomTK
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_Module_NhomTKUpdateArgs>(args: SelectSubset<T, PC_Module_NhomTKUpdateArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Module_NhomTKS.
     * @param {PC_Module_NhomTKDeleteManyArgs} args - Arguments to filter PC_Module_NhomTKS to delete.
     * @example
     * // Delete a few PC_Module_NhomTKS
     * const { count } = await prisma.pC_Module_NhomTK.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_Module_NhomTKDeleteManyArgs>(args?: SelectSubset<T, PC_Module_NhomTKDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Module_NhomTKS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Module_NhomTKS
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_Module_NhomTKUpdateManyArgs>(args: SelectSubset<T, PC_Module_NhomTKUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Module_NhomTK.
     * @param {PC_Module_NhomTKUpsertArgs} args - Arguments to update or create a PC_Module_NhomTK.
     * @example
     * // Update or create a PC_Module_NhomTK
     * const pC_Module_NhomTK = await prisma.pC_Module_NhomTK.upsert({
     *   create: {
     *     // ... data to create a PC_Module_NhomTK
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Module_NhomTK we want to update
     *   }
     * })
     */
    upsert<T extends PC_Module_NhomTKUpsertArgs>(args: SelectSubset<T, PC_Module_NhomTKUpsertArgs<ExtArgs>>): Prisma__PC_Module_NhomTKClient<$Result.GetResult<Prisma.$PC_Module_NhomTKPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Module_NhomTKS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKCountArgs} args - Arguments to filter PC_Module_NhomTKS to count.
     * @example
     * // Count the number of PC_Module_NhomTKS
     * const count = await prisma.pC_Module_NhomTK.count({
     *   where: {
     *     // ... the filter for the PC_Module_NhomTKS we want to count
     *   }
     * })
    **/
    count<T extends PC_Module_NhomTKCountArgs>(
      args?: Subset<T, PC_Module_NhomTKCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_Module_NhomTKCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Module_NhomTK.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_Module_NhomTKAggregateArgs>(args: Subset<T, PC_Module_NhomTKAggregateArgs>): Prisma.PrismaPromise<GetPC_Module_NhomTKAggregateType<T>>

    /**
     * Group by PC_Module_NhomTK.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Module_NhomTKGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_Module_NhomTKGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_Module_NhomTKGroupByArgs['orderBy'] }
        : { orderBy?: PC_Module_NhomTKGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_Module_NhomTKGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_Module_NhomTKGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Module_NhomTK model
   */
  readonly fields: PC_Module_NhomTKFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Module_NhomTK.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_Module_NhomTKClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Module_NhomTK model
   */ 
  interface PC_Module_NhomTKFieldRefs {
    readonly id_MDNhom: FieldRef<"PC_Module_NhomTK", 'Int'>
    readonly enum_Module: FieldRef<"PC_Module_NhomTK", 'String'>
    readonly enum_NhomTK: FieldRef<"PC_Module_NhomTK", 'String'>
    readonly Mod_Xem: FieldRef<"PC_Module_NhomTK", 'Boolean'>
    readonly Mod_Them: FieldRef<"PC_Module_NhomTK", 'Boolean'>
    readonly Mod_Sua: FieldRef<"PC_Module_NhomTK", 'Boolean'>
    readonly Mod_Xoa: FieldRef<"PC_Module_NhomTK", 'Boolean'>
    readonly Mod_Xuat: FieldRef<"PC_Module_NhomTK", 'Boolean'>
    readonly Ghichu: FieldRef<"PC_Module_NhomTK", 'String'>
    readonly Loai_Ungdung: FieldRef<"PC_Module_NhomTK", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Module_NhomTK findUnique
   */
  export type PC_Module_NhomTKFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module_NhomTK to fetch.
     */
    where: PC_Module_NhomTKWhereUniqueInput
  }

  /**
   * PC_Module_NhomTK findUniqueOrThrow
   */
  export type PC_Module_NhomTKFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module_NhomTK to fetch.
     */
    where: PC_Module_NhomTKWhereUniqueInput
  }

  /**
   * PC_Module_NhomTK findFirst
   */
  export type PC_Module_NhomTKFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module_NhomTK to fetch.
     */
    where?: PC_Module_NhomTKWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Module_NhomTKS to fetch.
     */
    orderBy?: PC_Module_NhomTKOrderByWithRelationInput | PC_Module_NhomTKOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Module_NhomTKS.
     */
    cursor?: PC_Module_NhomTKWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Module_NhomTKS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Module_NhomTKS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Module_NhomTKS.
     */
    distinct?: PC_Module_NhomTKScalarFieldEnum | PC_Module_NhomTKScalarFieldEnum[]
  }

  /**
   * PC_Module_NhomTK findFirstOrThrow
   */
  export type PC_Module_NhomTKFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module_NhomTK to fetch.
     */
    where?: PC_Module_NhomTKWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Module_NhomTKS to fetch.
     */
    orderBy?: PC_Module_NhomTKOrderByWithRelationInput | PC_Module_NhomTKOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Module_NhomTKS.
     */
    cursor?: PC_Module_NhomTKWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Module_NhomTKS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Module_NhomTKS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Module_NhomTKS.
     */
    distinct?: PC_Module_NhomTKScalarFieldEnum | PC_Module_NhomTKScalarFieldEnum[]
  }

  /**
   * PC_Module_NhomTK findMany
   */
  export type PC_Module_NhomTKFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * Filter, which PC_Module_NhomTKS to fetch.
     */
    where?: PC_Module_NhomTKWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Module_NhomTKS to fetch.
     */
    orderBy?: PC_Module_NhomTKOrderByWithRelationInput | PC_Module_NhomTKOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Module_NhomTKS.
     */
    cursor?: PC_Module_NhomTKWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Module_NhomTKS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Module_NhomTKS.
     */
    skip?: number
    distinct?: PC_Module_NhomTKScalarFieldEnum | PC_Module_NhomTKScalarFieldEnum[]
  }

  /**
   * PC_Module_NhomTK create
   */
  export type PC_Module_NhomTKCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Module_NhomTK.
     */
    data?: XOR<PC_Module_NhomTKCreateInput, PC_Module_NhomTKUncheckedCreateInput>
  }

  /**
   * PC_Module_NhomTK createMany
   */
  export type PC_Module_NhomTKCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Module_NhomTKS.
     */
    data: PC_Module_NhomTKCreateManyInput | PC_Module_NhomTKCreateManyInput[]
  }

  /**
   * PC_Module_NhomTK update
   */
  export type PC_Module_NhomTKUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Module_NhomTK.
     */
    data: XOR<PC_Module_NhomTKUpdateInput, PC_Module_NhomTKUncheckedUpdateInput>
    /**
     * Choose, which PC_Module_NhomTK to update.
     */
    where: PC_Module_NhomTKWhereUniqueInput
  }

  /**
   * PC_Module_NhomTK updateMany
   */
  export type PC_Module_NhomTKUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Module_NhomTKS.
     */
    data: XOR<PC_Module_NhomTKUpdateManyMutationInput, PC_Module_NhomTKUncheckedUpdateManyInput>
    /**
     * Filter which PC_Module_NhomTKS to update
     */
    where?: PC_Module_NhomTKWhereInput
  }

  /**
   * PC_Module_NhomTK upsert
   */
  export type PC_Module_NhomTKUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Module_NhomTK to update in case it exists.
     */
    where: PC_Module_NhomTKWhereUniqueInput
    /**
     * In case the PC_Module_NhomTK found by the `where` argument doesn't exist, create a new PC_Module_NhomTK with this data.
     */
    create: XOR<PC_Module_NhomTKCreateInput, PC_Module_NhomTKUncheckedCreateInput>
    /**
     * In case the PC_Module_NhomTK was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_Module_NhomTKUpdateInput, PC_Module_NhomTKUncheckedUpdateInput>
  }

  /**
   * PC_Module_NhomTK delete
   */
  export type PC_Module_NhomTKDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
    /**
     * Filter which PC_Module_NhomTK to delete.
     */
    where: PC_Module_NhomTKWhereUniqueInput
  }

  /**
   * PC_Module_NhomTK deleteMany
   */
  export type PC_Module_NhomTKDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Module_NhomTKS to delete
     */
    where?: PC_Module_NhomTKWhereInput
  }

  /**
   * PC_Module_NhomTK without action
   */
  export type PC_Module_NhomTKDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Module_NhomTK
     */
    select?: PC_Module_NhomTKSelect<ExtArgs> | null
  }


  /**
   * Model PC_Nhanvien
   */

  export type AggregatePC_Nhanvien = {
    _count: PC_NhanvienCountAggregateOutputType | null
    _avg: PC_NhanvienAvgAggregateOutputType | null
    _sum: PC_NhanvienSumAggregateOutputType | null
    _min: PC_NhanvienMinAggregateOutputType | null
    _max: PC_NhanvienMaxAggregateOutputType | null
  }

  export type PC_NhanvienAvgAggregateOutputType = {
    Sync_Version: number | null
  }

  export type PC_NhanvienSumAggregateOutputType = {
    Sync_Version: number | null
  }

  export type PC_NhanvienMinAggregateOutputType = {
    ID_Nhanvien: string | null
    Hoten: string | null
    Ten: string | null
    Ngaysinh: string | null
    Namsinh: string | null
    Gioitinh: string | null
    Dienthoai: string | null
    Email: string | null
    ID_NhomNV: string | null
    Ten_NhomNV: string | null
    id_DMPhongban: string | null
    Phongban: string | null
    id_DMTonhom: string | null
    Tonhom: string | null
    ID_Chinhanh: string | null
    Diachi: string | null
    Trangthai: string | null
    Ngayvaolam: Date | null
    AnhProfile: string | null
    Sync_Version: number | null
    Sync_End: boolean | null
  }

  export type PC_NhanvienMaxAggregateOutputType = {
    ID_Nhanvien: string | null
    Hoten: string | null
    Ten: string | null
    Ngaysinh: string | null
    Namsinh: string | null
    Gioitinh: string | null
    Dienthoai: string | null
    Email: string | null
    ID_NhomNV: string | null
    Ten_NhomNV: string | null
    id_DMPhongban: string | null
    Phongban: string | null
    id_DMTonhom: string | null
    Tonhom: string | null
    ID_Chinhanh: string | null
    Diachi: string | null
    Trangthai: string | null
    Ngayvaolam: Date | null
    AnhProfile: string | null
    Sync_Version: number | null
    Sync_End: boolean | null
  }

  export type PC_NhanvienCountAggregateOutputType = {
    ID_Nhanvien: number
    Hoten: number
    Ten: number
    Ngaysinh: number
    Namsinh: number
    Gioitinh: number
    Dienthoai: number
    Email: number
    ID_NhomNV: number
    Ten_NhomNV: number
    id_DMPhongban: number
    Phongban: number
    id_DMTonhom: number
    Tonhom: number
    ID_Chinhanh: number
    Diachi: number
    Trangthai: number
    Ngayvaolam: number
    AnhProfile: number
    Sync_Version: number
    Sync_End: number
    _all: number
  }


  export type PC_NhanvienAvgAggregateInputType = {
    Sync_Version?: true
  }

  export type PC_NhanvienSumAggregateInputType = {
    Sync_Version?: true
  }

  export type PC_NhanvienMinAggregateInputType = {
    ID_Nhanvien?: true
    Hoten?: true
    Ten?: true
    Ngaysinh?: true
    Namsinh?: true
    Gioitinh?: true
    Dienthoai?: true
    Email?: true
    ID_NhomNV?: true
    Ten_NhomNV?: true
    id_DMPhongban?: true
    Phongban?: true
    id_DMTonhom?: true
    Tonhom?: true
    ID_Chinhanh?: true
    Diachi?: true
    Trangthai?: true
    Ngayvaolam?: true
    AnhProfile?: true
    Sync_Version?: true
    Sync_End?: true
  }

  export type PC_NhanvienMaxAggregateInputType = {
    ID_Nhanvien?: true
    Hoten?: true
    Ten?: true
    Ngaysinh?: true
    Namsinh?: true
    Gioitinh?: true
    Dienthoai?: true
    Email?: true
    ID_NhomNV?: true
    Ten_NhomNV?: true
    id_DMPhongban?: true
    Phongban?: true
    id_DMTonhom?: true
    Tonhom?: true
    ID_Chinhanh?: true
    Diachi?: true
    Trangthai?: true
    Ngayvaolam?: true
    AnhProfile?: true
    Sync_Version?: true
    Sync_End?: true
  }

  export type PC_NhanvienCountAggregateInputType = {
    ID_Nhanvien?: true
    Hoten?: true
    Ten?: true
    Ngaysinh?: true
    Namsinh?: true
    Gioitinh?: true
    Dienthoai?: true
    Email?: true
    ID_NhomNV?: true
    Ten_NhomNV?: true
    id_DMPhongban?: true
    Phongban?: true
    id_DMTonhom?: true
    Tonhom?: true
    ID_Chinhanh?: true
    Diachi?: true
    Trangthai?: true
    Ngayvaolam?: true
    AnhProfile?: true
    Sync_Version?: true
    Sync_End?: true
    _all?: true
  }

  export type PC_NhanvienAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Nhanvien to aggregate.
     */
    where?: PC_NhanvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanviens to fetch.
     */
    orderBy?: PC_NhanvienOrderByWithRelationInput | PC_NhanvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_NhanvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanviens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Nhanviens
    **/
    _count?: true | PC_NhanvienCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_NhanvienAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_NhanvienSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_NhanvienMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_NhanvienMaxAggregateInputType
  }

  export type GetPC_NhanvienAggregateType<T extends PC_NhanvienAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Nhanvien]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Nhanvien[P]>
      : GetScalarType<T[P], AggregatePC_Nhanvien[P]>
  }




  export type PC_NhanvienGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_NhanvienWhereInput
    orderBy?: PC_NhanvienOrderByWithAggregationInput | PC_NhanvienOrderByWithAggregationInput[]
    by: PC_NhanvienScalarFieldEnum[] | PC_NhanvienScalarFieldEnum
    having?: PC_NhanvienScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_NhanvienCountAggregateInputType | true
    _avg?: PC_NhanvienAvgAggregateInputType
    _sum?: PC_NhanvienSumAggregateInputType
    _min?: PC_NhanvienMinAggregateInputType
    _max?: PC_NhanvienMaxAggregateInputType
  }

  export type PC_NhanvienGroupByOutputType = {
    ID_Nhanvien: string
    Hoten: string | null
    Ten: string | null
    Ngaysinh: string | null
    Namsinh: string | null
    Gioitinh: string | null
    Dienthoai: string | null
    Email: string | null
    ID_NhomNV: string | null
    Ten_NhomNV: string | null
    id_DMPhongban: string | null
    Phongban: string | null
    id_DMTonhom: string | null
    Tonhom: string | null
    ID_Chinhanh: string | null
    Diachi: string | null
    Trangthai: string | null
    Ngayvaolam: Date | null
    AnhProfile: string | null
    Sync_Version: number | null
    Sync_End: boolean | null
    _count: PC_NhanvienCountAggregateOutputType | null
    _avg: PC_NhanvienAvgAggregateOutputType | null
    _sum: PC_NhanvienSumAggregateOutputType | null
    _min: PC_NhanvienMinAggregateOutputType | null
    _max: PC_NhanvienMaxAggregateOutputType | null
  }

  type GetPC_NhanvienGroupByPayload<T extends PC_NhanvienGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_NhanvienGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_NhanvienGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_NhanvienGroupByOutputType[P]>
            : GetScalarType<T[P], PC_NhanvienGroupByOutputType[P]>
        }
      >
    >


  export type PC_NhanvienSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_Nhanvien?: boolean
    Hoten?: boolean
    Ten?: boolean
    Ngaysinh?: boolean
    Namsinh?: boolean
    Gioitinh?: boolean
    Dienthoai?: boolean
    Email?: boolean
    ID_NhomNV?: boolean
    Ten_NhomNV?: boolean
    id_DMPhongban?: boolean
    Phongban?: boolean
    id_DMTonhom?: boolean
    Tonhom?: boolean
    ID_Chinhanh?: boolean
    Diachi?: boolean
    Trangthai?: boolean
    Ngayvaolam?: boolean
    AnhProfile?: boolean
    Sync_Version?: boolean
    Sync_End?: boolean
  }, ExtArgs["result"]["pC_Nhanvien"]>


  export type PC_NhanvienSelectScalar = {
    ID_Nhanvien?: boolean
    Hoten?: boolean
    Ten?: boolean
    Ngaysinh?: boolean
    Namsinh?: boolean
    Gioitinh?: boolean
    Dienthoai?: boolean
    Email?: boolean
    ID_NhomNV?: boolean
    Ten_NhomNV?: boolean
    id_DMPhongban?: boolean
    Phongban?: boolean
    id_DMTonhom?: boolean
    Tonhom?: boolean
    ID_Chinhanh?: boolean
    Diachi?: boolean
    Trangthai?: boolean
    Ngayvaolam?: boolean
    AnhProfile?: boolean
    Sync_Version?: boolean
    Sync_End?: boolean
  }


  export type $PC_NhanvienPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Nhanvien"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_Nhanvien: string
      Hoten: string | null
      Ten: string | null
      Ngaysinh: string | null
      Namsinh: string | null
      Gioitinh: string | null
      Dienthoai: string | null
      Email: string | null
      ID_NhomNV: string | null
      Ten_NhomNV: string | null
      id_DMPhongban: string | null
      Phongban: string | null
      id_DMTonhom: string | null
      Tonhom: string | null
      ID_Chinhanh: string | null
      Diachi: string | null
      Trangthai: string | null
      Ngayvaolam: Date | null
      AnhProfile: string | null
      Sync_Version: number | null
      Sync_End: boolean | null
    }, ExtArgs["result"]["pC_Nhanvien"]>
    composites: {}
  }

  type PC_NhanvienGetPayload<S extends boolean | null | undefined | PC_NhanvienDefaultArgs> = $Result.GetResult<Prisma.$PC_NhanvienPayload, S>

  type PC_NhanvienCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_NhanvienFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_NhanvienCountAggregateInputType | true
    }

  export interface PC_NhanvienDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Nhanvien'], meta: { name: 'PC_Nhanvien' } }
    /**
     * Find zero or one PC_Nhanvien that matches the filter.
     * @param {PC_NhanvienFindUniqueArgs} args - Arguments to find a PC_Nhanvien
     * @example
     * // Get one PC_Nhanvien
     * const pC_Nhanvien = await prisma.pC_Nhanvien.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_NhanvienFindUniqueArgs>(args: SelectSubset<T, PC_NhanvienFindUniqueArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Nhanvien that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_NhanvienFindUniqueOrThrowArgs} args - Arguments to find a PC_Nhanvien
     * @example
     * // Get one PC_Nhanvien
     * const pC_Nhanvien = await prisma.pC_Nhanvien.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_NhanvienFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_NhanvienFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Nhanvien that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienFindFirstArgs} args - Arguments to find a PC_Nhanvien
     * @example
     * // Get one PC_Nhanvien
     * const pC_Nhanvien = await prisma.pC_Nhanvien.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_NhanvienFindFirstArgs>(args?: SelectSubset<T, PC_NhanvienFindFirstArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Nhanvien that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienFindFirstOrThrowArgs} args - Arguments to find a PC_Nhanvien
     * @example
     * // Get one PC_Nhanvien
     * const pC_Nhanvien = await prisma.pC_Nhanvien.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_NhanvienFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_NhanvienFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Nhanviens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Nhanviens
     * const pC_Nhanviens = await prisma.pC_Nhanvien.findMany()
     * 
     * // Get first 10 PC_Nhanviens
     * const pC_Nhanviens = await prisma.pC_Nhanvien.findMany({ take: 10 })
     * 
     * // Only select the `ID_Nhanvien`
     * const pC_NhanvienWithID_NhanvienOnly = await prisma.pC_Nhanvien.findMany({ select: { ID_Nhanvien: true } })
     * 
     */
    findMany<T extends PC_NhanvienFindManyArgs>(args?: SelectSubset<T, PC_NhanvienFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Nhanvien.
     * @param {PC_NhanvienCreateArgs} args - Arguments to create a PC_Nhanvien.
     * @example
     * // Create one PC_Nhanvien
     * const PC_Nhanvien = await prisma.pC_Nhanvien.create({
     *   data: {
     *     // ... data to create a PC_Nhanvien
     *   }
     * })
     * 
     */
    create<T extends PC_NhanvienCreateArgs>(args: SelectSubset<T, PC_NhanvienCreateArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Nhanviens.
     * @param {PC_NhanvienCreateManyArgs} args - Arguments to create many PC_Nhanviens.
     * @example
     * // Create many PC_Nhanviens
     * const pC_Nhanvien = await prisma.pC_Nhanvien.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_NhanvienCreateManyArgs>(args?: SelectSubset<T, PC_NhanvienCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Nhanvien.
     * @param {PC_NhanvienDeleteArgs} args - Arguments to delete one PC_Nhanvien.
     * @example
     * // Delete one PC_Nhanvien
     * const PC_Nhanvien = await prisma.pC_Nhanvien.delete({
     *   where: {
     *     // ... filter to delete one PC_Nhanvien
     *   }
     * })
     * 
     */
    delete<T extends PC_NhanvienDeleteArgs>(args: SelectSubset<T, PC_NhanvienDeleteArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Nhanvien.
     * @param {PC_NhanvienUpdateArgs} args - Arguments to update one PC_Nhanvien.
     * @example
     * // Update one PC_Nhanvien
     * const pC_Nhanvien = await prisma.pC_Nhanvien.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_NhanvienUpdateArgs>(args: SelectSubset<T, PC_NhanvienUpdateArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Nhanviens.
     * @param {PC_NhanvienDeleteManyArgs} args - Arguments to filter PC_Nhanviens to delete.
     * @example
     * // Delete a few PC_Nhanviens
     * const { count } = await prisma.pC_Nhanvien.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_NhanvienDeleteManyArgs>(args?: SelectSubset<T, PC_NhanvienDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Nhanviens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Nhanviens
     * const pC_Nhanvien = await prisma.pC_Nhanvien.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_NhanvienUpdateManyArgs>(args: SelectSubset<T, PC_NhanvienUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Nhanvien.
     * @param {PC_NhanvienUpsertArgs} args - Arguments to update or create a PC_Nhanvien.
     * @example
     * // Update or create a PC_Nhanvien
     * const pC_Nhanvien = await prisma.pC_Nhanvien.upsert({
     *   create: {
     *     // ... data to create a PC_Nhanvien
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Nhanvien we want to update
     *   }
     * })
     */
    upsert<T extends PC_NhanvienUpsertArgs>(args: SelectSubset<T, PC_NhanvienUpsertArgs<ExtArgs>>): Prisma__PC_NhanvienClient<$Result.GetResult<Prisma.$PC_NhanvienPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Nhanviens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienCountArgs} args - Arguments to filter PC_Nhanviens to count.
     * @example
     * // Count the number of PC_Nhanviens
     * const count = await prisma.pC_Nhanvien.count({
     *   where: {
     *     // ... the filter for the PC_Nhanviens we want to count
     *   }
     * })
    **/
    count<T extends PC_NhanvienCountArgs>(
      args?: Subset<T, PC_NhanvienCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_NhanvienCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Nhanvien.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_NhanvienAggregateArgs>(args: Subset<T, PC_NhanvienAggregateArgs>): Prisma.PrismaPromise<GetPC_NhanvienAggregateType<T>>

    /**
     * Group by PC_Nhanvien.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhanvienGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_NhanvienGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_NhanvienGroupByArgs['orderBy'] }
        : { orderBy?: PC_NhanvienGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_NhanvienGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_NhanvienGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Nhanvien model
   */
  readonly fields: PC_NhanvienFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Nhanvien.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_NhanvienClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Nhanvien model
   */ 
  interface PC_NhanvienFieldRefs {
    readonly ID_Nhanvien: FieldRef<"PC_Nhanvien", 'String'>
    readonly Hoten: FieldRef<"PC_Nhanvien", 'String'>
    readonly Ten: FieldRef<"PC_Nhanvien", 'String'>
    readonly Ngaysinh: FieldRef<"PC_Nhanvien", 'String'>
    readonly Namsinh: FieldRef<"PC_Nhanvien", 'String'>
    readonly Gioitinh: FieldRef<"PC_Nhanvien", 'String'>
    readonly Dienthoai: FieldRef<"PC_Nhanvien", 'String'>
    readonly Email: FieldRef<"PC_Nhanvien", 'String'>
    readonly ID_NhomNV: FieldRef<"PC_Nhanvien", 'String'>
    readonly Ten_NhomNV: FieldRef<"PC_Nhanvien", 'String'>
    readonly id_DMPhongban: FieldRef<"PC_Nhanvien", 'String'>
    readonly Phongban: FieldRef<"PC_Nhanvien", 'String'>
    readonly id_DMTonhom: FieldRef<"PC_Nhanvien", 'String'>
    readonly Tonhom: FieldRef<"PC_Nhanvien", 'String'>
    readonly ID_Chinhanh: FieldRef<"PC_Nhanvien", 'String'>
    readonly Diachi: FieldRef<"PC_Nhanvien", 'String'>
    readonly Trangthai: FieldRef<"PC_Nhanvien", 'String'>
    readonly Ngayvaolam: FieldRef<"PC_Nhanvien", 'DateTime'>
    readonly AnhProfile: FieldRef<"PC_Nhanvien", 'String'>
    readonly Sync_Version: FieldRef<"PC_Nhanvien", 'Int'>
    readonly Sync_End: FieldRef<"PC_Nhanvien", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * PC_Nhanvien findUnique
   */
  export type PC_NhanvienFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien to fetch.
     */
    where: PC_NhanvienWhereUniqueInput
  }

  /**
   * PC_Nhanvien findUniqueOrThrow
   */
  export type PC_NhanvienFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien to fetch.
     */
    where: PC_NhanvienWhereUniqueInput
  }

  /**
   * PC_Nhanvien findFirst
   */
  export type PC_NhanvienFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien to fetch.
     */
    where?: PC_NhanvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanviens to fetch.
     */
    orderBy?: PC_NhanvienOrderByWithRelationInput | PC_NhanvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Nhanviens.
     */
    cursor?: PC_NhanvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanviens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Nhanviens.
     */
    distinct?: PC_NhanvienScalarFieldEnum | PC_NhanvienScalarFieldEnum[]
  }

  /**
   * PC_Nhanvien findFirstOrThrow
   */
  export type PC_NhanvienFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien to fetch.
     */
    where?: PC_NhanvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanviens to fetch.
     */
    orderBy?: PC_NhanvienOrderByWithRelationInput | PC_NhanvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Nhanviens.
     */
    cursor?: PC_NhanvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanviens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Nhanviens.
     */
    distinct?: PC_NhanvienScalarFieldEnum | PC_NhanvienScalarFieldEnum[]
  }

  /**
   * PC_Nhanvien findMany
   */
  export type PC_NhanvienFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanviens to fetch.
     */
    where?: PC_NhanvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanviens to fetch.
     */
    orderBy?: PC_NhanvienOrderByWithRelationInput | PC_NhanvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Nhanviens.
     */
    cursor?: PC_NhanvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanviens.
     */
    skip?: number
    distinct?: PC_NhanvienScalarFieldEnum | PC_NhanvienScalarFieldEnum[]
  }

  /**
   * PC_Nhanvien create
   */
  export type PC_NhanvienCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Nhanvien.
     */
    data: XOR<PC_NhanvienCreateInput, PC_NhanvienUncheckedCreateInput>
  }

  /**
   * PC_Nhanvien createMany
   */
  export type PC_NhanvienCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Nhanviens.
     */
    data: PC_NhanvienCreateManyInput | PC_NhanvienCreateManyInput[]
  }

  /**
   * PC_Nhanvien update
   */
  export type PC_NhanvienUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Nhanvien.
     */
    data: XOR<PC_NhanvienUpdateInput, PC_NhanvienUncheckedUpdateInput>
    /**
     * Choose, which PC_Nhanvien to update.
     */
    where: PC_NhanvienWhereUniqueInput
  }

  /**
   * PC_Nhanvien updateMany
   */
  export type PC_NhanvienUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Nhanviens.
     */
    data: XOR<PC_NhanvienUpdateManyMutationInput, PC_NhanvienUncheckedUpdateManyInput>
    /**
     * Filter which PC_Nhanviens to update
     */
    where?: PC_NhanvienWhereInput
  }

  /**
   * PC_Nhanvien upsert
   */
  export type PC_NhanvienUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Nhanvien to update in case it exists.
     */
    where: PC_NhanvienWhereUniqueInput
    /**
     * In case the PC_Nhanvien found by the `where` argument doesn't exist, create a new PC_Nhanvien with this data.
     */
    create: XOR<PC_NhanvienCreateInput, PC_NhanvienUncheckedCreateInput>
    /**
     * In case the PC_Nhanvien was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_NhanvienUpdateInput, PC_NhanvienUncheckedUpdateInput>
  }

  /**
   * PC_Nhanvien delete
   */
  export type PC_NhanvienDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
    /**
     * Filter which PC_Nhanvien to delete.
     */
    where: PC_NhanvienWhereUniqueInput
  }

  /**
   * PC_Nhanvien deleteMany
   */
  export type PC_NhanvienDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Nhanviens to delete
     */
    where?: PC_NhanvienWhereInput
  }

  /**
   * PC_Nhanvien without action
   */
  export type PC_NhanvienDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien
     */
    select?: PC_NhanvienSelect<ExtArgs> | null
  }


  /**
   * Model PC_Nhanvien_Media
   */

  export type AggregatePC_Nhanvien_Media = {
    _count: PC_Nhanvien_MediaCountAggregateOutputType | null
    _min: PC_Nhanvien_MediaMinAggregateOutputType | null
    _max: PC_Nhanvien_MediaMaxAggregateOutputType | null
  }

  export type PC_Nhanvien_MediaMinAggregateOutputType = {
    id_Nhanvien: string | null
    AnhProfile: Buffer | null
  }

  export type PC_Nhanvien_MediaMaxAggregateOutputType = {
    id_Nhanvien: string | null
    AnhProfile: Buffer | null
  }

  export type PC_Nhanvien_MediaCountAggregateOutputType = {
    id_Nhanvien: number
    AnhProfile: number
    _all: number
  }


  export type PC_Nhanvien_MediaMinAggregateInputType = {
    id_Nhanvien?: true
    AnhProfile?: true
  }

  export type PC_Nhanvien_MediaMaxAggregateInputType = {
    id_Nhanvien?: true
    AnhProfile?: true
  }

  export type PC_Nhanvien_MediaCountAggregateInputType = {
    id_Nhanvien?: true
    AnhProfile?: true
    _all?: true
  }

  export type PC_Nhanvien_MediaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Nhanvien_Media to aggregate.
     */
    where?: PC_Nhanvien_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanvien_Medias to fetch.
     */
    orderBy?: PC_Nhanvien_MediaOrderByWithRelationInput | PC_Nhanvien_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_Nhanvien_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanvien_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanvien_Medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Nhanvien_Medias
    **/
    _count?: true | PC_Nhanvien_MediaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_Nhanvien_MediaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_Nhanvien_MediaMaxAggregateInputType
  }

  export type GetPC_Nhanvien_MediaAggregateType<T extends PC_Nhanvien_MediaAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Nhanvien_Media]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Nhanvien_Media[P]>
      : GetScalarType<T[P], AggregatePC_Nhanvien_Media[P]>
  }




  export type PC_Nhanvien_MediaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_Nhanvien_MediaWhereInput
    orderBy?: PC_Nhanvien_MediaOrderByWithAggregationInput | PC_Nhanvien_MediaOrderByWithAggregationInput[]
    by: PC_Nhanvien_MediaScalarFieldEnum[] | PC_Nhanvien_MediaScalarFieldEnum
    having?: PC_Nhanvien_MediaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_Nhanvien_MediaCountAggregateInputType | true
    _min?: PC_Nhanvien_MediaMinAggregateInputType
    _max?: PC_Nhanvien_MediaMaxAggregateInputType
  }

  export type PC_Nhanvien_MediaGroupByOutputType = {
    id_Nhanvien: string
    AnhProfile: Buffer | null
    _count: PC_Nhanvien_MediaCountAggregateOutputType | null
    _min: PC_Nhanvien_MediaMinAggregateOutputType | null
    _max: PC_Nhanvien_MediaMaxAggregateOutputType | null
  }

  type GetPC_Nhanvien_MediaGroupByPayload<T extends PC_Nhanvien_MediaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_Nhanvien_MediaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_Nhanvien_MediaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_Nhanvien_MediaGroupByOutputType[P]>
            : GetScalarType<T[P], PC_Nhanvien_MediaGroupByOutputType[P]>
        }
      >
    >


  export type PC_Nhanvien_MediaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_Nhanvien?: boolean
    AnhProfile?: boolean
  }, ExtArgs["result"]["pC_Nhanvien_Media"]>


  export type PC_Nhanvien_MediaSelectScalar = {
    id_Nhanvien?: boolean
    AnhProfile?: boolean
  }


  export type $PC_Nhanvien_MediaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Nhanvien_Media"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_Nhanvien: string
      AnhProfile: Buffer | null
    }, ExtArgs["result"]["pC_Nhanvien_Media"]>
    composites: {}
  }

  type PC_Nhanvien_MediaGetPayload<S extends boolean | null | undefined | PC_Nhanvien_MediaDefaultArgs> = $Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload, S>

  type PC_Nhanvien_MediaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_Nhanvien_MediaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_Nhanvien_MediaCountAggregateInputType | true
    }

  export interface PC_Nhanvien_MediaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Nhanvien_Media'], meta: { name: 'PC_Nhanvien_Media' } }
    /**
     * Find zero or one PC_Nhanvien_Media that matches the filter.
     * @param {PC_Nhanvien_MediaFindUniqueArgs} args - Arguments to find a PC_Nhanvien_Media
     * @example
     * // Get one PC_Nhanvien_Media
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_Nhanvien_MediaFindUniqueArgs>(args: SelectSubset<T, PC_Nhanvien_MediaFindUniqueArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Nhanvien_Media that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_Nhanvien_MediaFindUniqueOrThrowArgs} args - Arguments to find a PC_Nhanvien_Media
     * @example
     * // Get one PC_Nhanvien_Media
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_Nhanvien_MediaFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_Nhanvien_MediaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Nhanvien_Media that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaFindFirstArgs} args - Arguments to find a PC_Nhanvien_Media
     * @example
     * // Get one PC_Nhanvien_Media
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_Nhanvien_MediaFindFirstArgs>(args?: SelectSubset<T, PC_Nhanvien_MediaFindFirstArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Nhanvien_Media that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaFindFirstOrThrowArgs} args - Arguments to find a PC_Nhanvien_Media
     * @example
     * // Get one PC_Nhanvien_Media
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_Nhanvien_MediaFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_Nhanvien_MediaFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Nhanvien_Medias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Nhanvien_Medias
     * const pC_Nhanvien_Medias = await prisma.pC_Nhanvien_Media.findMany()
     * 
     * // Get first 10 PC_Nhanvien_Medias
     * const pC_Nhanvien_Medias = await prisma.pC_Nhanvien_Media.findMany({ take: 10 })
     * 
     * // Only select the `id_Nhanvien`
     * const pC_Nhanvien_MediaWithId_NhanvienOnly = await prisma.pC_Nhanvien_Media.findMany({ select: { id_Nhanvien: true } })
     * 
     */
    findMany<T extends PC_Nhanvien_MediaFindManyArgs>(args?: SelectSubset<T, PC_Nhanvien_MediaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Nhanvien_Media.
     * @param {PC_Nhanvien_MediaCreateArgs} args - Arguments to create a PC_Nhanvien_Media.
     * @example
     * // Create one PC_Nhanvien_Media
     * const PC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.create({
     *   data: {
     *     // ... data to create a PC_Nhanvien_Media
     *   }
     * })
     * 
     */
    create<T extends PC_Nhanvien_MediaCreateArgs>(args: SelectSubset<T, PC_Nhanvien_MediaCreateArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Nhanvien_Medias.
     * @param {PC_Nhanvien_MediaCreateManyArgs} args - Arguments to create many PC_Nhanvien_Medias.
     * @example
     * // Create many PC_Nhanvien_Medias
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_Nhanvien_MediaCreateManyArgs>(args?: SelectSubset<T, PC_Nhanvien_MediaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Nhanvien_Media.
     * @param {PC_Nhanvien_MediaDeleteArgs} args - Arguments to delete one PC_Nhanvien_Media.
     * @example
     * // Delete one PC_Nhanvien_Media
     * const PC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.delete({
     *   where: {
     *     // ... filter to delete one PC_Nhanvien_Media
     *   }
     * })
     * 
     */
    delete<T extends PC_Nhanvien_MediaDeleteArgs>(args: SelectSubset<T, PC_Nhanvien_MediaDeleteArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Nhanvien_Media.
     * @param {PC_Nhanvien_MediaUpdateArgs} args - Arguments to update one PC_Nhanvien_Media.
     * @example
     * // Update one PC_Nhanvien_Media
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_Nhanvien_MediaUpdateArgs>(args: SelectSubset<T, PC_Nhanvien_MediaUpdateArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Nhanvien_Medias.
     * @param {PC_Nhanvien_MediaDeleteManyArgs} args - Arguments to filter PC_Nhanvien_Medias to delete.
     * @example
     * // Delete a few PC_Nhanvien_Medias
     * const { count } = await prisma.pC_Nhanvien_Media.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_Nhanvien_MediaDeleteManyArgs>(args?: SelectSubset<T, PC_Nhanvien_MediaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Nhanvien_Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Nhanvien_Medias
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_Nhanvien_MediaUpdateManyArgs>(args: SelectSubset<T, PC_Nhanvien_MediaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Nhanvien_Media.
     * @param {PC_Nhanvien_MediaUpsertArgs} args - Arguments to update or create a PC_Nhanvien_Media.
     * @example
     * // Update or create a PC_Nhanvien_Media
     * const pC_Nhanvien_Media = await prisma.pC_Nhanvien_Media.upsert({
     *   create: {
     *     // ... data to create a PC_Nhanvien_Media
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Nhanvien_Media we want to update
     *   }
     * })
     */
    upsert<T extends PC_Nhanvien_MediaUpsertArgs>(args: SelectSubset<T, PC_Nhanvien_MediaUpsertArgs<ExtArgs>>): Prisma__PC_Nhanvien_MediaClient<$Result.GetResult<Prisma.$PC_Nhanvien_MediaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Nhanvien_Medias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaCountArgs} args - Arguments to filter PC_Nhanvien_Medias to count.
     * @example
     * // Count the number of PC_Nhanvien_Medias
     * const count = await prisma.pC_Nhanvien_Media.count({
     *   where: {
     *     // ... the filter for the PC_Nhanvien_Medias we want to count
     *   }
     * })
    **/
    count<T extends PC_Nhanvien_MediaCountArgs>(
      args?: Subset<T, PC_Nhanvien_MediaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_Nhanvien_MediaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Nhanvien_Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_Nhanvien_MediaAggregateArgs>(args: Subset<T, PC_Nhanvien_MediaAggregateArgs>): Prisma.PrismaPromise<GetPC_Nhanvien_MediaAggregateType<T>>

    /**
     * Group by PC_Nhanvien_Media.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Nhanvien_MediaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_Nhanvien_MediaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_Nhanvien_MediaGroupByArgs['orderBy'] }
        : { orderBy?: PC_Nhanvien_MediaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_Nhanvien_MediaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_Nhanvien_MediaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Nhanvien_Media model
   */
  readonly fields: PC_Nhanvien_MediaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Nhanvien_Media.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_Nhanvien_MediaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Nhanvien_Media model
   */ 
  interface PC_Nhanvien_MediaFieldRefs {
    readonly id_Nhanvien: FieldRef<"PC_Nhanvien_Media", 'String'>
    readonly AnhProfile: FieldRef<"PC_Nhanvien_Media", 'Bytes'>
  }
    

  // Custom InputTypes
  /**
   * PC_Nhanvien_Media findUnique
   */
  export type PC_Nhanvien_MediaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien_Media to fetch.
     */
    where: PC_Nhanvien_MediaWhereUniqueInput
  }

  /**
   * PC_Nhanvien_Media findUniqueOrThrow
   */
  export type PC_Nhanvien_MediaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien_Media to fetch.
     */
    where: PC_Nhanvien_MediaWhereUniqueInput
  }

  /**
   * PC_Nhanvien_Media findFirst
   */
  export type PC_Nhanvien_MediaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien_Media to fetch.
     */
    where?: PC_Nhanvien_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanvien_Medias to fetch.
     */
    orderBy?: PC_Nhanvien_MediaOrderByWithRelationInput | PC_Nhanvien_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Nhanvien_Medias.
     */
    cursor?: PC_Nhanvien_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanvien_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanvien_Medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Nhanvien_Medias.
     */
    distinct?: PC_Nhanvien_MediaScalarFieldEnum | PC_Nhanvien_MediaScalarFieldEnum[]
  }

  /**
   * PC_Nhanvien_Media findFirstOrThrow
   */
  export type PC_Nhanvien_MediaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien_Media to fetch.
     */
    where?: PC_Nhanvien_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanvien_Medias to fetch.
     */
    orderBy?: PC_Nhanvien_MediaOrderByWithRelationInput | PC_Nhanvien_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Nhanvien_Medias.
     */
    cursor?: PC_Nhanvien_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanvien_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanvien_Medias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Nhanvien_Medias.
     */
    distinct?: PC_Nhanvien_MediaScalarFieldEnum | PC_Nhanvien_MediaScalarFieldEnum[]
  }

  /**
   * PC_Nhanvien_Media findMany
   */
  export type PC_Nhanvien_MediaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * Filter, which PC_Nhanvien_Medias to fetch.
     */
    where?: PC_Nhanvien_MediaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Nhanvien_Medias to fetch.
     */
    orderBy?: PC_Nhanvien_MediaOrderByWithRelationInput | PC_Nhanvien_MediaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Nhanvien_Medias.
     */
    cursor?: PC_Nhanvien_MediaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Nhanvien_Medias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Nhanvien_Medias.
     */
    skip?: number
    distinct?: PC_Nhanvien_MediaScalarFieldEnum | PC_Nhanvien_MediaScalarFieldEnum[]
  }

  /**
   * PC_Nhanvien_Media create
   */
  export type PC_Nhanvien_MediaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Nhanvien_Media.
     */
    data: XOR<PC_Nhanvien_MediaCreateInput, PC_Nhanvien_MediaUncheckedCreateInput>
  }

  /**
   * PC_Nhanvien_Media createMany
   */
  export type PC_Nhanvien_MediaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Nhanvien_Medias.
     */
    data: PC_Nhanvien_MediaCreateManyInput | PC_Nhanvien_MediaCreateManyInput[]
  }

  /**
   * PC_Nhanvien_Media update
   */
  export type PC_Nhanvien_MediaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Nhanvien_Media.
     */
    data: XOR<PC_Nhanvien_MediaUpdateInput, PC_Nhanvien_MediaUncheckedUpdateInput>
    /**
     * Choose, which PC_Nhanvien_Media to update.
     */
    where: PC_Nhanvien_MediaWhereUniqueInput
  }

  /**
   * PC_Nhanvien_Media updateMany
   */
  export type PC_Nhanvien_MediaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Nhanvien_Medias.
     */
    data: XOR<PC_Nhanvien_MediaUpdateManyMutationInput, PC_Nhanvien_MediaUncheckedUpdateManyInput>
    /**
     * Filter which PC_Nhanvien_Medias to update
     */
    where?: PC_Nhanvien_MediaWhereInput
  }

  /**
   * PC_Nhanvien_Media upsert
   */
  export type PC_Nhanvien_MediaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Nhanvien_Media to update in case it exists.
     */
    where: PC_Nhanvien_MediaWhereUniqueInput
    /**
     * In case the PC_Nhanvien_Media found by the `where` argument doesn't exist, create a new PC_Nhanvien_Media with this data.
     */
    create: XOR<PC_Nhanvien_MediaCreateInput, PC_Nhanvien_MediaUncheckedCreateInput>
    /**
     * In case the PC_Nhanvien_Media was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_Nhanvien_MediaUpdateInput, PC_Nhanvien_MediaUncheckedUpdateInput>
  }

  /**
   * PC_Nhanvien_Media delete
   */
  export type PC_Nhanvien_MediaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
    /**
     * Filter which PC_Nhanvien_Media to delete.
     */
    where: PC_Nhanvien_MediaWhereUniqueInput
  }

  /**
   * PC_Nhanvien_Media deleteMany
   */
  export type PC_Nhanvien_MediaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Nhanvien_Medias to delete
     */
    where?: PC_Nhanvien_MediaWhereInput
  }

  /**
   * PC_Nhanvien_Media without action
   */
  export type PC_Nhanvien_MediaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Nhanvien_Media
     */
    select?: PC_Nhanvien_MediaSelect<ExtArgs> | null
  }


  /**
   * Model PC_NhomTaikhoan
   */

  export type AggregatePC_NhomTaikhoan = {
    _count: PC_NhomTaikhoanCountAggregateOutputType | null
    _avg: PC_NhomTaikhoanAvgAggregateOutputType | null
    _sum: PC_NhomTaikhoanSumAggregateOutputType | null
    _min: PC_NhomTaikhoanMinAggregateOutputType | null
    _max: PC_NhomTaikhoanMaxAggregateOutputType | null
  }

  export type PC_NhomTaikhoanAvgAggregateOutputType = {
    id_NhomTK: number | null
  }

  export type PC_NhomTaikhoanSumAggregateOutputType = {
    id_NhomTK: number | null
  }

  export type PC_NhomTaikhoanMinAggregateOutputType = {
    id_NhomTK: number | null
    enumNhom: string | null
    TenNhom: string | null
    Sudung: boolean | null
  }

  export type PC_NhomTaikhoanMaxAggregateOutputType = {
    id_NhomTK: number | null
    enumNhom: string | null
    TenNhom: string | null
    Sudung: boolean | null
  }

  export type PC_NhomTaikhoanCountAggregateOutputType = {
    id_NhomTK: number
    enumNhom: number
    TenNhom: number
    Sudung: number
    _all: number
  }


  export type PC_NhomTaikhoanAvgAggregateInputType = {
    id_NhomTK?: true
  }

  export type PC_NhomTaikhoanSumAggregateInputType = {
    id_NhomTK?: true
  }

  export type PC_NhomTaikhoanMinAggregateInputType = {
    id_NhomTK?: true
    enumNhom?: true
    TenNhom?: true
    Sudung?: true
  }

  export type PC_NhomTaikhoanMaxAggregateInputType = {
    id_NhomTK?: true
    enumNhom?: true
    TenNhom?: true
    Sudung?: true
  }

  export type PC_NhomTaikhoanCountAggregateInputType = {
    id_NhomTK?: true
    enumNhom?: true
    TenNhom?: true
    Sudung?: true
    _all?: true
  }

  export type PC_NhomTaikhoanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_NhomTaikhoan to aggregate.
     */
    where?: PC_NhomTaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_NhomTaikhoans to fetch.
     */
    orderBy?: PC_NhomTaikhoanOrderByWithRelationInput | PC_NhomTaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_NhomTaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_NhomTaikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_NhomTaikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_NhomTaikhoans
    **/
    _count?: true | PC_NhomTaikhoanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_NhomTaikhoanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_NhomTaikhoanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_NhomTaikhoanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_NhomTaikhoanMaxAggregateInputType
  }

  export type GetPC_NhomTaikhoanAggregateType<T extends PC_NhomTaikhoanAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_NhomTaikhoan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_NhomTaikhoan[P]>
      : GetScalarType<T[P], AggregatePC_NhomTaikhoan[P]>
  }




  export type PC_NhomTaikhoanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_NhomTaikhoanWhereInput
    orderBy?: PC_NhomTaikhoanOrderByWithAggregationInput | PC_NhomTaikhoanOrderByWithAggregationInput[]
    by: PC_NhomTaikhoanScalarFieldEnum[] | PC_NhomTaikhoanScalarFieldEnum
    having?: PC_NhomTaikhoanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_NhomTaikhoanCountAggregateInputType | true
    _avg?: PC_NhomTaikhoanAvgAggregateInputType
    _sum?: PC_NhomTaikhoanSumAggregateInputType
    _min?: PC_NhomTaikhoanMinAggregateInputType
    _max?: PC_NhomTaikhoanMaxAggregateInputType
  }

  export type PC_NhomTaikhoanGroupByOutputType = {
    id_NhomTK: number
    enumNhom: string | null
    TenNhom: string | null
    Sudung: boolean | null
    _count: PC_NhomTaikhoanCountAggregateOutputType | null
    _avg: PC_NhomTaikhoanAvgAggregateOutputType | null
    _sum: PC_NhomTaikhoanSumAggregateOutputType | null
    _min: PC_NhomTaikhoanMinAggregateOutputType | null
    _max: PC_NhomTaikhoanMaxAggregateOutputType | null
  }

  type GetPC_NhomTaikhoanGroupByPayload<T extends PC_NhomTaikhoanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_NhomTaikhoanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_NhomTaikhoanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_NhomTaikhoanGroupByOutputType[P]>
            : GetScalarType<T[P], PC_NhomTaikhoanGroupByOutputType[P]>
        }
      >
    >


  export type PC_NhomTaikhoanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_NhomTK?: boolean
    enumNhom?: boolean
    TenNhom?: boolean
    Sudung?: boolean
  }, ExtArgs["result"]["pC_NhomTaikhoan"]>


  export type PC_NhomTaikhoanSelectScalar = {
    id_NhomTK?: boolean
    enumNhom?: boolean
    TenNhom?: boolean
    Sudung?: boolean
  }


  export type $PC_NhomTaikhoanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_NhomTaikhoan"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_NhomTK: number
      enumNhom: string | null
      TenNhom: string | null
      Sudung: boolean | null
    }, ExtArgs["result"]["pC_NhomTaikhoan"]>
    composites: {}
  }

  type PC_NhomTaikhoanGetPayload<S extends boolean | null | undefined | PC_NhomTaikhoanDefaultArgs> = $Result.GetResult<Prisma.$PC_NhomTaikhoanPayload, S>

  type PC_NhomTaikhoanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_NhomTaikhoanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_NhomTaikhoanCountAggregateInputType | true
    }

  export interface PC_NhomTaikhoanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_NhomTaikhoan'], meta: { name: 'PC_NhomTaikhoan' } }
    /**
     * Find zero or one PC_NhomTaikhoan that matches the filter.
     * @param {PC_NhomTaikhoanFindUniqueArgs} args - Arguments to find a PC_NhomTaikhoan
     * @example
     * // Get one PC_NhomTaikhoan
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_NhomTaikhoanFindUniqueArgs>(args: SelectSubset<T, PC_NhomTaikhoanFindUniqueArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_NhomTaikhoan that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_NhomTaikhoanFindUniqueOrThrowArgs} args - Arguments to find a PC_NhomTaikhoan
     * @example
     * // Get one PC_NhomTaikhoan
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_NhomTaikhoanFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_NhomTaikhoanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_NhomTaikhoan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanFindFirstArgs} args - Arguments to find a PC_NhomTaikhoan
     * @example
     * // Get one PC_NhomTaikhoan
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_NhomTaikhoanFindFirstArgs>(args?: SelectSubset<T, PC_NhomTaikhoanFindFirstArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_NhomTaikhoan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanFindFirstOrThrowArgs} args - Arguments to find a PC_NhomTaikhoan
     * @example
     * // Get one PC_NhomTaikhoan
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_NhomTaikhoanFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_NhomTaikhoanFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_NhomTaikhoans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_NhomTaikhoans
     * const pC_NhomTaikhoans = await prisma.pC_NhomTaikhoan.findMany()
     * 
     * // Get first 10 PC_NhomTaikhoans
     * const pC_NhomTaikhoans = await prisma.pC_NhomTaikhoan.findMany({ take: 10 })
     * 
     * // Only select the `id_NhomTK`
     * const pC_NhomTaikhoanWithId_NhomTKOnly = await prisma.pC_NhomTaikhoan.findMany({ select: { id_NhomTK: true } })
     * 
     */
    findMany<T extends PC_NhomTaikhoanFindManyArgs>(args?: SelectSubset<T, PC_NhomTaikhoanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_NhomTaikhoan.
     * @param {PC_NhomTaikhoanCreateArgs} args - Arguments to create a PC_NhomTaikhoan.
     * @example
     * // Create one PC_NhomTaikhoan
     * const PC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.create({
     *   data: {
     *     // ... data to create a PC_NhomTaikhoan
     *   }
     * })
     * 
     */
    create<T extends PC_NhomTaikhoanCreateArgs>(args: SelectSubset<T, PC_NhomTaikhoanCreateArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_NhomTaikhoans.
     * @param {PC_NhomTaikhoanCreateManyArgs} args - Arguments to create many PC_NhomTaikhoans.
     * @example
     * // Create many PC_NhomTaikhoans
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_NhomTaikhoanCreateManyArgs>(args?: SelectSubset<T, PC_NhomTaikhoanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_NhomTaikhoan.
     * @param {PC_NhomTaikhoanDeleteArgs} args - Arguments to delete one PC_NhomTaikhoan.
     * @example
     * // Delete one PC_NhomTaikhoan
     * const PC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.delete({
     *   where: {
     *     // ... filter to delete one PC_NhomTaikhoan
     *   }
     * })
     * 
     */
    delete<T extends PC_NhomTaikhoanDeleteArgs>(args: SelectSubset<T, PC_NhomTaikhoanDeleteArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_NhomTaikhoan.
     * @param {PC_NhomTaikhoanUpdateArgs} args - Arguments to update one PC_NhomTaikhoan.
     * @example
     * // Update one PC_NhomTaikhoan
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_NhomTaikhoanUpdateArgs>(args: SelectSubset<T, PC_NhomTaikhoanUpdateArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_NhomTaikhoans.
     * @param {PC_NhomTaikhoanDeleteManyArgs} args - Arguments to filter PC_NhomTaikhoans to delete.
     * @example
     * // Delete a few PC_NhomTaikhoans
     * const { count } = await prisma.pC_NhomTaikhoan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_NhomTaikhoanDeleteManyArgs>(args?: SelectSubset<T, PC_NhomTaikhoanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_NhomTaikhoans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_NhomTaikhoans
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_NhomTaikhoanUpdateManyArgs>(args: SelectSubset<T, PC_NhomTaikhoanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_NhomTaikhoan.
     * @param {PC_NhomTaikhoanUpsertArgs} args - Arguments to update or create a PC_NhomTaikhoan.
     * @example
     * // Update or create a PC_NhomTaikhoan
     * const pC_NhomTaikhoan = await prisma.pC_NhomTaikhoan.upsert({
     *   create: {
     *     // ... data to create a PC_NhomTaikhoan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_NhomTaikhoan we want to update
     *   }
     * })
     */
    upsert<T extends PC_NhomTaikhoanUpsertArgs>(args: SelectSubset<T, PC_NhomTaikhoanUpsertArgs<ExtArgs>>): Prisma__PC_NhomTaikhoanClient<$Result.GetResult<Prisma.$PC_NhomTaikhoanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_NhomTaikhoans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanCountArgs} args - Arguments to filter PC_NhomTaikhoans to count.
     * @example
     * // Count the number of PC_NhomTaikhoans
     * const count = await prisma.pC_NhomTaikhoan.count({
     *   where: {
     *     // ... the filter for the PC_NhomTaikhoans we want to count
     *   }
     * })
    **/
    count<T extends PC_NhomTaikhoanCountArgs>(
      args?: Subset<T, PC_NhomTaikhoanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_NhomTaikhoanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_NhomTaikhoan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_NhomTaikhoanAggregateArgs>(args: Subset<T, PC_NhomTaikhoanAggregateArgs>): Prisma.PrismaPromise<GetPC_NhomTaikhoanAggregateType<T>>

    /**
     * Group by PC_NhomTaikhoan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_NhomTaikhoanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_NhomTaikhoanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_NhomTaikhoanGroupByArgs['orderBy'] }
        : { orderBy?: PC_NhomTaikhoanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_NhomTaikhoanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_NhomTaikhoanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_NhomTaikhoan model
   */
  readonly fields: PC_NhomTaikhoanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_NhomTaikhoan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_NhomTaikhoanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_NhomTaikhoan model
   */ 
  interface PC_NhomTaikhoanFieldRefs {
    readonly id_NhomTK: FieldRef<"PC_NhomTaikhoan", 'Int'>
    readonly enumNhom: FieldRef<"PC_NhomTaikhoan", 'String'>
    readonly TenNhom: FieldRef<"PC_NhomTaikhoan", 'String'>
    readonly Sudung: FieldRef<"PC_NhomTaikhoan", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * PC_NhomTaikhoan findUnique
   */
  export type PC_NhomTaikhoanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_NhomTaikhoan to fetch.
     */
    where: PC_NhomTaikhoanWhereUniqueInput
  }

  /**
   * PC_NhomTaikhoan findUniqueOrThrow
   */
  export type PC_NhomTaikhoanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_NhomTaikhoan to fetch.
     */
    where: PC_NhomTaikhoanWhereUniqueInput
  }

  /**
   * PC_NhomTaikhoan findFirst
   */
  export type PC_NhomTaikhoanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_NhomTaikhoan to fetch.
     */
    where?: PC_NhomTaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_NhomTaikhoans to fetch.
     */
    orderBy?: PC_NhomTaikhoanOrderByWithRelationInput | PC_NhomTaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_NhomTaikhoans.
     */
    cursor?: PC_NhomTaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_NhomTaikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_NhomTaikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_NhomTaikhoans.
     */
    distinct?: PC_NhomTaikhoanScalarFieldEnum | PC_NhomTaikhoanScalarFieldEnum[]
  }

  /**
   * PC_NhomTaikhoan findFirstOrThrow
   */
  export type PC_NhomTaikhoanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_NhomTaikhoan to fetch.
     */
    where?: PC_NhomTaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_NhomTaikhoans to fetch.
     */
    orderBy?: PC_NhomTaikhoanOrderByWithRelationInput | PC_NhomTaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_NhomTaikhoans.
     */
    cursor?: PC_NhomTaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_NhomTaikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_NhomTaikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_NhomTaikhoans.
     */
    distinct?: PC_NhomTaikhoanScalarFieldEnum | PC_NhomTaikhoanScalarFieldEnum[]
  }

  /**
   * PC_NhomTaikhoan findMany
   */
  export type PC_NhomTaikhoanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_NhomTaikhoans to fetch.
     */
    where?: PC_NhomTaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_NhomTaikhoans to fetch.
     */
    orderBy?: PC_NhomTaikhoanOrderByWithRelationInput | PC_NhomTaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_NhomTaikhoans.
     */
    cursor?: PC_NhomTaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_NhomTaikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_NhomTaikhoans.
     */
    skip?: number
    distinct?: PC_NhomTaikhoanScalarFieldEnum | PC_NhomTaikhoanScalarFieldEnum[]
  }

  /**
   * PC_NhomTaikhoan create
   */
  export type PC_NhomTaikhoanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_NhomTaikhoan.
     */
    data?: XOR<PC_NhomTaikhoanCreateInput, PC_NhomTaikhoanUncheckedCreateInput>
  }

  /**
   * PC_NhomTaikhoan createMany
   */
  export type PC_NhomTaikhoanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_NhomTaikhoans.
     */
    data: PC_NhomTaikhoanCreateManyInput | PC_NhomTaikhoanCreateManyInput[]
  }

  /**
   * PC_NhomTaikhoan update
   */
  export type PC_NhomTaikhoanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_NhomTaikhoan.
     */
    data: XOR<PC_NhomTaikhoanUpdateInput, PC_NhomTaikhoanUncheckedUpdateInput>
    /**
     * Choose, which PC_NhomTaikhoan to update.
     */
    where: PC_NhomTaikhoanWhereUniqueInput
  }

  /**
   * PC_NhomTaikhoan updateMany
   */
  export type PC_NhomTaikhoanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_NhomTaikhoans.
     */
    data: XOR<PC_NhomTaikhoanUpdateManyMutationInput, PC_NhomTaikhoanUncheckedUpdateManyInput>
    /**
     * Filter which PC_NhomTaikhoans to update
     */
    where?: PC_NhomTaikhoanWhereInput
  }

  /**
   * PC_NhomTaikhoan upsert
   */
  export type PC_NhomTaikhoanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_NhomTaikhoan to update in case it exists.
     */
    where: PC_NhomTaikhoanWhereUniqueInput
    /**
     * In case the PC_NhomTaikhoan found by the `where` argument doesn't exist, create a new PC_NhomTaikhoan with this data.
     */
    create: XOR<PC_NhomTaikhoanCreateInput, PC_NhomTaikhoanUncheckedCreateInput>
    /**
     * In case the PC_NhomTaikhoan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_NhomTaikhoanUpdateInput, PC_NhomTaikhoanUncheckedUpdateInput>
  }

  /**
   * PC_NhomTaikhoan delete
   */
  export type PC_NhomTaikhoanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
    /**
     * Filter which PC_NhomTaikhoan to delete.
     */
    where: PC_NhomTaikhoanWhereUniqueInput
  }

  /**
   * PC_NhomTaikhoan deleteMany
   */
  export type PC_NhomTaikhoanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_NhomTaikhoans to delete
     */
    where?: PC_NhomTaikhoanWhereInput
  }

  /**
   * PC_NhomTaikhoan without action
   */
  export type PC_NhomTaikhoanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_NhomTaikhoan
     */
    select?: PC_NhomTaikhoanSelect<ExtArgs> | null
  }


  /**
   * Model PC_Phienban
   */

  export type AggregatePC_Phienban = {
    _count: PC_PhienbanCountAggregateOutputType | null
    _min: PC_PhienbanMinAggregateOutputType | null
    _max: PC_PhienbanMaxAggregateOutputType | null
  }

  export type PC_PhienbanMinAggregateOutputType = {
    ID_Phienban: string | null
    Ten: string | null
    Ngayphathanh: Date | null
    Duongdan: string | null
    Kichhoat: boolean | null
    Ghichu: string | null
  }

  export type PC_PhienbanMaxAggregateOutputType = {
    ID_Phienban: string | null
    Ten: string | null
    Ngayphathanh: Date | null
    Duongdan: string | null
    Kichhoat: boolean | null
    Ghichu: string | null
  }

  export type PC_PhienbanCountAggregateOutputType = {
    ID_Phienban: number
    Ten: number
    Ngayphathanh: number
    Duongdan: number
    Kichhoat: number
    Ghichu: number
    _all: number
  }


  export type PC_PhienbanMinAggregateInputType = {
    ID_Phienban?: true
    Ten?: true
    Ngayphathanh?: true
    Duongdan?: true
    Kichhoat?: true
    Ghichu?: true
  }

  export type PC_PhienbanMaxAggregateInputType = {
    ID_Phienban?: true
    Ten?: true
    Ngayphathanh?: true
    Duongdan?: true
    Kichhoat?: true
    Ghichu?: true
  }

  export type PC_PhienbanCountAggregateInputType = {
    ID_Phienban?: true
    Ten?: true
    Ngayphathanh?: true
    Duongdan?: true
    Kichhoat?: true
    Ghichu?: true
    _all?: true
  }

  export type PC_PhienbanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Phienban to aggregate.
     */
    where?: PC_PhienbanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Phienbans to fetch.
     */
    orderBy?: PC_PhienbanOrderByWithRelationInput | PC_PhienbanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_PhienbanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Phienbans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Phienbans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Phienbans
    **/
    _count?: true | PC_PhienbanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_PhienbanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_PhienbanMaxAggregateInputType
  }

  export type GetPC_PhienbanAggregateType<T extends PC_PhienbanAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Phienban]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Phienban[P]>
      : GetScalarType<T[P], AggregatePC_Phienban[P]>
  }




  export type PC_PhienbanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_PhienbanWhereInput
    orderBy?: PC_PhienbanOrderByWithAggregationInput | PC_PhienbanOrderByWithAggregationInput[]
    by: PC_PhienbanScalarFieldEnum[] | PC_PhienbanScalarFieldEnum
    having?: PC_PhienbanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_PhienbanCountAggregateInputType | true
    _min?: PC_PhienbanMinAggregateInputType
    _max?: PC_PhienbanMaxAggregateInputType
  }

  export type PC_PhienbanGroupByOutputType = {
    ID_Phienban: string
    Ten: string | null
    Ngayphathanh: Date | null
    Duongdan: string | null
    Kichhoat: boolean | null
    Ghichu: string | null
    _count: PC_PhienbanCountAggregateOutputType | null
    _min: PC_PhienbanMinAggregateOutputType | null
    _max: PC_PhienbanMaxAggregateOutputType | null
  }

  type GetPC_PhienbanGroupByPayload<T extends PC_PhienbanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_PhienbanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_PhienbanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_PhienbanGroupByOutputType[P]>
            : GetScalarType<T[P], PC_PhienbanGroupByOutputType[P]>
        }
      >
    >


  export type PC_PhienbanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_Phienban?: boolean
    Ten?: boolean
    Ngayphathanh?: boolean
    Duongdan?: boolean
    Kichhoat?: boolean
    Ghichu?: boolean
  }, ExtArgs["result"]["pC_Phienban"]>


  export type PC_PhienbanSelectScalar = {
    ID_Phienban?: boolean
    Ten?: boolean
    Ngayphathanh?: boolean
    Duongdan?: boolean
    Kichhoat?: boolean
    Ghichu?: boolean
  }


  export type $PC_PhienbanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Phienban"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_Phienban: string
      Ten: string | null
      Ngayphathanh: Date | null
      Duongdan: string | null
      Kichhoat: boolean | null
      Ghichu: string | null
    }, ExtArgs["result"]["pC_Phienban"]>
    composites: {}
  }

  type PC_PhienbanGetPayload<S extends boolean | null | undefined | PC_PhienbanDefaultArgs> = $Result.GetResult<Prisma.$PC_PhienbanPayload, S>

  type PC_PhienbanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_PhienbanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_PhienbanCountAggregateInputType | true
    }

  export interface PC_PhienbanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Phienban'], meta: { name: 'PC_Phienban' } }
    /**
     * Find zero or one PC_Phienban that matches the filter.
     * @param {PC_PhienbanFindUniqueArgs} args - Arguments to find a PC_Phienban
     * @example
     * // Get one PC_Phienban
     * const pC_Phienban = await prisma.pC_Phienban.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_PhienbanFindUniqueArgs>(args: SelectSubset<T, PC_PhienbanFindUniqueArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Phienban that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_PhienbanFindUniqueOrThrowArgs} args - Arguments to find a PC_Phienban
     * @example
     * // Get one PC_Phienban
     * const pC_Phienban = await prisma.pC_Phienban.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_PhienbanFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_PhienbanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Phienban that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanFindFirstArgs} args - Arguments to find a PC_Phienban
     * @example
     * // Get one PC_Phienban
     * const pC_Phienban = await prisma.pC_Phienban.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_PhienbanFindFirstArgs>(args?: SelectSubset<T, PC_PhienbanFindFirstArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Phienban that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanFindFirstOrThrowArgs} args - Arguments to find a PC_Phienban
     * @example
     * // Get one PC_Phienban
     * const pC_Phienban = await prisma.pC_Phienban.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_PhienbanFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_PhienbanFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Phienbans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Phienbans
     * const pC_Phienbans = await prisma.pC_Phienban.findMany()
     * 
     * // Get first 10 PC_Phienbans
     * const pC_Phienbans = await prisma.pC_Phienban.findMany({ take: 10 })
     * 
     * // Only select the `ID_Phienban`
     * const pC_PhienbanWithID_PhienbanOnly = await prisma.pC_Phienban.findMany({ select: { ID_Phienban: true } })
     * 
     */
    findMany<T extends PC_PhienbanFindManyArgs>(args?: SelectSubset<T, PC_PhienbanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Phienban.
     * @param {PC_PhienbanCreateArgs} args - Arguments to create a PC_Phienban.
     * @example
     * // Create one PC_Phienban
     * const PC_Phienban = await prisma.pC_Phienban.create({
     *   data: {
     *     // ... data to create a PC_Phienban
     *   }
     * })
     * 
     */
    create<T extends PC_PhienbanCreateArgs>(args: SelectSubset<T, PC_PhienbanCreateArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Phienbans.
     * @param {PC_PhienbanCreateManyArgs} args - Arguments to create many PC_Phienbans.
     * @example
     * // Create many PC_Phienbans
     * const pC_Phienban = await prisma.pC_Phienban.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_PhienbanCreateManyArgs>(args?: SelectSubset<T, PC_PhienbanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Phienban.
     * @param {PC_PhienbanDeleteArgs} args - Arguments to delete one PC_Phienban.
     * @example
     * // Delete one PC_Phienban
     * const PC_Phienban = await prisma.pC_Phienban.delete({
     *   where: {
     *     // ... filter to delete one PC_Phienban
     *   }
     * })
     * 
     */
    delete<T extends PC_PhienbanDeleteArgs>(args: SelectSubset<T, PC_PhienbanDeleteArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Phienban.
     * @param {PC_PhienbanUpdateArgs} args - Arguments to update one PC_Phienban.
     * @example
     * // Update one PC_Phienban
     * const pC_Phienban = await prisma.pC_Phienban.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_PhienbanUpdateArgs>(args: SelectSubset<T, PC_PhienbanUpdateArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Phienbans.
     * @param {PC_PhienbanDeleteManyArgs} args - Arguments to filter PC_Phienbans to delete.
     * @example
     * // Delete a few PC_Phienbans
     * const { count } = await prisma.pC_Phienban.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_PhienbanDeleteManyArgs>(args?: SelectSubset<T, PC_PhienbanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Phienbans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Phienbans
     * const pC_Phienban = await prisma.pC_Phienban.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_PhienbanUpdateManyArgs>(args: SelectSubset<T, PC_PhienbanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Phienban.
     * @param {PC_PhienbanUpsertArgs} args - Arguments to update or create a PC_Phienban.
     * @example
     * // Update or create a PC_Phienban
     * const pC_Phienban = await prisma.pC_Phienban.upsert({
     *   create: {
     *     // ... data to create a PC_Phienban
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Phienban we want to update
     *   }
     * })
     */
    upsert<T extends PC_PhienbanUpsertArgs>(args: SelectSubset<T, PC_PhienbanUpsertArgs<ExtArgs>>): Prisma__PC_PhienbanClient<$Result.GetResult<Prisma.$PC_PhienbanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Phienbans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanCountArgs} args - Arguments to filter PC_Phienbans to count.
     * @example
     * // Count the number of PC_Phienbans
     * const count = await prisma.pC_Phienban.count({
     *   where: {
     *     // ... the filter for the PC_Phienbans we want to count
     *   }
     * })
    **/
    count<T extends PC_PhienbanCountArgs>(
      args?: Subset<T, PC_PhienbanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_PhienbanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Phienban.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_PhienbanAggregateArgs>(args: Subset<T, PC_PhienbanAggregateArgs>): Prisma.PrismaPromise<GetPC_PhienbanAggregateType<T>>

    /**
     * Group by PC_Phienban.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_PhienbanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_PhienbanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_PhienbanGroupByArgs['orderBy'] }
        : { orderBy?: PC_PhienbanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_PhienbanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_PhienbanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Phienban model
   */
  readonly fields: PC_PhienbanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Phienban.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_PhienbanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Phienban model
   */ 
  interface PC_PhienbanFieldRefs {
    readonly ID_Phienban: FieldRef<"PC_Phienban", 'String'>
    readonly Ten: FieldRef<"PC_Phienban", 'String'>
    readonly Ngayphathanh: FieldRef<"PC_Phienban", 'DateTime'>
    readonly Duongdan: FieldRef<"PC_Phienban", 'String'>
    readonly Kichhoat: FieldRef<"PC_Phienban", 'Boolean'>
    readonly Ghichu: FieldRef<"PC_Phienban", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Phienban findUnique
   */
  export type PC_PhienbanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Phienban to fetch.
     */
    where: PC_PhienbanWhereUniqueInput
  }

  /**
   * PC_Phienban findUniqueOrThrow
   */
  export type PC_PhienbanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Phienban to fetch.
     */
    where: PC_PhienbanWhereUniqueInput
  }

  /**
   * PC_Phienban findFirst
   */
  export type PC_PhienbanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Phienban to fetch.
     */
    where?: PC_PhienbanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Phienbans to fetch.
     */
    orderBy?: PC_PhienbanOrderByWithRelationInput | PC_PhienbanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Phienbans.
     */
    cursor?: PC_PhienbanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Phienbans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Phienbans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Phienbans.
     */
    distinct?: PC_PhienbanScalarFieldEnum | PC_PhienbanScalarFieldEnum[]
  }

  /**
   * PC_Phienban findFirstOrThrow
   */
  export type PC_PhienbanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Phienban to fetch.
     */
    where?: PC_PhienbanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Phienbans to fetch.
     */
    orderBy?: PC_PhienbanOrderByWithRelationInput | PC_PhienbanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Phienbans.
     */
    cursor?: PC_PhienbanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Phienbans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Phienbans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Phienbans.
     */
    distinct?: PC_PhienbanScalarFieldEnum | PC_PhienbanScalarFieldEnum[]
  }

  /**
   * PC_Phienban findMany
   */
  export type PC_PhienbanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Phienbans to fetch.
     */
    where?: PC_PhienbanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Phienbans to fetch.
     */
    orderBy?: PC_PhienbanOrderByWithRelationInput | PC_PhienbanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Phienbans.
     */
    cursor?: PC_PhienbanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Phienbans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Phienbans.
     */
    skip?: number
    distinct?: PC_PhienbanScalarFieldEnum | PC_PhienbanScalarFieldEnum[]
  }

  /**
   * PC_Phienban create
   */
  export type PC_PhienbanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Phienban.
     */
    data: XOR<PC_PhienbanCreateInput, PC_PhienbanUncheckedCreateInput>
  }

  /**
   * PC_Phienban createMany
   */
  export type PC_PhienbanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Phienbans.
     */
    data: PC_PhienbanCreateManyInput | PC_PhienbanCreateManyInput[]
  }

  /**
   * PC_Phienban update
   */
  export type PC_PhienbanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Phienban.
     */
    data: XOR<PC_PhienbanUpdateInput, PC_PhienbanUncheckedUpdateInput>
    /**
     * Choose, which PC_Phienban to update.
     */
    where: PC_PhienbanWhereUniqueInput
  }

  /**
   * PC_Phienban updateMany
   */
  export type PC_PhienbanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Phienbans.
     */
    data: XOR<PC_PhienbanUpdateManyMutationInput, PC_PhienbanUncheckedUpdateManyInput>
    /**
     * Filter which PC_Phienbans to update
     */
    where?: PC_PhienbanWhereInput
  }

  /**
   * PC_Phienban upsert
   */
  export type PC_PhienbanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Phienban to update in case it exists.
     */
    where: PC_PhienbanWhereUniqueInput
    /**
     * In case the PC_Phienban found by the `where` argument doesn't exist, create a new PC_Phienban with this data.
     */
    create: XOR<PC_PhienbanCreateInput, PC_PhienbanUncheckedCreateInput>
    /**
     * In case the PC_Phienban was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_PhienbanUpdateInput, PC_PhienbanUncheckedUpdateInput>
  }

  /**
   * PC_Phienban delete
   */
  export type PC_PhienbanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
    /**
     * Filter which PC_Phienban to delete.
     */
    where: PC_PhienbanWhereUniqueInput
  }

  /**
   * PC_Phienban deleteMany
   */
  export type PC_PhienbanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Phienbans to delete
     */
    where?: PC_PhienbanWhereInput
  }

  /**
   * PC_Phienban without action
   */
  export type PC_PhienbanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Phienban
     */
    select?: PC_PhienbanSelect<ExtArgs> | null
  }


  /**
   * Model PC_Taikhoan
   */

  export type AggregatePC_Taikhoan = {
    _count: PC_TaikhoanCountAggregateOutputType | null
    _min: PC_TaikhoanMinAggregateOutputType | null
    _max: PC_TaikhoanMaxAggregateOutputType | null
  }

  export type PC_TaikhoanMinAggregateOutputType = {
    id_User: string | null
    Password: string | null
    Name: string | null
    Email: string | null
    Device_IMEI: string | null
    Device_OS: string | null
    Device_Version: string | null
    DateCreate: Date | null
    DaDoiPass: boolean | null
    Active: boolean | null
    Disable: boolean | null
    LastLogin: Date | null
    LastLogin_Web: Date | null
    Login_App: boolean | null
    Login_Web: boolean | null
    Avatar: string | null
    ID_ChiNhanh: string | null
  }

  export type PC_TaikhoanMaxAggregateOutputType = {
    id_User: string | null
    Password: string | null
    Name: string | null
    Email: string | null
    Device_IMEI: string | null
    Device_OS: string | null
    Device_Version: string | null
    DateCreate: Date | null
    DaDoiPass: boolean | null
    Active: boolean | null
    Disable: boolean | null
    LastLogin: Date | null
    LastLogin_Web: Date | null
    Login_App: boolean | null
    Login_Web: boolean | null
    Avatar: string | null
    ID_ChiNhanh: string | null
  }

  export type PC_TaikhoanCountAggregateOutputType = {
    id_User: number
    Password: number
    Name: number
    Email: number
    Device_IMEI: number
    Device_OS: number
    Device_Version: number
    DateCreate: number
    DaDoiPass: number
    Active: number
    Disable: number
    LastLogin: number
    LastLogin_Web: number
    Login_App: number
    Login_Web: number
    Avatar: number
    ID_ChiNhanh: number
    _all: number
  }


  export type PC_TaikhoanMinAggregateInputType = {
    id_User?: true
    Password?: true
    Name?: true
    Email?: true
    Device_IMEI?: true
    Device_OS?: true
    Device_Version?: true
    DateCreate?: true
    DaDoiPass?: true
    Active?: true
    Disable?: true
    LastLogin?: true
    LastLogin_Web?: true
    Login_App?: true
    Login_Web?: true
    Avatar?: true
    ID_ChiNhanh?: true
  }

  export type PC_TaikhoanMaxAggregateInputType = {
    id_User?: true
    Password?: true
    Name?: true
    Email?: true
    Device_IMEI?: true
    Device_OS?: true
    Device_Version?: true
    DateCreate?: true
    DaDoiPass?: true
    Active?: true
    Disable?: true
    LastLogin?: true
    LastLogin_Web?: true
    Login_App?: true
    Login_Web?: true
    Avatar?: true
    ID_ChiNhanh?: true
  }

  export type PC_TaikhoanCountAggregateInputType = {
    id_User?: true
    Password?: true
    Name?: true
    Email?: true
    Device_IMEI?: true
    Device_OS?: true
    Device_Version?: true
    DateCreate?: true
    DaDoiPass?: true
    Active?: true
    Disable?: true
    LastLogin?: true
    LastLogin_Web?: true
    Login_App?: true
    Login_Web?: true
    Avatar?: true
    ID_ChiNhanh?: true
    _all?: true
  }

  export type PC_TaikhoanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Taikhoan to aggregate.
     */
    where?: PC_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoans to fetch.
     */
    orderBy?: PC_TaikhoanOrderByWithRelationInput | PC_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Taikhoans
    **/
    _count?: true | PC_TaikhoanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_TaikhoanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_TaikhoanMaxAggregateInputType
  }

  export type GetPC_TaikhoanAggregateType<T extends PC_TaikhoanAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Taikhoan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Taikhoan[P]>
      : GetScalarType<T[P], AggregatePC_Taikhoan[P]>
  }




  export type PC_TaikhoanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_TaikhoanWhereInput
    orderBy?: PC_TaikhoanOrderByWithAggregationInput | PC_TaikhoanOrderByWithAggregationInput[]
    by: PC_TaikhoanScalarFieldEnum[] | PC_TaikhoanScalarFieldEnum
    having?: PC_TaikhoanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_TaikhoanCountAggregateInputType | true
    _min?: PC_TaikhoanMinAggregateInputType
    _max?: PC_TaikhoanMaxAggregateInputType
  }

  export type PC_TaikhoanGroupByOutputType = {
    id_User: string
    Password: string | null
    Name: string | null
    Email: string | null
    Device_IMEI: string | null
    Device_OS: string | null
    Device_Version: string | null
    DateCreate: Date | null
    DaDoiPass: boolean | null
    Active: boolean | null
    Disable: boolean | null
    LastLogin: Date | null
    LastLogin_Web: Date | null
    Login_App: boolean | null
    Login_Web: boolean | null
    Avatar: string | null
    ID_ChiNhanh: string | null
    _count: PC_TaikhoanCountAggregateOutputType | null
    _min: PC_TaikhoanMinAggregateOutputType | null
    _max: PC_TaikhoanMaxAggregateOutputType | null
  }

  type GetPC_TaikhoanGroupByPayload<T extends PC_TaikhoanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_TaikhoanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_TaikhoanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_TaikhoanGroupByOutputType[P]>
            : GetScalarType<T[P], PC_TaikhoanGroupByOutputType[P]>
        }
      >
    >


  export type PC_TaikhoanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_User?: boolean
    Password?: boolean
    Name?: boolean
    Email?: boolean
    Device_IMEI?: boolean
    Device_OS?: boolean
    Device_Version?: boolean
    DateCreate?: boolean
    DaDoiPass?: boolean
    Active?: boolean
    Disable?: boolean
    LastLogin?: boolean
    LastLogin_Web?: boolean
    Login_App?: boolean
    Login_Web?: boolean
    Avatar?: boolean
    ID_ChiNhanh?: boolean
  }, ExtArgs["result"]["pC_Taikhoan"]>


  export type PC_TaikhoanSelectScalar = {
    id_User?: boolean
    Password?: boolean
    Name?: boolean
    Email?: boolean
    Device_IMEI?: boolean
    Device_OS?: boolean
    Device_Version?: boolean
    DateCreate?: boolean
    DaDoiPass?: boolean
    Active?: boolean
    Disable?: boolean
    LastLogin?: boolean
    LastLogin_Web?: boolean
    Login_App?: boolean
    Login_Web?: boolean
    Avatar?: boolean
    ID_ChiNhanh?: boolean
  }


  export type $PC_TaikhoanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Taikhoan"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_User: string
      Password: string | null
      Name: string | null
      Email: string | null
      Device_IMEI: string | null
      Device_OS: string | null
      Device_Version: string | null
      DateCreate: Date | null
      DaDoiPass: boolean | null
      Active: boolean | null
      Disable: boolean | null
      LastLogin: Date | null
      LastLogin_Web: Date | null
      Login_App: boolean | null
      Login_Web: boolean | null
      Avatar: string | null
      ID_ChiNhanh: string | null
    }, ExtArgs["result"]["pC_Taikhoan"]>
    composites: {}
  }

  type PC_TaikhoanGetPayload<S extends boolean | null | undefined | PC_TaikhoanDefaultArgs> = $Result.GetResult<Prisma.$PC_TaikhoanPayload, S>

  type PC_TaikhoanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_TaikhoanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_TaikhoanCountAggregateInputType | true
    }

  export interface PC_TaikhoanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Taikhoan'], meta: { name: 'PC_Taikhoan' } }
    /**
     * Find zero or one PC_Taikhoan that matches the filter.
     * @param {PC_TaikhoanFindUniqueArgs} args - Arguments to find a PC_Taikhoan
     * @example
     * // Get one PC_Taikhoan
     * const pC_Taikhoan = await prisma.pC_Taikhoan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_TaikhoanFindUniqueArgs>(args: SelectSubset<T, PC_TaikhoanFindUniqueArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Taikhoan that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_TaikhoanFindUniqueOrThrowArgs} args - Arguments to find a PC_Taikhoan
     * @example
     * // Get one PC_Taikhoan
     * const pC_Taikhoan = await prisma.pC_Taikhoan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_TaikhoanFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_TaikhoanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Taikhoan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanFindFirstArgs} args - Arguments to find a PC_Taikhoan
     * @example
     * // Get one PC_Taikhoan
     * const pC_Taikhoan = await prisma.pC_Taikhoan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_TaikhoanFindFirstArgs>(args?: SelectSubset<T, PC_TaikhoanFindFirstArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Taikhoan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanFindFirstOrThrowArgs} args - Arguments to find a PC_Taikhoan
     * @example
     * // Get one PC_Taikhoan
     * const pC_Taikhoan = await prisma.pC_Taikhoan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_TaikhoanFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_TaikhoanFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Taikhoans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Taikhoans
     * const pC_Taikhoans = await prisma.pC_Taikhoan.findMany()
     * 
     * // Get first 10 PC_Taikhoans
     * const pC_Taikhoans = await prisma.pC_Taikhoan.findMany({ take: 10 })
     * 
     * // Only select the `id_User`
     * const pC_TaikhoanWithId_UserOnly = await prisma.pC_Taikhoan.findMany({ select: { id_User: true } })
     * 
     */
    findMany<T extends PC_TaikhoanFindManyArgs>(args?: SelectSubset<T, PC_TaikhoanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Taikhoan.
     * @param {PC_TaikhoanCreateArgs} args - Arguments to create a PC_Taikhoan.
     * @example
     * // Create one PC_Taikhoan
     * const PC_Taikhoan = await prisma.pC_Taikhoan.create({
     *   data: {
     *     // ... data to create a PC_Taikhoan
     *   }
     * })
     * 
     */
    create<T extends PC_TaikhoanCreateArgs>(args: SelectSubset<T, PC_TaikhoanCreateArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Taikhoans.
     * @param {PC_TaikhoanCreateManyArgs} args - Arguments to create many PC_Taikhoans.
     * @example
     * // Create many PC_Taikhoans
     * const pC_Taikhoan = await prisma.pC_Taikhoan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_TaikhoanCreateManyArgs>(args?: SelectSubset<T, PC_TaikhoanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Taikhoan.
     * @param {PC_TaikhoanDeleteArgs} args - Arguments to delete one PC_Taikhoan.
     * @example
     * // Delete one PC_Taikhoan
     * const PC_Taikhoan = await prisma.pC_Taikhoan.delete({
     *   where: {
     *     // ... filter to delete one PC_Taikhoan
     *   }
     * })
     * 
     */
    delete<T extends PC_TaikhoanDeleteArgs>(args: SelectSubset<T, PC_TaikhoanDeleteArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Taikhoan.
     * @param {PC_TaikhoanUpdateArgs} args - Arguments to update one PC_Taikhoan.
     * @example
     * // Update one PC_Taikhoan
     * const pC_Taikhoan = await prisma.pC_Taikhoan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_TaikhoanUpdateArgs>(args: SelectSubset<T, PC_TaikhoanUpdateArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Taikhoans.
     * @param {PC_TaikhoanDeleteManyArgs} args - Arguments to filter PC_Taikhoans to delete.
     * @example
     * // Delete a few PC_Taikhoans
     * const { count } = await prisma.pC_Taikhoan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_TaikhoanDeleteManyArgs>(args?: SelectSubset<T, PC_TaikhoanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Taikhoans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Taikhoans
     * const pC_Taikhoan = await prisma.pC_Taikhoan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_TaikhoanUpdateManyArgs>(args: SelectSubset<T, PC_TaikhoanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Taikhoan.
     * @param {PC_TaikhoanUpsertArgs} args - Arguments to update or create a PC_Taikhoan.
     * @example
     * // Update or create a PC_Taikhoan
     * const pC_Taikhoan = await prisma.pC_Taikhoan.upsert({
     *   create: {
     *     // ... data to create a PC_Taikhoan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Taikhoan we want to update
     *   }
     * })
     */
    upsert<T extends PC_TaikhoanUpsertArgs>(args: SelectSubset<T, PC_TaikhoanUpsertArgs<ExtArgs>>): Prisma__PC_TaikhoanClient<$Result.GetResult<Prisma.$PC_TaikhoanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Taikhoans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanCountArgs} args - Arguments to filter PC_Taikhoans to count.
     * @example
     * // Count the number of PC_Taikhoans
     * const count = await prisma.pC_Taikhoan.count({
     *   where: {
     *     // ... the filter for the PC_Taikhoans we want to count
     *   }
     * })
    **/
    count<T extends PC_TaikhoanCountArgs>(
      args?: Subset<T, PC_TaikhoanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_TaikhoanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Taikhoan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_TaikhoanAggregateArgs>(args: Subset<T, PC_TaikhoanAggregateArgs>): Prisma.PrismaPromise<GetPC_TaikhoanAggregateType<T>>

    /**
     * Group by PC_Taikhoan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TaikhoanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_TaikhoanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_TaikhoanGroupByArgs['orderBy'] }
        : { orderBy?: PC_TaikhoanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_TaikhoanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_TaikhoanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Taikhoan model
   */
  readonly fields: PC_TaikhoanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Taikhoan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_TaikhoanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Taikhoan model
   */ 
  interface PC_TaikhoanFieldRefs {
    readonly id_User: FieldRef<"PC_Taikhoan", 'String'>
    readonly Password: FieldRef<"PC_Taikhoan", 'String'>
    readonly Name: FieldRef<"PC_Taikhoan", 'String'>
    readonly Email: FieldRef<"PC_Taikhoan", 'String'>
    readonly Device_IMEI: FieldRef<"PC_Taikhoan", 'String'>
    readonly Device_OS: FieldRef<"PC_Taikhoan", 'String'>
    readonly Device_Version: FieldRef<"PC_Taikhoan", 'String'>
    readonly DateCreate: FieldRef<"PC_Taikhoan", 'DateTime'>
    readonly DaDoiPass: FieldRef<"PC_Taikhoan", 'Boolean'>
    readonly Active: FieldRef<"PC_Taikhoan", 'Boolean'>
    readonly Disable: FieldRef<"PC_Taikhoan", 'Boolean'>
    readonly LastLogin: FieldRef<"PC_Taikhoan", 'DateTime'>
    readonly LastLogin_Web: FieldRef<"PC_Taikhoan", 'DateTime'>
    readonly Login_App: FieldRef<"PC_Taikhoan", 'Boolean'>
    readonly Login_Web: FieldRef<"PC_Taikhoan", 'Boolean'>
    readonly Avatar: FieldRef<"PC_Taikhoan", 'String'>
    readonly ID_ChiNhanh: FieldRef<"PC_Taikhoan", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Taikhoan findUnique
   */
  export type PC_TaikhoanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan to fetch.
     */
    where: PC_TaikhoanWhereUniqueInput
  }

  /**
   * PC_Taikhoan findUniqueOrThrow
   */
  export type PC_TaikhoanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan to fetch.
     */
    where: PC_TaikhoanWhereUniqueInput
  }

  /**
   * PC_Taikhoan findFirst
   */
  export type PC_TaikhoanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan to fetch.
     */
    where?: PC_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoans to fetch.
     */
    orderBy?: PC_TaikhoanOrderByWithRelationInput | PC_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Taikhoans.
     */
    cursor?: PC_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Taikhoans.
     */
    distinct?: PC_TaikhoanScalarFieldEnum | PC_TaikhoanScalarFieldEnum[]
  }

  /**
   * PC_Taikhoan findFirstOrThrow
   */
  export type PC_TaikhoanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan to fetch.
     */
    where?: PC_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoans to fetch.
     */
    orderBy?: PC_TaikhoanOrderByWithRelationInput | PC_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Taikhoans.
     */
    cursor?: PC_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Taikhoans.
     */
    distinct?: PC_TaikhoanScalarFieldEnum | PC_TaikhoanScalarFieldEnum[]
  }

  /**
   * PC_Taikhoan findMany
   */
  export type PC_TaikhoanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoans to fetch.
     */
    where?: PC_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoans to fetch.
     */
    orderBy?: PC_TaikhoanOrderByWithRelationInput | PC_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Taikhoans.
     */
    cursor?: PC_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoans.
     */
    skip?: number
    distinct?: PC_TaikhoanScalarFieldEnum | PC_TaikhoanScalarFieldEnum[]
  }

  /**
   * PC_Taikhoan create
   */
  export type PC_TaikhoanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Taikhoan.
     */
    data: XOR<PC_TaikhoanCreateInput, PC_TaikhoanUncheckedCreateInput>
  }

  /**
   * PC_Taikhoan createMany
   */
  export type PC_TaikhoanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Taikhoans.
     */
    data: PC_TaikhoanCreateManyInput | PC_TaikhoanCreateManyInput[]
  }

  /**
   * PC_Taikhoan update
   */
  export type PC_TaikhoanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Taikhoan.
     */
    data: XOR<PC_TaikhoanUpdateInput, PC_TaikhoanUncheckedUpdateInput>
    /**
     * Choose, which PC_Taikhoan to update.
     */
    where: PC_TaikhoanWhereUniqueInput
  }

  /**
   * PC_Taikhoan updateMany
   */
  export type PC_TaikhoanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Taikhoans.
     */
    data: XOR<PC_TaikhoanUpdateManyMutationInput, PC_TaikhoanUncheckedUpdateManyInput>
    /**
     * Filter which PC_Taikhoans to update
     */
    where?: PC_TaikhoanWhereInput
  }

  /**
   * PC_Taikhoan upsert
   */
  export type PC_TaikhoanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Taikhoan to update in case it exists.
     */
    where: PC_TaikhoanWhereUniqueInput
    /**
     * In case the PC_Taikhoan found by the `where` argument doesn't exist, create a new PC_Taikhoan with this data.
     */
    create: XOR<PC_TaikhoanCreateInput, PC_TaikhoanUncheckedCreateInput>
    /**
     * In case the PC_Taikhoan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_TaikhoanUpdateInput, PC_TaikhoanUncheckedUpdateInput>
  }

  /**
   * PC_Taikhoan delete
   */
  export type PC_TaikhoanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter which PC_Taikhoan to delete.
     */
    where: PC_TaikhoanWhereUniqueInput
  }

  /**
   * PC_Taikhoan deleteMany
   */
  export type PC_TaikhoanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Taikhoans to delete
     */
    where?: PC_TaikhoanWhereInput
  }

  /**
   * PC_Taikhoan without action
   */
  export type PC_TaikhoanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan
     */
    select?: PC_TaikhoanSelect<ExtArgs> | null
  }


  /**
   * Model PC_Taikhoan_Bangluong
   */

  export type AggregatePC_Taikhoan_Bangluong = {
    _count: PC_Taikhoan_BangluongCountAggregateOutputType | null
    _avg: PC_Taikhoan_BangluongAvgAggregateOutputType | null
    _sum: PC_Taikhoan_BangluongSumAggregateOutputType | null
    _min: PC_Taikhoan_BangluongMinAggregateOutputType | null
    _max: PC_Taikhoan_BangluongMaxAggregateOutputType | null
  }

  export type PC_Taikhoan_BangluongAvgAggregateOutputType = {
    id: number | null
  }

  export type PC_Taikhoan_BangluongSumAggregateOutputType = {
    id: number | null
  }

  export type PC_Taikhoan_BangluongMinAggregateOutputType = {
    id: number | null
    id_taikhoan: string | null
    HotenNV: string | null
    id_nhanvien_cap: string | null
    ngaycap: Date | null
    sdt_nhan_pass: string | null
    da_gui_sms: boolean | null
    trangthai_sms: string | null
    Pass_bill_luong: string | null
  }

  export type PC_Taikhoan_BangluongMaxAggregateOutputType = {
    id: number | null
    id_taikhoan: string | null
    HotenNV: string | null
    id_nhanvien_cap: string | null
    ngaycap: Date | null
    sdt_nhan_pass: string | null
    da_gui_sms: boolean | null
    trangthai_sms: string | null
    Pass_bill_luong: string | null
  }

  export type PC_Taikhoan_BangluongCountAggregateOutputType = {
    id: number
    id_taikhoan: number
    HotenNV: number
    id_nhanvien_cap: number
    ngaycap: number
    sdt_nhan_pass: number
    da_gui_sms: number
    trangthai_sms: number
    Pass_bill_luong: number
    _all: number
  }


  export type PC_Taikhoan_BangluongAvgAggregateInputType = {
    id?: true
  }

  export type PC_Taikhoan_BangluongSumAggregateInputType = {
    id?: true
  }

  export type PC_Taikhoan_BangluongMinAggregateInputType = {
    id?: true
    id_taikhoan?: true
    HotenNV?: true
    id_nhanvien_cap?: true
    ngaycap?: true
    sdt_nhan_pass?: true
    da_gui_sms?: true
    trangthai_sms?: true
    Pass_bill_luong?: true
  }

  export type PC_Taikhoan_BangluongMaxAggregateInputType = {
    id?: true
    id_taikhoan?: true
    HotenNV?: true
    id_nhanvien_cap?: true
    ngaycap?: true
    sdt_nhan_pass?: true
    da_gui_sms?: true
    trangthai_sms?: true
    Pass_bill_luong?: true
  }

  export type PC_Taikhoan_BangluongCountAggregateInputType = {
    id?: true
    id_taikhoan?: true
    HotenNV?: true
    id_nhanvien_cap?: true
    ngaycap?: true
    sdt_nhan_pass?: true
    da_gui_sms?: true
    trangthai_sms?: true
    Pass_bill_luong?: true
    _all?: true
  }

  export type PC_Taikhoan_BangluongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Taikhoan_Bangluong to aggregate.
     */
    where?: PC_Taikhoan_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoan_Bangluongs to fetch.
     */
    orderBy?: PC_Taikhoan_BangluongOrderByWithRelationInput | PC_Taikhoan_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_Taikhoan_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoan_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoan_Bangluongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Taikhoan_Bangluongs
    **/
    _count?: true | PC_Taikhoan_BangluongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_Taikhoan_BangluongAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_Taikhoan_BangluongSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_Taikhoan_BangluongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_Taikhoan_BangluongMaxAggregateInputType
  }

  export type GetPC_Taikhoan_BangluongAggregateType<T extends PC_Taikhoan_BangluongAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Taikhoan_Bangluong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Taikhoan_Bangluong[P]>
      : GetScalarType<T[P], AggregatePC_Taikhoan_Bangluong[P]>
  }




  export type PC_Taikhoan_BangluongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_Taikhoan_BangluongWhereInput
    orderBy?: PC_Taikhoan_BangluongOrderByWithAggregationInput | PC_Taikhoan_BangluongOrderByWithAggregationInput[]
    by: PC_Taikhoan_BangluongScalarFieldEnum[] | PC_Taikhoan_BangluongScalarFieldEnum
    having?: PC_Taikhoan_BangluongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_Taikhoan_BangluongCountAggregateInputType | true
    _avg?: PC_Taikhoan_BangluongAvgAggregateInputType
    _sum?: PC_Taikhoan_BangluongSumAggregateInputType
    _min?: PC_Taikhoan_BangluongMinAggregateInputType
    _max?: PC_Taikhoan_BangluongMaxAggregateInputType
  }

  export type PC_Taikhoan_BangluongGroupByOutputType = {
    id: number
    id_taikhoan: string | null
    HotenNV: string | null
    id_nhanvien_cap: string | null
    ngaycap: Date | null
    sdt_nhan_pass: string | null
    da_gui_sms: boolean | null
    trangthai_sms: string | null
    Pass_bill_luong: string | null
    _count: PC_Taikhoan_BangluongCountAggregateOutputType | null
    _avg: PC_Taikhoan_BangluongAvgAggregateOutputType | null
    _sum: PC_Taikhoan_BangluongSumAggregateOutputType | null
    _min: PC_Taikhoan_BangluongMinAggregateOutputType | null
    _max: PC_Taikhoan_BangluongMaxAggregateOutputType | null
  }

  type GetPC_Taikhoan_BangluongGroupByPayload<T extends PC_Taikhoan_BangluongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_Taikhoan_BangluongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_Taikhoan_BangluongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_Taikhoan_BangluongGroupByOutputType[P]>
            : GetScalarType<T[P], PC_Taikhoan_BangluongGroupByOutputType[P]>
        }
      >
    >


  export type PC_Taikhoan_BangluongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_taikhoan?: boolean
    HotenNV?: boolean
    id_nhanvien_cap?: boolean
    ngaycap?: boolean
    sdt_nhan_pass?: boolean
    da_gui_sms?: boolean
    trangthai_sms?: boolean
    Pass_bill_luong?: boolean
  }, ExtArgs["result"]["pC_Taikhoan_Bangluong"]>


  export type PC_Taikhoan_BangluongSelectScalar = {
    id?: boolean
    id_taikhoan?: boolean
    HotenNV?: boolean
    id_nhanvien_cap?: boolean
    ngaycap?: boolean
    sdt_nhan_pass?: boolean
    da_gui_sms?: boolean
    trangthai_sms?: boolean
    Pass_bill_luong?: boolean
  }


  export type $PC_Taikhoan_BangluongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Taikhoan_Bangluong"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_taikhoan: string | null
      HotenNV: string | null
      id_nhanvien_cap: string | null
      ngaycap: Date | null
      sdt_nhan_pass: string | null
      da_gui_sms: boolean | null
      trangthai_sms: string | null
      Pass_bill_luong: string | null
    }, ExtArgs["result"]["pC_Taikhoan_Bangluong"]>
    composites: {}
  }

  type PC_Taikhoan_BangluongGetPayload<S extends boolean | null | undefined | PC_Taikhoan_BangluongDefaultArgs> = $Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload, S>

  type PC_Taikhoan_BangluongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_Taikhoan_BangluongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_Taikhoan_BangluongCountAggregateInputType | true
    }

  export interface PC_Taikhoan_BangluongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Taikhoan_Bangluong'], meta: { name: 'PC_Taikhoan_Bangluong' } }
    /**
     * Find zero or one PC_Taikhoan_Bangluong that matches the filter.
     * @param {PC_Taikhoan_BangluongFindUniqueArgs} args - Arguments to find a PC_Taikhoan_Bangluong
     * @example
     * // Get one PC_Taikhoan_Bangluong
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_Taikhoan_BangluongFindUniqueArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongFindUniqueArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Taikhoan_Bangluong that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_Taikhoan_BangluongFindUniqueOrThrowArgs} args - Arguments to find a PC_Taikhoan_Bangluong
     * @example
     * // Get one PC_Taikhoan_Bangluong
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_Taikhoan_BangluongFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Taikhoan_Bangluong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongFindFirstArgs} args - Arguments to find a PC_Taikhoan_Bangluong
     * @example
     * // Get one PC_Taikhoan_Bangluong
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_Taikhoan_BangluongFindFirstArgs>(args?: SelectSubset<T, PC_Taikhoan_BangluongFindFirstArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Taikhoan_Bangluong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongFindFirstOrThrowArgs} args - Arguments to find a PC_Taikhoan_Bangluong
     * @example
     * // Get one PC_Taikhoan_Bangluong
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_Taikhoan_BangluongFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_Taikhoan_BangluongFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Taikhoan_Bangluongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Taikhoan_Bangluongs
     * const pC_Taikhoan_Bangluongs = await prisma.pC_Taikhoan_Bangluong.findMany()
     * 
     * // Get first 10 PC_Taikhoan_Bangluongs
     * const pC_Taikhoan_Bangluongs = await prisma.pC_Taikhoan_Bangluong.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pC_Taikhoan_BangluongWithIdOnly = await prisma.pC_Taikhoan_Bangluong.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PC_Taikhoan_BangluongFindManyArgs>(args?: SelectSubset<T, PC_Taikhoan_BangluongFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Taikhoan_Bangluong.
     * @param {PC_Taikhoan_BangluongCreateArgs} args - Arguments to create a PC_Taikhoan_Bangluong.
     * @example
     * // Create one PC_Taikhoan_Bangluong
     * const PC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.create({
     *   data: {
     *     // ... data to create a PC_Taikhoan_Bangluong
     *   }
     * })
     * 
     */
    create<T extends PC_Taikhoan_BangluongCreateArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongCreateArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Taikhoan_Bangluongs.
     * @param {PC_Taikhoan_BangluongCreateManyArgs} args - Arguments to create many PC_Taikhoan_Bangluongs.
     * @example
     * // Create many PC_Taikhoan_Bangluongs
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_Taikhoan_BangluongCreateManyArgs>(args?: SelectSubset<T, PC_Taikhoan_BangluongCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Taikhoan_Bangluong.
     * @param {PC_Taikhoan_BangluongDeleteArgs} args - Arguments to delete one PC_Taikhoan_Bangluong.
     * @example
     * // Delete one PC_Taikhoan_Bangluong
     * const PC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.delete({
     *   where: {
     *     // ... filter to delete one PC_Taikhoan_Bangluong
     *   }
     * })
     * 
     */
    delete<T extends PC_Taikhoan_BangluongDeleteArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongDeleteArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Taikhoan_Bangluong.
     * @param {PC_Taikhoan_BangluongUpdateArgs} args - Arguments to update one PC_Taikhoan_Bangluong.
     * @example
     * // Update one PC_Taikhoan_Bangluong
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_Taikhoan_BangluongUpdateArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongUpdateArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Taikhoan_Bangluongs.
     * @param {PC_Taikhoan_BangluongDeleteManyArgs} args - Arguments to filter PC_Taikhoan_Bangluongs to delete.
     * @example
     * // Delete a few PC_Taikhoan_Bangluongs
     * const { count } = await prisma.pC_Taikhoan_Bangluong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_Taikhoan_BangluongDeleteManyArgs>(args?: SelectSubset<T, PC_Taikhoan_BangluongDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Taikhoan_Bangluongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Taikhoan_Bangluongs
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_Taikhoan_BangluongUpdateManyArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Taikhoan_Bangluong.
     * @param {PC_Taikhoan_BangluongUpsertArgs} args - Arguments to update or create a PC_Taikhoan_Bangluong.
     * @example
     * // Update or create a PC_Taikhoan_Bangluong
     * const pC_Taikhoan_Bangluong = await prisma.pC_Taikhoan_Bangluong.upsert({
     *   create: {
     *     // ... data to create a PC_Taikhoan_Bangluong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Taikhoan_Bangluong we want to update
     *   }
     * })
     */
    upsert<T extends PC_Taikhoan_BangluongUpsertArgs>(args: SelectSubset<T, PC_Taikhoan_BangluongUpsertArgs<ExtArgs>>): Prisma__PC_Taikhoan_BangluongClient<$Result.GetResult<Prisma.$PC_Taikhoan_BangluongPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Taikhoan_Bangluongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongCountArgs} args - Arguments to filter PC_Taikhoan_Bangluongs to count.
     * @example
     * // Count the number of PC_Taikhoan_Bangluongs
     * const count = await prisma.pC_Taikhoan_Bangluong.count({
     *   where: {
     *     // ... the filter for the PC_Taikhoan_Bangluongs we want to count
     *   }
     * })
    **/
    count<T extends PC_Taikhoan_BangluongCountArgs>(
      args?: Subset<T, PC_Taikhoan_BangluongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_Taikhoan_BangluongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Taikhoan_Bangluong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_Taikhoan_BangluongAggregateArgs>(args: Subset<T, PC_Taikhoan_BangluongAggregateArgs>): Prisma.PrismaPromise<GetPC_Taikhoan_BangluongAggregateType<T>>

    /**
     * Group by PC_Taikhoan_Bangluong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_Taikhoan_BangluongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_Taikhoan_BangluongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_Taikhoan_BangluongGroupByArgs['orderBy'] }
        : { orderBy?: PC_Taikhoan_BangluongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_Taikhoan_BangluongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_Taikhoan_BangluongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Taikhoan_Bangluong model
   */
  readonly fields: PC_Taikhoan_BangluongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Taikhoan_Bangluong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_Taikhoan_BangluongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Taikhoan_Bangluong model
   */ 
  interface PC_Taikhoan_BangluongFieldRefs {
    readonly id: FieldRef<"PC_Taikhoan_Bangluong", 'Int'>
    readonly id_taikhoan: FieldRef<"PC_Taikhoan_Bangluong", 'String'>
    readonly HotenNV: FieldRef<"PC_Taikhoan_Bangluong", 'String'>
    readonly id_nhanvien_cap: FieldRef<"PC_Taikhoan_Bangluong", 'String'>
    readonly ngaycap: FieldRef<"PC_Taikhoan_Bangluong", 'DateTime'>
    readonly sdt_nhan_pass: FieldRef<"PC_Taikhoan_Bangluong", 'String'>
    readonly da_gui_sms: FieldRef<"PC_Taikhoan_Bangluong", 'Boolean'>
    readonly trangthai_sms: FieldRef<"PC_Taikhoan_Bangluong", 'String'>
    readonly Pass_bill_luong: FieldRef<"PC_Taikhoan_Bangluong", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Taikhoan_Bangluong findUnique
   */
  export type PC_Taikhoan_BangluongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan_Bangluong to fetch.
     */
    where: PC_Taikhoan_BangluongWhereUniqueInput
  }

  /**
   * PC_Taikhoan_Bangluong findUniqueOrThrow
   */
  export type PC_Taikhoan_BangluongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan_Bangluong to fetch.
     */
    where: PC_Taikhoan_BangluongWhereUniqueInput
  }

  /**
   * PC_Taikhoan_Bangluong findFirst
   */
  export type PC_Taikhoan_BangluongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan_Bangluong to fetch.
     */
    where?: PC_Taikhoan_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoan_Bangluongs to fetch.
     */
    orderBy?: PC_Taikhoan_BangluongOrderByWithRelationInput | PC_Taikhoan_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Taikhoan_Bangluongs.
     */
    cursor?: PC_Taikhoan_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoan_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoan_Bangluongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Taikhoan_Bangluongs.
     */
    distinct?: PC_Taikhoan_BangluongScalarFieldEnum | PC_Taikhoan_BangluongScalarFieldEnum[]
  }

  /**
   * PC_Taikhoan_Bangluong findFirstOrThrow
   */
  export type PC_Taikhoan_BangluongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan_Bangluong to fetch.
     */
    where?: PC_Taikhoan_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoan_Bangluongs to fetch.
     */
    orderBy?: PC_Taikhoan_BangluongOrderByWithRelationInput | PC_Taikhoan_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Taikhoan_Bangluongs.
     */
    cursor?: PC_Taikhoan_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoan_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoan_Bangluongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Taikhoan_Bangluongs.
     */
    distinct?: PC_Taikhoan_BangluongScalarFieldEnum | PC_Taikhoan_BangluongScalarFieldEnum[]
  }

  /**
   * PC_Taikhoan_Bangluong findMany
   */
  export type PC_Taikhoan_BangluongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * Filter, which PC_Taikhoan_Bangluongs to fetch.
     */
    where?: PC_Taikhoan_BangluongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Taikhoan_Bangluongs to fetch.
     */
    orderBy?: PC_Taikhoan_BangluongOrderByWithRelationInput | PC_Taikhoan_BangluongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Taikhoan_Bangluongs.
     */
    cursor?: PC_Taikhoan_BangluongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Taikhoan_Bangluongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Taikhoan_Bangluongs.
     */
    skip?: number
    distinct?: PC_Taikhoan_BangluongScalarFieldEnum | PC_Taikhoan_BangluongScalarFieldEnum[]
  }

  /**
   * PC_Taikhoan_Bangluong create
   */
  export type PC_Taikhoan_BangluongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Taikhoan_Bangluong.
     */
    data?: XOR<PC_Taikhoan_BangluongCreateInput, PC_Taikhoan_BangluongUncheckedCreateInput>
  }

  /**
   * PC_Taikhoan_Bangluong createMany
   */
  export type PC_Taikhoan_BangluongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Taikhoan_Bangluongs.
     */
    data: PC_Taikhoan_BangluongCreateManyInput | PC_Taikhoan_BangluongCreateManyInput[]
  }

  /**
   * PC_Taikhoan_Bangluong update
   */
  export type PC_Taikhoan_BangluongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Taikhoan_Bangluong.
     */
    data: XOR<PC_Taikhoan_BangluongUpdateInput, PC_Taikhoan_BangluongUncheckedUpdateInput>
    /**
     * Choose, which PC_Taikhoan_Bangluong to update.
     */
    where: PC_Taikhoan_BangluongWhereUniqueInput
  }

  /**
   * PC_Taikhoan_Bangluong updateMany
   */
  export type PC_Taikhoan_BangluongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Taikhoan_Bangluongs.
     */
    data: XOR<PC_Taikhoan_BangluongUpdateManyMutationInput, PC_Taikhoan_BangluongUncheckedUpdateManyInput>
    /**
     * Filter which PC_Taikhoan_Bangluongs to update
     */
    where?: PC_Taikhoan_BangluongWhereInput
  }

  /**
   * PC_Taikhoan_Bangluong upsert
   */
  export type PC_Taikhoan_BangluongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Taikhoan_Bangluong to update in case it exists.
     */
    where: PC_Taikhoan_BangluongWhereUniqueInput
    /**
     * In case the PC_Taikhoan_Bangluong found by the `where` argument doesn't exist, create a new PC_Taikhoan_Bangluong with this data.
     */
    create: XOR<PC_Taikhoan_BangluongCreateInput, PC_Taikhoan_BangluongUncheckedCreateInput>
    /**
     * In case the PC_Taikhoan_Bangluong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_Taikhoan_BangluongUpdateInput, PC_Taikhoan_BangluongUncheckedUpdateInput>
  }

  /**
   * PC_Taikhoan_Bangluong delete
   */
  export type PC_Taikhoan_BangluongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
    /**
     * Filter which PC_Taikhoan_Bangluong to delete.
     */
    where: PC_Taikhoan_BangluongWhereUniqueInput
  }

  /**
   * PC_Taikhoan_Bangluong deleteMany
   */
  export type PC_Taikhoan_BangluongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Taikhoan_Bangluongs to delete
     */
    where?: PC_Taikhoan_BangluongWhereInput
  }

  /**
   * PC_Taikhoan_Bangluong without action
   */
  export type PC_Taikhoan_BangluongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Taikhoan_Bangluong
     */
    select?: PC_Taikhoan_BangluongSelect<ExtArgs> | null
  }


  /**
   * Model PC_Thanhvien
   */

  export type AggregatePC_Thanhvien = {
    _count: PC_ThanhvienCountAggregateOutputType | null
    _avg: PC_ThanhvienAvgAggregateOutputType | null
    _sum: PC_ThanhvienSumAggregateOutputType | null
    _min: PC_ThanhvienMinAggregateOutputType | null
    _max: PC_ThanhvienMaxAggregateOutputType | null
  }

  export type PC_ThanhvienAvgAggregateOutputType = {
    id_TV: number | null
  }

  export type PC_ThanhvienSumAggregateOutputType = {
    id_TV: number | null
  }

  export type PC_ThanhvienMinAggregateOutputType = {
    id_TV: number | null
    enum_NhomTK: string | null
    id_User: string | null
  }

  export type PC_ThanhvienMaxAggregateOutputType = {
    id_TV: number | null
    enum_NhomTK: string | null
    id_User: string | null
  }

  export type PC_ThanhvienCountAggregateOutputType = {
    id_TV: number
    enum_NhomTK: number
    id_User: number
    _all: number
  }


  export type PC_ThanhvienAvgAggregateInputType = {
    id_TV?: true
  }

  export type PC_ThanhvienSumAggregateInputType = {
    id_TV?: true
  }

  export type PC_ThanhvienMinAggregateInputType = {
    id_TV?: true
    enum_NhomTK?: true
    id_User?: true
  }

  export type PC_ThanhvienMaxAggregateInputType = {
    id_TV?: true
    enum_NhomTK?: true
    id_User?: true
  }

  export type PC_ThanhvienCountAggregateInputType = {
    id_TV?: true
    enum_NhomTK?: true
    id_User?: true
    _all?: true
  }

  export type PC_ThanhvienAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Thanhvien to aggregate.
     */
    where?: PC_ThanhvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Thanhviens to fetch.
     */
    orderBy?: PC_ThanhvienOrderByWithRelationInput | PC_ThanhvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_ThanhvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Thanhviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Thanhviens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_Thanhviens
    **/
    _count?: true | PC_ThanhvienCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_ThanhvienAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_ThanhvienSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_ThanhvienMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_ThanhvienMaxAggregateInputType
  }

  export type GetPC_ThanhvienAggregateType<T extends PC_ThanhvienAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_Thanhvien]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_Thanhvien[P]>
      : GetScalarType<T[P], AggregatePC_Thanhvien[P]>
  }




  export type PC_ThanhvienGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_ThanhvienWhereInput
    orderBy?: PC_ThanhvienOrderByWithAggregationInput | PC_ThanhvienOrderByWithAggregationInput[]
    by: PC_ThanhvienScalarFieldEnum[] | PC_ThanhvienScalarFieldEnum
    having?: PC_ThanhvienScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_ThanhvienCountAggregateInputType | true
    _avg?: PC_ThanhvienAvgAggregateInputType
    _sum?: PC_ThanhvienSumAggregateInputType
    _min?: PC_ThanhvienMinAggregateInputType
    _max?: PC_ThanhvienMaxAggregateInputType
  }

  export type PC_ThanhvienGroupByOutputType = {
    id_TV: number
    enum_NhomTK: string | null
    id_User: string | null
    _count: PC_ThanhvienCountAggregateOutputType | null
    _avg: PC_ThanhvienAvgAggregateOutputType | null
    _sum: PC_ThanhvienSumAggregateOutputType | null
    _min: PC_ThanhvienMinAggregateOutputType | null
    _max: PC_ThanhvienMaxAggregateOutputType | null
  }

  type GetPC_ThanhvienGroupByPayload<T extends PC_ThanhvienGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_ThanhvienGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_ThanhvienGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_ThanhvienGroupByOutputType[P]>
            : GetScalarType<T[P], PC_ThanhvienGroupByOutputType[P]>
        }
      >
    >


  export type PC_ThanhvienSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_TV?: boolean
    enum_NhomTK?: boolean
    id_User?: boolean
  }, ExtArgs["result"]["pC_Thanhvien"]>


  export type PC_ThanhvienSelectScalar = {
    id_TV?: boolean
    enum_NhomTK?: boolean
    id_User?: boolean
  }


  export type $PC_ThanhvienPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_Thanhvien"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_TV: number
      enum_NhomTK: string | null
      id_User: string | null
    }, ExtArgs["result"]["pC_Thanhvien"]>
    composites: {}
  }

  type PC_ThanhvienGetPayload<S extends boolean | null | undefined | PC_ThanhvienDefaultArgs> = $Result.GetResult<Prisma.$PC_ThanhvienPayload, S>

  type PC_ThanhvienCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_ThanhvienFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_ThanhvienCountAggregateInputType | true
    }

  export interface PC_ThanhvienDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_Thanhvien'], meta: { name: 'PC_Thanhvien' } }
    /**
     * Find zero or one PC_Thanhvien that matches the filter.
     * @param {PC_ThanhvienFindUniqueArgs} args - Arguments to find a PC_Thanhvien
     * @example
     * // Get one PC_Thanhvien
     * const pC_Thanhvien = await prisma.pC_Thanhvien.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_ThanhvienFindUniqueArgs>(args: SelectSubset<T, PC_ThanhvienFindUniqueArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_Thanhvien that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_ThanhvienFindUniqueOrThrowArgs} args - Arguments to find a PC_Thanhvien
     * @example
     * // Get one PC_Thanhvien
     * const pC_Thanhvien = await prisma.pC_Thanhvien.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_ThanhvienFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_ThanhvienFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_Thanhvien that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienFindFirstArgs} args - Arguments to find a PC_Thanhvien
     * @example
     * // Get one PC_Thanhvien
     * const pC_Thanhvien = await prisma.pC_Thanhvien.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_ThanhvienFindFirstArgs>(args?: SelectSubset<T, PC_ThanhvienFindFirstArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_Thanhvien that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienFindFirstOrThrowArgs} args - Arguments to find a PC_Thanhvien
     * @example
     * // Get one PC_Thanhvien
     * const pC_Thanhvien = await prisma.pC_Thanhvien.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_ThanhvienFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_ThanhvienFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_Thanhviens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_Thanhviens
     * const pC_Thanhviens = await prisma.pC_Thanhvien.findMany()
     * 
     * // Get first 10 PC_Thanhviens
     * const pC_Thanhviens = await prisma.pC_Thanhvien.findMany({ take: 10 })
     * 
     * // Only select the `id_TV`
     * const pC_ThanhvienWithId_TVOnly = await prisma.pC_Thanhvien.findMany({ select: { id_TV: true } })
     * 
     */
    findMany<T extends PC_ThanhvienFindManyArgs>(args?: SelectSubset<T, PC_ThanhvienFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_Thanhvien.
     * @param {PC_ThanhvienCreateArgs} args - Arguments to create a PC_Thanhvien.
     * @example
     * // Create one PC_Thanhvien
     * const PC_Thanhvien = await prisma.pC_Thanhvien.create({
     *   data: {
     *     // ... data to create a PC_Thanhvien
     *   }
     * })
     * 
     */
    create<T extends PC_ThanhvienCreateArgs>(args: SelectSubset<T, PC_ThanhvienCreateArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_Thanhviens.
     * @param {PC_ThanhvienCreateManyArgs} args - Arguments to create many PC_Thanhviens.
     * @example
     * // Create many PC_Thanhviens
     * const pC_Thanhvien = await prisma.pC_Thanhvien.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_ThanhvienCreateManyArgs>(args?: SelectSubset<T, PC_ThanhvienCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_Thanhvien.
     * @param {PC_ThanhvienDeleteArgs} args - Arguments to delete one PC_Thanhvien.
     * @example
     * // Delete one PC_Thanhvien
     * const PC_Thanhvien = await prisma.pC_Thanhvien.delete({
     *   where: {
     *     // ... filter to delete one PC_Thanhvien
     *   }
     * })
     * 
     */
    delete<T extends PC_ThanhvienDeleteArgs>(args: SelectSubset<T, PC_ThanhvienDeleteArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_Thanhvien.
     * @param {PC_ThanhvienUpdateArgs} args - Arguments to update one PC_Thanhvien.
     * @example
     * // Update one PC_Thanhvien
     * const pC_Thanhvien = await prisma.pC_Thanhvien.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_ThanhvienUpdateArgs>(args: SelectSubset<T, PC_ThanhvienUpdateArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_Thanhviens.
     * @param {PC_ThanhvienDeleteManyArgs} args - Arguments to filter PC_Thanhviens to delete.
     * @example
     * // Delete a few PC_Thanhviens
     * const { count } = await prisma.pC_Thanhvien.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_ThanhvienDeleteManyArgs>(args?: SelectSubset<T, PC_ThanhvienDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_Thanhviens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_Thanhviens
     * const pC_Thanhvien = await prisma.pC_Thanhvien.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_ThanhvienUpdateManyArgs>(args: SelectSubset<T, PC_ThanhvienUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_Thanhvien.
     * @param {PC_ThanhvienUpsertArgs} args - Arguments to update or create a PC_Thanhvien.
     * @example
     * // Update or create a PC_Thanhvien
     * const pC_Thanhvien = await prisma.pC_Thanhvien.upsert({
     *   create: {
     *     // ... data to create a PC_Thanhvien
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_Thanhvien we want to update
     *   }
     * })
     */
    upsert<T extends PC_ThanhvienUpsertArgs>(args: SelectSubset<T, PC_ThanhvienUpsertArgs<ExtArgs>>): Prisma__PC_ThanhvienClient<$Result.GetResult<Prisma.$PC_ThanhvienPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_Thanhviens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienCountArgs} args - Arguments to filter PC_Thanhviens to count.
     * @example
     * // Count the number of PC_Thanhviens
     * const count = await prisma.pC_Thanhvien.count({
     *   where: {
     *     // ... the filter for the PC_Thanhviens we want to count
     *   }
     * })
    **/
    count<T extends PC_ThanhvienCountArgs>(
      args?: Subset<T, PC_ThanhvienCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_ThanhvienCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_Thanhvien.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_ThanhvienAggregateArgs>(args: Subset<T, PC_ThanhvienAggregateArgs>): Prisma.PrismaPromise<GetPC_ThanhvienAggregateType<T>>

    /**
     * Group by PC_Thanhvien.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_ThanhvienGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_ThanhvienGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_ThanhvienGroupByArgs['orderBy'] }
        : { orderBy?: PC_ThanhvienGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_ThanhvienGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_ThanhvienGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_Thanhvien model
   */
  readonly fields: PC_ThanhvienFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_Thanhvien.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_ThanhvienClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_Thanhvien model
   */ 
  interface PC_ThanhvienFieldRefs {
    readonly id_TV: FieldRef<"PC_Thanhvien", 'Int'>
    readonly enum_NhomTK: FieldRef<"PC_Thanhvien", 'String'>
    readonly id_User: FieldRef<"PC_Thanhvien", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_Thanhvien findUnique
   */
  export type PC_ThanhvienFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Thanhvien to fetch.
     */
    where: PC_ThanhvienWhereUniqueInput
  }

  /**
   * PC_Thanhvien findUniqueOrThrow
   */
  export type PC_ThanhvienFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Thanhvien to fetch.
     */
    where: PC_ThanhvienWhereUniqueInput
  }

  /**
   * PC_Thanhvien findFirst
   */
  export type PC_ThanhvienFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Thanhvien to fetch.
     */
    where?: PC_ThanhvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Thanhviens to fetch.
     */
    orderBy?: PC_ThanhvienOrderByWithRelationInput | PC_ThanhvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Thanhviens.
     */
    cursor?: PC_ThanhvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Thanhviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Thanhviens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Thanhviens.
     */
    distinct?: PC_ThanhvienScalarFieldEnum | PC_ThanhvienScalarFieldEnum[]
  }

  /**
   * PC_Thanhvien findFirstOrThrow
   */
  export type PC_ThanhvienFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Thanhvien to fetch.
     */
    where?: PC_ThanhvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Thanhviens to fetch.
     */
    orderBy?: PC_ThanhvienOrderByWithRelationInput | PC_ThanhvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_Thanhviens.
     */
    cursor?: PC_ThanhvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Thanhviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Thanhviens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_Thanhviens.
     */
    distinct?: PC_ThanhvienScalarFieldEnum | PC_ThanhvienScalarFieldEnum[]
  }

  /**
   * PC_Thanhvien findMany
   */
  export type PC_ThanhvienFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * Filter, which PC_Thanhviens to fetch.
     */
    where?: PC_ThanhvienWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_Thanhviens to fetch.
     */
    orderBy?: PC_ThanhvienOrderByWithRelationInput | PC_ThanhvienOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_Thanhviens.
     */
    cursor?: PC_ThanhvienWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_Thanhviens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_Thanhviens.
     */
    skip?: number
    distinct?: PC_ThanhvienScalarFieldEnum | PC_ThanhvienScalarFieldEnum[]
  }

  /**
   * PC_Thanhvien create
   */
  export type PC_ThanhvienCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_Thanhvien.
     */
    data?: XOR<PC_ThanhvienCreateInput, PC_ThanhvienUncheckedCreateInput>
  }

  /**
   * PC_Thanhvien createMany
   */
  export type PC_ThanhvienCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_Thanhviens.
     */
    data: PC_ThanhvienCreateManyInput | PC_ThanhvienCreateManyInput[]
  }

  /**
   * PC_Thanhvien update
   */
  export type PC_ThanhvienUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_Thanhvien.
     */
    data: XOR<PC_ThanhvienUpdateInput, PC_ThanhvienUncheckedUpdateInput>
    /**
     * Choose, which PC_Thanhvien to update.
     */
    where: PC_ThanhvienWhereUniqueInput
  }

  /**
   * PC_Thanhvien updateMany
   */
  export type PC_ThanhvienUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_Thanhviens.
     */
    data: XOR<PC_ThanhvienUpdateManyMutationInput, PC_ThanhvienUncheckedUpdateManyInput>
    /**
     * Filter which PC_Thanhviens to update
     */
    where?: PC_ThanhvienWhereInput
  }

  /**
   * PC_Thanhvien upsert
   */
  export type PC_ThanhvienUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_Thanhvien to update in case it exists.
     */
    where: PC_ThanhvienWhereUniqueInput
    /**
     * In case the PC_Thanhvien found by the `where` argument doesn't exist, create a new PC_Thanhvien with this data.
     */
    create: XOR<PC_ThanhvienCreateInput, PC_ThanhvienUncheckedCreateInput>
    /**
     * In case the PC_Thanhvien was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_ThanhvienUpdateInput, PC_ThanhvienUncheckedUpdateInput>
  }

  /**
   * PC_Thanhvien delete
   */
  export type PC_ThanhvienDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
    /**
     * Filter which PC_Thanhvien to delete.
     */
    where: PC_ThanhvienWhereUniqueInput
  }

  /**
   * PC_Thanhvien deleteMany
   */
  export type PC_ThanhvienDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_Thanhviens to delete
     */
    where?: PC_ThanhvienWhereInput
  }

  /**
   * PC_Thanhvien without action
   */
  export type PC_ThanhvienDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_Thanhvien
     */
    select?: PC_ThanhvienSelect<ExtArgs> | null
  }


  /**
   * Model PC_TheCapphat
   */

  export type AggregatePC_TheCapphat = {
    _count: PC_TheCapphatCountAggregateOutputType | null
    _avg: PC_TheCapphatAvgAggregateOutputType | null
    _sum: PC_TheCapphatSumAggregateOutputType | null
    _min: PC_TheCapphatMinAggregateOutputType | null
    _max: PC_TheCapphatMaxAggregateOutputType | null
  }

  export type PC_TheCapphatAvgAggregateOutputType = {
    id_TheCapphat: number | null
    Diem_Congthem: number | null
    Sync_Version: number | null
  }

  export type PC_TheCapphatSumAggregateOutputType = {
    id_TheCapphat: number | null
    Diem_Congthem: number | null
    Sync_Version: number | null
  }

  export type PC_TheCapphatMinAggregateOutputType = {
    id_TheCapphat: number | null
    id_Benhnhan: string | null
    Hoten_Benhnhan: string | null
    Ngaysinh: string | null
    Ngaycapthe: Date | null
    id_NVCap: string | null
    Hoten_NVCap: string | null
    id_Dauthe: string | null
    MaThe: string | null
    Diem_Congthem: number | null
    Lydo_Congdiem: string | null
    id_NVCongdiem: string | null
    Trangthai: string | null
    LydoKhoa: string | null
    Ngayhethan: Date | null
    DoituongSudung: string | null
    TTNguoiNhanThe: string | null
    CongdongBau: string | null
    Nangcap_PCCARE: boolean | null
    Ngaynang: Date | null
    id_ChiNhanh: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
  }

  export type PC_TheCapphatMaxAggregateOutputType = {
    id_TheCapphat: number | null
    id_Benhnhan: string | null
    Hoten_Benhnhan: string | null
    Ngaysinh: string | null
    Ngaycapthe: Date | null
    id_NVCap: string | null
    Hoten_NVCap: string | null
    id_Dauthe: string | null
    MaThe: string | null
    Diem_Congthem: number | null
    Lydo_Congdiem: string | null
    id_NVCongdiem: string | null
    Trangthai: string | null
    LydoKhoa: string | null
    Ngayhethan: Date | null
    DoituongSudung: string | null
    TTNguoiNhanThe: string | null
    CongdongBau: string | null
    Nangcap_PCCARE: boolean | null
    Ngaynang: Date | null
    id_ChiNhanh: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
  }

  export type PC_TheCapphatCountAggregateOutputType = {
    id_TheCapphat: number
    id_Benhnhan: number
    Hoten_Benhnhan: number
    Ngaysinh: number
    Ngaycapthe: number
    id_NVCap: number
    Hoten_NVCap: number
    id_Dauthe: number
    MaThe: number
    Diem_Congthem: number
    Lydo_Congdiem: number
    id_NVCongdiem: number
    Trangthai: number
    LydoKhoa: number
    Ngayhethan: number
    DoituongSudung: number
    TTNguoiNhanThe: number
    CongdongBau: number
    Nangcap_PCCARE: number
    Ngaynang: number
    id_ChiNhanh: number
    Sync_Version: number
    Sync_Date: number
    Sync_To_All: number
    Sync_By_Branch: number
    _all: number
  }


  export type PC_TheCapphatAvgAggregateInputType = {
    id_TheCapphat?: true
    Diem_Congthem?: true
    Sync_Version?: true
  }

  export type PC_TheCapphatSumAggregateInputType = {
    id_TheCapphat?: true
    Diem_Congthem?: true
    Sync_Version?: true
  }

  export type PC_TheCapphatMinAggregateInputType = {
    id_TheCapphat?: true
    id_Benhnhan?: true
    Hoten_Benhnhan?: true
    Ngaysinh?: true
    Ngaycapthe?: true
    id_NVCap?: true
    Hoten_NVCap?: true
    id_Dauthe?: true
    MaThe?: true
    Diem_Congthem?: true
    Lydo_Congdiem?: true
    id_NVCongdiem?: true
    Trangthai?: true
    LydoKhoa?: true
    Ngayhethan?: true
    DoituongSudung?: true
    TTNguoiNhanThe?: true
    CongdongBau?: true
    Nangcap_PCCARE?: true
    Ngaynang?: true
    id_ChiNhanh?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
  }

  export type PC_TheCapphatMaxAggregateInputType = {
    id_TheCapphat?: true
    id_Benhnhan?: true
    Hoten_Benhnhan?: true
    Ngaysinh?: true
    Ngaycapthe?: true
    id_NVCap?: true
    Hoten_NVCap?: true
    id_Dauthe?: true
    MaThe?: true
    Diem_Congthem?: true
    Lydo_Congdiem?: true
    id_NVCongdiem?: true
    Trangthai?: true
    LydoKhoa?: true
    Ngayhethan?: true
    DoituongSudung?: true
    TTNguoiNhanThe?: true
    CongdongBau?: true
    Nangcap_PCCARE?: true
    Ngaynang?: true
    id_ChiNhanh?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
  }

  export type PC_TheCapphatCountAggregateInputType = {
    id_TheCapphat?: true
    id_Benhnhan?: true
    Hoten_Benhnhan?: true
    Ngaysinh?: true
    Ngaycapthe?: true
    id_NVCap?: true
    Hoten_NVCap?: true
    id_Dauthe?: true
    MaThe?: true
    Diem_Congthem?: true
    Lydo_Congdiem?: true
    id_NVCongdiem?: true
    Trangthai?: true
    LydoKhoa?: true
    Ngayhethan?: true
    DoituongSudung?: true
    TTNguoiNhanThe?: true
    CongdongBau?: true
    Nangcap_PCCARE?: true
    Ngaynang?: true
    id_ChiNhanh?: true
    Sync_Version?: true
    Sync_Date?: true
    Sync_To_All?: true
    Sync_By_Branch?: true
    _all?: true
  }

  export type PC_TheCapphatAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_TheCapphat to aggregate.
     */
    where?: PC_TheCapphatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_TheCapphats to fetch.
     */
    orderBy?: PC_TheCapphatOrderByWithRelationInput | PC_TheCapphatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PC_TheCapphatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_TheCapphats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_TheCapphats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PC_TheCapphats
    **/
    _count?: true | PC_TheCapphatCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PC_TheCapphatAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PC_TheCapphatSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PC_TheCapphatMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PC_TheCapphatMaxAggregateInputType
  }

  export type GetPC_TheCapphatAggregateType<T extends PC_TheCapphatAggregateArgs> = {
        [P in keyof T & keyof AggregatePC_TheCapphat]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePC_TheCapphat[P]>
      : GetScalarType<T[P], AggregatePC_TheCapphat[P]>
  }




  export type PC_TheCapphatGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PC_TheCapphatWhereInput
    orderBy?: PC_TheCapphatOrderByWithAggregationInput | PC_TheCapphatOrderByWithAggregationInput[]
    by: PC_TheCapphatScalarFieldEnum[] | PC_TheCapphatScalarFieldEnum
    having?: PC_TheCapphatScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PC_TheCapphatCountAggregateInputType | true
    _avg?: PC_TheCapphatAvgAggregateInputType
    _sum?: PC_TheCapphatSumAggregateInputType
    _min?: PC_TheCapphatMinAggregateInputType
    _max?: PC_TheCapphatMaxAggregateInputType
  }

  export type PC_TheCapphatGroupByOutputType = {
    id_TheCapphat: number
    id_Benhnhan: string | null
    Hoten_Benhnhan: string | null
    Ngaysinh: string | null
    Ngaycapthe: Date | null
    id_NVCap: string | null
    Hoten_NVCap: string | null
    id_Dauthe: string | null
    MaThe: string | null
    Diem_Congthem: number | null
    Lydo_Congdiem: string | null
    id_NVCongdiem: string | null
    Trangthai: string | null
    LydoKhoa: string | null
    Ngayhethan: Date | null
    DoituongSudung: string | null
    TTNguoiNhanThe: string | null
    CongdongBau: string | null
    Nangcap_PCCARE: boolean | null
    Ngaynang: Date | null
    id_ChiNhanh: string | null
    Sync_Version: number | null
    Sync_Date: Date | null
    Sync_To_All: boolean | null
    Sync_By_Branch: string | null
    _count: PC_TheCapphatCountAggregateOutputType | null
    _avg: PC_TheCapphatAvgAggregateOutputType | null
    _sum: PC_TheCapphatSumAggregateOutputType | null
    _min: PC_TheCapphatMinAggregateOutputType | null
    _max: PC_TheCapphatMaxAggregateOutputType | null
  }

  type GetPC_TheCapphatGroupByPayload<T extends PC_TheCapphatGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PC_TheCapphatGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PC_TheCapphatGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PC_TheCapphatGroupByOutputType[P]>
            : GetScalarType<T[P], PC_TheCapphatGroupByOutputType[P]>
        }
      >
    >


  export type PC_TheCapphatSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_TheCapphat?: boolean
    id_Benhnhan?: boolean
    Hoten_Benhnhan?: boolean
    Ngaysinh?: boolean
    Ngaycapthe?: boolean
    id_NVCap?: boolean
    Hoten_NVCap?: boolean
    id_Dauthe?: boolean
    MaThe?: boolean
    Diem_Congthem?: boolean
    Lydo_Congdiem?: boolean
    id_NVCongdiem?: boolean
    Trangthai?: boolean
    LydoKhoa?: boolean
    Ngayhethan?: boolean
    DoituongSudung?: boolean
    TTNguoiNhanThe?: boolean
    CongdongBau?: boolean
    Nangcap_PCCARE?: boolean
    Ngaynang?: boolean
    id_ChiNhanh?: boolean
    Sync_Version?: boolean
    Sync_Date?: boolean
    Sync_To_All?: boolean
    Sync_By_Branch?: boolean
  }, ExtArgs["result"]["pC_TheCapphat"]>


  export type PC_TheCapphatSelectScalar = {
    id_TheCapphat?: boolean
    id_Benhnhan?: boolean
    Hoten_Benhnhan?: boolean
    Ngaysinh?: boolean
    Ngaycapthe?: boolean
    id_NVCap?: boolean
    Hoten_NVCap?: boolean
    id_Dauthe?: boolean
    MaThe?: boolean
    Diem_Congthem?: boolean
    Lydo_Congdiem?: boolean
    id_NVCongdiem?: boolean
    Trangthai?: boolean
    LydoKhoa?: boolean
    Ngayhethan?: boolean
    DoituongSudung?: boolean
    TTNguoiNhanThe?: boolean
    CongdongBau?: boolean
    Nangcap_PCCARE?: boolean
    Ngaynang?: boolean
    id_ChiNhanh?: boolean
    Sync_Version?: boolean
    Sync_Date?: boolean
    Sync_To_All?: boolean
    Sync_By_Branch?: boolean
  }


  export type $PC_TheCapphatPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PC_TheCapphat"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_TheCapphat: number
      id_Benhnhan: string | null
      Hoten_Benhnhan: string | null
      Ngaysinh: string | null
      Ngaycapthe: Date | null
      id_NVCap: string | null
      Hoten_NVCap: string | null
      id_Dauthe: string | null
      MaThe: string | null
      Diem_Congthem: number | null
      Lydo_Congdiem: string | null
      id_NVCongdiem: string | null
      Trangthai: string | null
      LydoKhoa: string | null
      Ngayhethan: Date | null
      DoituongSudung: string | null
      TTNguoiNhanThe: string | null
      CongdongBau: string | null
      Nangcap_PCCARE: boolean | null
      Ngaynang: Date | null
      id_ChiNhanh: string | null
      Sync_Version: number | null
      Sync_Date: Date | null
      Sync_To_All: boolean | null
      Sync_By_Branch: string | null
    }, ExtArgs["result"]["pC_TheCapphat"]>
    composites: {}
  }

  type PC_TheCapphatGetPayload<S extends boolean | null | undefined | PC_TheCapphatDefaultArgs> = $Result.GetResult<Prisma.$PC_TheCapphatPayload, S>

  type PC_TheCapphatCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PC_TheCapphatFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PC_TheCapphatCountAggregateInputType | true
    }

  export interface PC_TheCapphatDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PC_TheCapphat'], meta: { name: 'PC_TheCapphat' } }
    /**
     * Find zero or one PC_TheCapphat that matches the filter.
     * @param {PC_TheCapphatFindUniqueArgs} args - Arguments to find a PC_TheCapphat
     * @example
     * // Get one PC_TheCapphat
     * const pC_TheCapphat = await prisma.pC_TheCapphat.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PC_TheCapphatFindUniqueArgs>(args: SelectSubset<T, PC_TheCapphatFindUniqueArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PC_TheCapphat that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PC_TheCapphatFindUniqueOrThrowArgs} args - Arguments to find a PC_TheCapphat
     * @example
     * // Get one PC_TheCapphat
     * const pC_TheCapphat = await prisma.pC_TheCapphat.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PC_TheCapphatFindUniqueOrThrowArgs>(args: SelectSubset<T, PC_TheCapphatFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PC_TheCapphat that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatFindFirstArgs} args - Arguments to find a PC_TheCapphat
     * @example
     * // Get one PC_TheCapphat
     * const pC_TheCapphat = await prisma.pC_TheCapphat.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PC_TheCapphatFindFirstArgs>(args?: SelectSubset<T, PC_TheCapphatFindFirstArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PC_TheCapphat that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatFindFirstOrThrowArgs} args - Arguments to find a PC_TheCapphat
     * @example
     * // Get one PC_TheCapphat
     * const pC_TheCapphat = await prisma.pC_TheCapphat.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PC_TheCapphatFindFirstOrThrowArgs>(args?: SelectSubset<T, PC_TheCapphatFindFirstOrThrowArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PC_TheCapphats that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PC_TheCapphats
     * const pC_TheCapphats = await prisma.pC_TheCapphat.findMany()
     * 
     * // Get first 10 PC_TheCapphats
     * const pC_TheCapphats = await prisma.pC_TheCapphat.findMany({ take: 10 })
     * 
     * // Only select the `id_TheCapphat`
     * const pC_TheCapphatWithId_TheCapphatOnly = await prisma.pC_TheCapphat.findMany({ select: { id_TheCapphat: true } })
     * 
     */
    findMany<T extends PC_TheCapphatFindManyArgs>(args?: SelectSubset<T, PC_TheCapphatFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PC_TheCapphat.
     * @param {PC_TheCapphatCreateArgs} args - Arguments to create a PC_TheCapphat.
     * @example
     * // Create one PC_TheCapphat
     * const PC_TheCapphat = await prisma.pC_TheCapphat.create({
     *   data: {
     *     // ... data to create a PC_TheCapphat
     *   }
     * })
     * 
     */
    create<T extends PC_TheCapphatCreateArgs>(args: SelectSubset<T, PC_TheCapphatCreateArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PC_TheCapphats.
     * @param {PC_TheCapphatCreateManyArgs} args - Arguments to create many PC_TheCapphats.
     * @example
     * // Create many PC_TheCapphats
     * const pC_TheCapphat = await prisma.pC_TheCapphat.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PC_TheCapphatCreateManyArgs>(args?: SelectSubset<T, PC_TheCapphatCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PC_TheCapphat.
     * @param {PC_TheCapphatDeleteArgs} args - Arguments to delete one PC_TheCapphat.
     * @example
     * // Delete one PC_TheCapphat
     * const PC_TheCapphat = await prisma.pC_TheCapphat.delete({
     *   where: {
     *     // ... filter to delete one PC_TheCapphat
     *   }
     * })
     * 
     */
    delete<T extends PC_TheCapphatDeleteArgs>(args: SelectSubset<T, PC_TheCapphatDeleteArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PC_TheCapphat.
     * @param {PC_TheCapphatUpdateArgs} args - Arguments to update one PC_TheCapphat.
     * @example
     * // Update one PC_TheCapphat
     * const pC_TheCapphat = await prisma.pC_TheCapphat.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PC_TheCapphatUpdateArgs>(args: SelectSubset<T, PC_TheCapphatUpdateArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PC_TheCapphats.
     * @param {PC_TheCapphatDeleteManyArgs} args - Arguments to filter PC_TheCapphats to delete.
     * @example
     * // Delete a few PC_TheCapphats
     * const { count } = await prisma.pC_TheCapphat.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PC_TheCapphatDeleteManyArgs>(args?: SelectSubset<T, PC_TheCapphatDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PC_TheCapphats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PC_TheCapphats
     * const pC_TheCapphat = await prisma.pC_TheCapphat.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PC_TheCapphatUpdateManyArgs>(args: SelectSubset<T, PC_TheCapphatUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PC_TheCapphat.
     * @param {PC_TheCapphatUpsertArgs} args - Arguments to update or create a PC_TheCapphat.
     * @example
     * // Update or create a PC_TheCapphat
     * const pC_TheCapphat = await prisma.pC_TheCapphat.upsert({
     *   create: {
     *     // ... data to create a PC_TheCapphat
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PC_TheCapphat we want to update
     *   }
     * })
     */
    upsert<T extends PC_TheCapphatUpsertArgs>(args: SelectSubset<T, PC_TheCapphatUpsertArgs<ExtArgs>>): Prisma__PC_TheCapphatClient<$Result.GetResult<Prisma.$PC_TheCapphatPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PC_TheCapphats.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatCountArgs} args - Arguments to filter PC_TheCapphats to count.
     * @example
     * // Count the number of PC_TheCapphats
     * const count = await prisma.pC_TheCapphat.count({
     *   where: {
     *     // ... the filter for the PC_TheCapphats we want to count
     *   }
     * })
    **/
    count<T extends PC_TheCapphatCountArgs>(
      args?: Subset<T, PC_TheCapphatCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PC_TheCapphatCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PC_TheCapphat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PC_TheCapphatAggregateArgs>(args: Subset<T, PC_TheCapphatAggregateArgs>): Prisma.PrismaPromise<GetPC_TheCapphatAggregateType<T>>

    /**
     * Group by PC_TheCapphat.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PC_TheCapphatGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PC_TheCapphatGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PC_TheCapphatGroupByArgs['orderBy'] }
        : { orderBy?: PC_TheCapphatGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PC_TheCapphatGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPC_TheCapphatGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PC_TheCapphat model
   */
  readonly fields: PC_TheCapphatFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PC_TheCapphat.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PC_TheCapphatClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PC_TheCapphat model
   */ 
  interface PC_TheCapphatFieldRefs {
    readonly id_TheCapphat: FieldRef<"PC_TheCapphat", 'Int'>
    readonly id_Benhnhan: FieldRef<"PC_TheCapphat", 'String'>
    readonly Hoten_Benhnhan: FieldRef<"PC_TheCapphat", 'String'>
    readonly Ngaysinh: FieldRef<"PC_TheCapphat", 'String'>
    readonly Ngaycapthe: FieldRef<"PC_TheCapphat", 'DateTime'>
    readonly id_NVCap: FieldRef<"PC_TheCapphat", 'String'>
    readonly Hoten_NVCap: FieldRef<"PC_TheCapphat", 'String'>
    readonly id_Dauthe: FieldRef<"PC_TheCapphat", 'String'>
    readonly MaThe: FieldRef<"PC_TheCapphat", 'String'>
    readonly Diem_Congthem: FieldRef<"PC_TheCapphat", 'Int'>
    readonly Lydo_Congdiem: FieldRef<"PC_TheCapphat", 'String'>
    readonly id_NVCongdiem: FieldRef<"PC_TheCapphat", 'String'>
    readonly Trangthai: FieldRef<"PC_TheCapphat", 'String'>
    readonly LydoKhoa: FieldRef<"PC_TheCapphat", 'String'>
    readonly Ngayhethan: FieldRef<"PC_TheCapphat", 'DateTime'>
    readonly DoituongSudung: FieldRef<"PC_TheCapphat", 'String'>
    readonly TTNguoiNhanThe: FieldRef<"PC_TheCapphat", 'String'>
    readonly CongdongBau: FieldRef<"PC_TheCapphat", 'String'>
    readonly Nangcap_PCCARE: FieldRef<"PC_TheCapphat", 'Boolean'>
    readonly Ngaynang: FieldRef<"PC_TheCapphat", 'DateTime'>
    readonly id_ChiNhanh: FieldRef<"PC_TheCapphat", 'String'>
    readonly Sync_Version: FieldRef<"PC_TheCapphat", 'Int'>
    readonly Sync_Date: FieldRef<"PC_TheCapphat", 'DateTime'>
    readonly Sync_To_All: FieldRef<"PC_TheCapphat", 'Boolean'>
    readonly Sync_By_Branch: FieldRef<"PC_TheCapphat", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PC_TheCapphat findUnique
   */
  export type PC_TheCapphatFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * Filter, which PC_TheCapphat to fetch.
     */
    where: PC_TheCapphatWhereUniqueInput
  }

  /**
   * PC_TheCapphat findUniqueOrThrow
   */
  export type PC_TheCapphatFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * Filter, which PC_TheCapphat to fetch.
     */
    where: PC_TheCapphatWhereUniqueInput
  }

  /**
   * PC_TheCapphat findFirst
   */
  export type PC_TheCapphatFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * Filter, which PC_TheCapphat to fetch.
     */
    where?: PC_TheCapphatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_TheCapphats to fetch.
     */
    orderBy?: PC_TheCapphatOrderByWithRelationInput | PC_TheCapphatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_TheCapphats.
     */
    cursor?: PC_TheCapphatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_TheCapphats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_TheCapphats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_TheCapphats.
     */
    distinct?: PC_TheCapphatScalarFieldEnum | PC_TheCapphatScalarFieldEnum[]
  }

  /**
   * PC_TheCapphat findFirstOrThrow
   */
  export type PC_TheCapphatFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * Filter, which PC_TheCapphat to fetch.
     */
    where?: PC_TheCapphatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_TheCapphats to fetch.
     */
    orderBy?: PC_TheCapphatOrderByWithRelationInput | PC_TheCapphatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PC_TheCapphats.
     */
    cursor?: PC_TheCapphatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_TheCapphats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_TheCapphats.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PC_TheCapphats.
     */
    distinct?: PC_TheCapphatScalarFieldEnum | PC_TheCapphatScalarFieldEnum[]
  }

  /**
   * PC_TheCapphat findMany
   */
  export type PC_TheCapphatFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * Filter, which PC_TheCapphats to fetch.
     */
    where?: PC_TheCapphatWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PC_TheCapphats to fetch.
     */
    orderBy?: PC_TheCapphatOrderByWithRelationInput | PC_TheCapphatOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PC_TheCapphats.
     */
    cursor?: PC_TheCapphatWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PC_TheCapphats from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PC_TheCapphats.
     */
    skip?: number
    distinct?: PC_TheCapphatScalarFieldEnum | PC_TheCapphatScalarFieldEnum[]
  }

  /**
   * PC_TheCapphat create
   */
  export type PC_TheCapphatCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * The data needed to create a PC_TheCapphat.
     */
    data?: XOR<PC_TheCapphatCreateInput, PC_TheCapphatUncheckedCreateInput>
  }

  /**
   * PC_TheCapphat createMany
   */
  export type PC_TheCapphatCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PC_TheCapphats.
     */
    data: PC_TheCapphatCreateManyInput | PC_TheCapphatCreateManyInput[]
  }

  /**
   * PC_TheCapphat update
   */
  export type PC_TheCapphatUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * The data needed to update a PC_TheCapphat.
     */
    data: XOR<PC_TheCapphatUpdateInput, PC_TheCapphatUncheckedUpdateInput>
    /**
     * Choose, which PC_TheCapphat to update.
     */
    where: PC_TheCapphatWhereUniqueInput
  }

  /**
   * PC_TheCapphat updateMany
   */
  export type PC_TheCapphatUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PC_TheCapphats.
     */
    data: XOR<PC_TheCapphatUpdateManyMutationInput, PC_TheCapphatUncheckedUpdateManyInput>
    /**
     * Filter which PC_TheCapphats to update
     */
    where?: PC_TheCapphatWhereInput
  }

  /**
   * PC_TheCapphat upsert
   */
  export type PC_TheCapphatUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * The filter to search for the PC_TheCapphat to update in case it exists.
     */
    where: PC_TheCapphatWhereUniqueInput
    /**
     * In case the PC_TheCapphat found by the `where` argument doesn't exist, create a new PC_TheCapphat with this data.
     */
    create: XOR<PC_TheCapphatCreateInput, PC_TheCapphatUncheckedCreateInput>
    /**
     * In case the PC_TheCapphat was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PC_TheCapphatUpdateInput, PC_TheCapphatUncheckedUpdateInput>
  }

  /**
   * PC_TheCapphat delete
   */
  export type PC_TheCapphatDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
    /**
     * Filter which PC_TheCapphat to delete.
     */
    where: PC_TheCapphatWhereUniqueInput
  }

  /**
   * PC_TheCapphat deleteMany
   */
  export type PC_TheCapphatDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PC_TheCapphats to delete
     */
    where?: PC_TheCapphatWhereInput
  }

  /**
   * PC_TheCapphat without action
   */
  export type PC_TheCapphatDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PC_TheCapphat
     */
    select?: PC_TheCapphatSelect<ExtArgs> | null
  }


  /**
   * Model tbl_Phishing
   */

  export type AggregateTbl_Phishing = {
    _count: Tbl_PhishingCountAggregateOutputType | null
    _avg: Tbl_PhishingAvgAggregateOutputType | null
    _sum: Tbl_PhishingSumAggregateOutputType | null
    _min: Tbl_PhishingMinAggregateOutputType | null
    _max: Tbl_PhishingMaxAggregateOutputType | null
  }

  export type Tbl_PhishingAvgAggregateOutputType = {
    id: number | null
  }

  export type Tbl_PhishingSumAggregateOutputType = {
    id: number | null
  }

  export type Tbl_PhishingMinAggregateOutputType = {
    id: number | null
    userid: string | null
    username: string | null
    phone: string | null
    email: string | null
    description: string | null
    branchID: string | null
    branchName: string | null
    deptID: string | null
    deptName: string | null
  }

  export type Tbl_PhishingMaxAggregateOutputType = {
    id: number | null
    userid: string | null
    username: string | null
    phone: string | null
    email: string | null
    description: string | null
    branchID: string | null
    branchName: string | null
    deptID: string | null
    deptName: string | null
  }

  export type Tbl_PhishingCountAggregateOutputType = {
    id: number
    userid: number
    username: number
    phone: number
    email: number
    description: number
    branchID: number
    branchName: number
    deptID: number
    deptName: number
    _all: number
  }


  export type Tbl_PhishingAvgAggregateInputType = {
    id?: true
  }

  export type Tbl_PhishingSumAggregateInputType = {
    id?: true
  }

  export type Tbl_PhishingMinAggregateInputType = {
    id?: true
    userid?: true
    username?: true
    phone?: true
    email?: true
    description?: true
    branchID?: true
    branchName?: true
    deptID?: true
    deptName?: true
  }

  export type Tbl_PhishingMaxAggregateInputType = {
    id?: true
    userid?: true
    username?: true
    phone?: true
    email?: true
    description?: true
    branchID?: true
    branchName?: true
    deptID?: true
    deptName?: true
  }

  export type Tbl_PhishingCountAggregateInputType = {
    id?: true
    userid?: true
    username?: true
    phone?: true
    email?: true
    description?: true
    branchID?: true
    branchName?: true
    deptID?: true
    deptName?: true
    _all?: true
  }

  export type Tbl_PhishingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_Phishing to aggregate.
     */
    where?: tbl_PhishingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_Phishings to fetch.
     */
    orderBy?: tbl_PhishingOrderByWithRelationInput | tbl_PhishingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tbl_PhishingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_Phishings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_Phishings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tbl_Phishings
    **/
    _count?: true | Tbl_PhishingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tbl_PhishingAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tbl_PhishingSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tbl_PhishingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tbl_PhishingMaxAggregateInputType
  }

  export type GetTbl_PhishingAggregateType<T extends Tbl_PhishingAggregateArgs> = {
        [P in keyof T & keyof AggregateTbl_Phishing]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTbl_Phishing[P]>
      : GetScalarType<T[P], AggregateTbl_Phishing[P]>
  }




  export type tbl_PhishingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tbl_PhishingWhereInput
    orderBy?: tbl_PhishingOrderByWithAggregationInput | tbl_PhishingOrderByWithAggregationInput[]
    by: Tbl_PhishingScalarFieldEnum[] | Tbl_PhishingScalarFieldEnum
    having?: tbl_PhishingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tbl_PhishingCountAggregateInputType | true
    _avg?: Tbl_PhishingAvgAggregateInputType
    _sum?: Tbl_PhishingSumAggregateInputType
    _min?: Tbl_PhishingMinAggregateInputType
    _max?: Tbl_PhishingMaxAggregateInputType
  }

  export type Tbl_PhishingGroupByOutputType = {
    id: number
    userid: string | null
    username: string | null
    phone: string | null
    email: string | null
    description: string | null
    branchID: string | null
    branchName: string | null
    deptID: string | null
    deptName: string | null
    _count: Tbl_PhishingCountAggregateOutputType | null
    _avg: Tbl_PhishingAvgAggregateOutputType | null
    _sum: Tbl_PhishingSumAggregateOutputType | null
    _min: Tbl_PhishingMinAggregateOutputType | null
    _max: Tbl_PhishingMaxAggregateOutputType | null
  }

  type GetTbl_PhishingGroupByPayload<T extends tbl_PhishingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tbl_PhishingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tbl_PhishingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tbl_PhishingGroupByOutputType[P]>
            : GetScalarType<T[P], Tbl_PhishingGroupByOutputType[P]>
        }
      >
    >


  export type tbl_PhishingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userid?: boolean
    username?: boolean
    phone?: boolean
    email?: boolean
    description?: boolean
    branchID?: boolean
    branchName?: boolean
    deptID?: boolean
    deptName?: boolean
  }, ExtArgs["result"]["tbl_Phishing"]>


  export type tbl_PhishingSelectScalar = {
    id?: boolean
    userid?: boolean
    username?: boolean
    phone?: boolean
    email?: boolean
    description?: boolean
    branchID?: boolean
    branchName?: boolean
    deptID?: boolean
    deptName?: boolean
  }


  export type $tbl_PhishingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tbl_Phishing"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userid: string | null
      username: string | null
      phone: string | null
      email: string | null
      description: string | null
      branchID: string | null
      branchName: string | null
      deptID: string | null
      deptName: string | null
    }, ExtArgs["result"]["tbl_Phishing"]>
    composites: {}
  }

  type tbl_PhishingGetPayload<S extends boolean | null | undefined | tbl_PhishingDefaultArgs> = $Result.GetResult<Prisma.$tbl_PhishingPayload, S>

  type tbl_PhishingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tbl_PhishingFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Tbl_PhishingCountAggregateInputType | true
    }

  export interface tbl_PhishingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tbl_Phishing'], meta: { name: 'tbl_Phishing' } }
    /**
     * Find zero or one Tbl_Phishing that matches the filter.
     * @param {tbl_PhishingFindUniqueArgs} args - Arguments to find a Tbl_Phishing
     * @example
     * // Get one Tbl_Phishing
     * const tbl_Phishing = await prisma.tbl_Phishing.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tbl_PhishingFindUniqueArgs>(args: SelectSubset<T, tbl_PhishingFindUniqueArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tbl_Phishing that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {tbl_PhishingFindUniqueOrThrowArgs} args - Arguments to find a Tbl_Phishing
     * @example
     * // Get one Tbl_Phishing
     * const tbl_Phishing = await prisma.tbl_Phishing.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tbl_PhishingFindUniqueOrThrowArgs>(args: SelectSubset<T, tbl_PhishingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tbl_Phishing that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_PhishingFindFirstArgs} args - Arguments to find a Tbl_Phishing
     * @example
     * // Get one Tbl_Phishing
     * const tbl_Phishing = await prisma.tbl_Phishing.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tbl_PhishingFindFirstArgs>(args?: SelectSubset<T, tbl_PhishingFindFirstArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tbl_Phishing that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_PhishingFindFirstOrThrowArgs} args - Arguments to find a Tbl_Phishing
     * @example
     * // Get one Tbl_Phishing
     * const tbl_Phishing = await prisma.tbl_Phishing.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tbl_PhishingFindFirstOrThrowArgs>(args?: SelectSubset<T, tbl_PhishingFindFirstOrThrowArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tbl_Phishings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_PhishingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tbl_Phishings
     * const tbl_Phishings = await prisma.tbl_Phishing.findMany()
     * 
     * // Get first 10 Tbl_Phishings
     * const tbl_Phishings = await prisma.tbl_Phishing.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tbl_PhishingWithIdOnly = await prisma.tbl_Phishing.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tbl_PhishingFindManyArgs>(args?: SelectSubset<T, tbl_PhishingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tbl_Phishing.
     * @param {tbl_PhishingCreateArgs} args - Arguments to create a Tbl_Phishing.
     * @example
     * // Create one Tbl_Phishing
     * const Tbl_Phishing = await prisma.tbl_Phishing.create({
     *   data: {
     *     // ... data to create a Tbl_Phishing
     *   }
     * })
     * 
     */
    create<T extends tbl_PhishingCreateArgs>(args: SelectSubset<T, tbl_PhishingCreateArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tbl_Phishings.
     * @param {tbl_PhishingCreateManyArgs} args - Arguments to create many Tbl_Phishings.
     * @example
     * // Create many Tbl_Phishings
     * const tbl_Phishing = await prisma.tbl_Phishing.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tbl_PhishingCreateManyArgs>(args?: SelectSubset<T, tbl_PhishingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tbl_Phishing.
     * @param {tbl_PhishingDeleteArgs} args - Arguments to delete one Tbl_Phishing.
     * @example
     * // Delete one Tbl_Phishing
     * const Tbl_Phishing = await prisma.tbl_Phishing.delete({
     *   where: {
     *     // ... filter to delete one Tbl_Phishing
     *   }
     * })
     * 
     */
    delete<T extends tbl_PhishingDeleteArgs>(args: SelectSubset<T, tbl_PhishingDeleteArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tbl_Phishing.
     * @param {tbl_PhishingUpdateArgs} args - Arguments to update one Tbl_Phishing.
     * @example
     * // Update one Tbl_Phishing
     * const tbl_Phishing = await prisma.tbl_Phishing.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tbl_PhishingUpdateArgs>(args: SelectSubset<T, tbl_PhishingUpdateArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tbl_Phishings.
     * @param {tbl_PhishingDeleteManyArgs} args - Arguments to filter Tbl_Phishings to delete.
     * @example
     * // Delete a few Tbl_Phishings
     * const { count } = await prisma.tbl_Phishing.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tbl_PhishingDeleteManyArgs>(args?: SelectSubset<T, tbl_PhishingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tbl_Phishings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_PhishingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tbl_Phishings
     * const tbl_Phishing = await prisma.tbl_Phishing.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tbl_PhishingUpdateManyArgs>(args: SelectSubset<T, tbl_PhishingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tbl_Phishing.
     * @param {tbl_PhishingUpsertArgs} args - Arguments to update or create a Tbl_Phishing.
     * @example
     * // Update or create a Tbl_Phishing
     * const tbl_Phishing = await prisma.tbl_Phishing.upsert({
     *   create: {
     *     // ... data to create a Tbl_Phishing
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tbl_Phishing we want to update
     *   }
     * })
     */
    upsert<T extends tbl_PhishingUpsertArgs>(args: SelectSubset<T, tbl_PhishingUpsertArgs<ExtArgs>>): Prisma__tbl_PhishingClient<$Result.GetResult<Prisma.$tbl_PhishingPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tbl_Phishings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_PhishingCountArgs} args - Arguments to filter Tbl_Phishings to count.
     * @example
     * // Count the number of Tbl_Phishings
     * const count = await prisma.tbl_Phishing.count({
     *   where: {
     *     // ... the filter for the Tbl_Phishings we want to count
     *   }
     * })
    **/
    count<T extends tbl_PhishingCountArgs>(
      args?: Subset<T, tbl_PhishingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tbl_PhishingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tbl_Phishing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tbl_PhishingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tbl_PhishingAggregateArgs>(args: Subset<T, Tbl_PhishingAggregateArgs>): Prisma.PrismaPromise<GetTbl_PhishingAggregateType<T>>

    /**
     * Group by Tbl_Phishing.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tbl_PhishingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tbl_PhishingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tbl_PhishingGroupByArgs['orderBy'] }
        : { orderBy?: tbl_PhishingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tbl_PhishingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTbl_PhishingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tbl_Phishing model
   */
  readonly fields: tbl_PhishingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tbl_Phishing.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tbl_PhishingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tbl_Phishing model
   */ 
  interface tbl_PhishingFieldRefs {
    readonly id: FieldRef<"tbl_Phishing", 'Int'>
    readonly userid: FieldRef<"tbl_Phishing", 'String'>
    readonly username: FieldRef<"tbl_Phishing", 'String'>
    readonly phone: FieldRef<"tbl_Phishing", 'String'>
    readonly email: FieldRef<"tbl_Phishing", 'String'>
    readonly description: FieldRef<"tbl_Phishing", 'String'>
    readonly branchID: FieldRef<"tbl_Phishing", 'String'>
    readonly branchName: FieldRef<"tbl_Phishing", 'String'>
    readonly deptID: FieldRef<"tbl_Phishing", 'String'>
    readonly deptName: FieldRef<"tbl_Phishing", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tbl_Phishing findUnique
   */
  export type tbl_PhishingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * Filter, which tbl_Phishing to fetch.
     */
    where: tbl_PhishingWhereUniqueInput
  }

  /**
   * tbl_Phishing findUniqueOrThrow
   */
  export type tbl_PhishingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * Filter, which tbl_Phishing to fetch.
     */
    where: tbl_PhishingWhereUniqueInput
  }

  /**
   * tbl_Phishing findFirst
   */
  export type tbl_PhishingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * Filter, which tbl_Phishing to fetch.
     */
    where?: tbl_PhishingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_Phishings to fetch.
     */
    orderBy?: tbl_PhishingOrderByWithRelationInput | tbl_PhishingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_Phishings.
     */
    cursor?: tbl_PhishingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_Phishings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_Phishings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_Phishings.
     */
    distinct?: Tbl_PhishingScalarFieldEnum | Tbl_PhishingScalarFieldEnum[]
  }

  /**
   * tbl_Phishing findFirstOrThrow
   */
  export type tbl_PhishingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * Filter, which tbl_Phishing to fetch.
     */
    where?: tbl_PhishingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_Phishings to fetch.
     */
    orderBy?: tbl_PhishingOrderByWithRelationInput | tbl_PhishingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tbl_Phishings.
     */
    cursor?: tbl_PhishingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_Phishings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_Phishings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tbl_Phishings.
     */
    distinct?: Tbl_PhishingScalarFieldEnum | Tbl_PhishingScalarFieldEnum[]
  }

  /**
   * tbl_Phishing findMany
   */
  export type tbl_PhishingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * Filter, which tbl_Phishings to fetch.
     */
    where?: tbl_PhishingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tbl_Phishings to fetch.
     */
    orderBy?: tbl_PhishingOrderByWithRelationInput | tbl_PhishingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tbl_Phishings.
     */
    cursor?: tbl_PhishingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tbl_Phishings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tbl_Phishings.
     */
    skip?: number
    distinct?: Tbl_PhishingScalarFieldEnum | Tbl_PhishingScalarFieldEnum[]
  }

  /**
   * tbl_Phishing create
   */
  export type tbl_PhishingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * The data needed to create a tbl_Phishing.
     */
    data?: XOR<tbl_PhishingCreateInput, tbl_PhishingUncheckedCreateInput>
  }

  /**
   * tbl_Phishing createMany
   */
  export type tbl_PhishingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tbl_Phishings.
     */
    data: tbl_PhishingCreateManyInput | tbl_PhishingCreateManyInput[]
  }

  /**
   * tbl_Phishing update
   */
  export type tbl_PhishingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * The data needed to update a tbl_Phishing.
     */
    data: XOR<tbl_PhishingUpdateInput, tbl_PhishingUncheckedUpdateInput>
    /**
     * Choose, which tbl_Phishing to update.
     */
    where: tbl_PhishingWhereUniqueInput
  }

  /**
   * tbl_Phishing updateMany
   */
  export type tbl_PhishingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tbl_Phishings.
     */
    data: XOR<tbl_PhishingUpdateManyMutationInput, tbl_PhishingUncheckedUpdateManyInput>
    /**
     * Filter which tbl_Phishings to update
     */
    where?: tbl_PhishingWhereInput
  }

  /**
   * tbl_Phishing upsert
   */
  export type tbl_PhishingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * The filter to search for the tbl_Phishing to update in case it exists.
     */
    where: tbl_PhishingWhereUniqueInput
    /**
     * In case the tbl_Phishing found by the `where` argument doesn't exist, create a new tbl_Phishing with this data.
     */
    create: XOR<tbl_PhishingCreateInput, tbl_PhishingUncheckedCreateInput>
    /**
     * In case the tbl_Phishing was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tbl_PhishingUpdateInput, tbl_PhishingUncheckedUpdateInput>
  }

  /**
   * tbl_Phishing delete
   */
  export type tbl_PhishingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
    /**
     * Filter which tbl_Phishing to delete.
     */
    where: tbl_PhishingWhereUniqueInput
  }

  /**
   * tbl_Phishing deleteMany
   */
  export type tbl_PhishingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tbl_Phishings to delete
     */
    where?: tbl_PhishingWhereInput
  }

  /**
   * tbl_Phishing without action
   */
  export type tbl_PhishingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tbl_Phishing
     */
    select?: tbl_PhishingSelect<ExtArgs> | null
  }


  /**
   * Model USER_PORTAL
   */

  export type AggregateUSER_PORTAL = {
    _count: USER_PORTALCountAggregateOutputType | null
    _min: USER_PORTALMinAggregateOutputType | null
    _max: USER_PORTALMaxAggregateOutputType | null
  }

  export type USER_PORTALMinAggregateOutputType = {
    PID: string | null
    Name: string | null
  }

  export type USER_PORTALMaxAggregateOutputType = {
    PID: string | null
    Name: string | null
  }

  export type USER_PORTALCountAggregateOutputType = {
    PID: number
    Name: number
    _all: number
  }


  export type USER_PORTALMinAggregateInputType = {
    PID?: true
    Name?: true
  }

  export type USER_PORTALMaxAggregateInputType = {
    PID?: true
    Name?: true
  }

  export type USER_PORTALCountAggregateInputType = {
    PID?: true
    Name?: true
    _all?: true
  }

  export type USER_PORTALAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which USER_PORTAL to aggregate.
     */
    where?: USER_PORTALWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of USER_PORTALS to fetch.
     */
    orderBy?: USER_PORTALOrderByWithRelationInput | USER_PORTALOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: USER_PORTALWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` USER_PORTALS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` USER_PORTALS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned USER_PORTALS
    **/
    _count?: true | USER_PORTALCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: USER_PORTALMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: USER_PORTALMaxAggregateInputType
  }

  export type GetUSER_PORTALAggregateType<T extends USER_PORTALAggregateArgs> = {
        [P in keyof T & keyof AggregateUSER_PORTAL]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUSER_PORTAL[P]>
      : GetScalarType<T[P], AggregateUSER_PORTAL[P]>
  }




  export type USER_PORTALGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: USER_PORTALWhereInput
    orderBy?: USER_PORTALOrderByWithAggregationInput | USER_PORTALOrderByWithAggregationInput[]
    by: USER_PORTALScalarFieldEnum[] | USER_PORTALScalarFieldEnum
    having?: USER_PORTALScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: USER_PORTALCountAggregateInputType | true
    _min?: USER_PORTALMinAggregateInputType
    _max?: USER_PORTALMaxAggregateInputType
  }

  export type USER_PORTALGroupByOutputType = {
    PID: string
    Name: string | null
    _count: USER_PORTALCountAggregateOutputType | null
    _min: USER_PORTALMinAggregateOutputType | null
    _max: USER_PORTALMaxAggregateOutputType | null
  }

  type GetUSER_PORTALGroupByPayload<T extends USER_PORTALGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<USER_PORTALGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof USER_PORTALGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], USER_PORTALGroupByOutputType[P]>
            : GetScalarType<T[P], USER_PORTALGroupByOutputType[P]>
        }
      >
    >


  export type USER_PORTALSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    PID?: boolean
    Name?: boolean
  }, ExtArgs["result"]["uSER_PORTAL"]>


  export type USER_PORTALSelectScalar = {
    PID?: boolean
    Name?: boolean
  }


  export type $USER_PORTALPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "USER_PORTAL"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      PID: string
      Name: string | null
    }, ExtArgs["result"]["uSER_PORTAL"]>
    composites: {}
  }

  type USER_PORTALGetPayload<S extends boolean | null | undefined | USER_PORTALDefaultArgs> = $Result.GetResult<Prisma.$USER_PORTALPayload, S>

  type USER_PORTALCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<USER_PORTALFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: USER_PORTALCountAggregateInputType | true
    }

  export interface USER_PORTALDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['USER_PORTAL'], meta: { name: 'USER_PORTAL' } }
    /**
     * Find zero or one USER_PORTAL that matches the filter.
     * @param {USER_PORTALFindUniqueArgs} args - Arguments to find a USER_PORTAL
     * @example
     * // Get one USER_PORTAL
     * const uSER_PORTAL = await prisma.uSER_PORTAL.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends USER_PORTALFindUniqueArgs>(args: SelectSubset<T, USER_PORTALFindUniqueArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one USER_PORTAL that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {USER_PORTALFindUniqueOrThrowArgs} args - Arguments to find a USER_PORTAL
     * @example
     * // Get one USER_PORTAL
     * const uSER_PORTAL = await prisma.uSER_PORTAL.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends USER_PORTALFindUniqueOrThrowArgs>(args: SelectSubset<T, USER_PORTALFindUniqueOrThrowArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first USER_PORTAL that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALFindFirstArgs} args - Arguments to find a USER_PORTAL
     * @example
     * // Get one USER_PORTAL
     * const uSER_PORTAL = await prisma.uSER_PORTAL.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends USER_PORTALFindFirstArgs>(args?: SelectSubset<T, USER_PORTALFindFirstArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first USER_PORTAL that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALFindFirstOrThrowArgs} args - Arguments to find a USER_PORTAL
     * @example
     * // Get one USER_PORTAL
     * const uSER_PORTAL = await prisma.uSER_PORTAL.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends USER_PORTALFindFirstOrThrowArgs>(args?: SelectSubset<T, USER_PORTALFindFirstOrThrowArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more USER_PORTALS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all USER_PORTALS
     * const uSER_PORTALS = await prisma.uSER_PORTAL.findMany()
     * 
     * // Get first 10 USER_PORTALS
     * const uSER_PORTALS = await prisma.uSER_PORTAL.findMany({ take: 10 })
     * 
     * // Only select the `PID`
     * const uSER_PORTALWithPIDOnly = await prisma.uSER_PORTAL.findMany({ select: { PID: true } })
     * 
     */
    findMany<T extends USER_PORTALFindManyArgs>(args?: SelectSubset<T, USER_PORTALFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a USER_PORTAL.
     * @param {USER_PORTALCreateArgs} args - Arguments to create a USER_PORTAL.
     * @example
     * // Create one USER_PORTAL
     * const USER_PORTAL = await prisma.uSER_PORTAL.create({
     *   data: {
     *     // ... data to create a USER_PORTAL
     *   }
     * })
     * 
     */
    create<T extends USER_PORTALCreateArgs>(args: SelectSubset<T, USER_PORTALCreateArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many USER_PORTALS.
     * @param {USER_PORTALCreateManyArgs} args - Arguments to create many USER_PORTALS.
     * @example
     * // Create many USER_PORTALS
     * const uSER_PORTAL = await prisma.uSER_PORTAL.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends USER_PORTALCreateManyArgs>(args?: SelectSubset<T, USER_PORTALCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a USER_PORTAL.
     * @param {USER_PORTALDeleteArgs} args - Arguments to delete one USER_PORTAL.
     * @example
     * // Delete one USER_PORTAL
     * const USER_PORTAL = await prisma.uSER_PORTAL.delete({
     *   where: {
     *     // ... filter to delete one USER_PORTAL
     *   }
     * })
     * 
     */
    delete<T extends USER_PORTALDeleteArgs>(args: SelectSubset<T, USER_PORTALDeleteArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one USER_PORTAL.
     * @param {USER_PORTALUpdateArgs} args - Arguments to update one USER_PORTAL.
     * @example
     * // Update one USER_PORTAL
     * const uSER_PORTAL = await prisma.uSER_PORTAL.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends USER_PORTALUpdateArgs>(args: SelectSubset<T, USER_PORTALUpdateArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more USER_PORTALS.
     * @param {USER_PORTALDeleteManyArgs} args - Arguments to filter USER_PORTALS to delete.
     * @example
     * // Delete a few USER_PORTALS
     * const { count } = await prisma.uSER_PORTAL.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends USER_PORTALDeleteManyArgs>(args?: SelectSubset<T, USER_PORTALDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more USER_PORTALS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many USER_PORTALS
     * const uSER_PORTAL = await prisma.uSER_PORTAL.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends USER_PORTALUpdateManyArgs>(args: SelectSubset<T, USER_PORTALUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one USER_PORTAL.
     * @param {USER_PORTALUpsertArgs} args - Arguments to update or create a USER_PORTAL.
     * @example
     * // Update or create a USER_PORTAL
     * const uSER_PORTAL = await prisma.uSER_PORTAL.upsert({
     *   create: {
     *     // ... data to create a USER_PORTAL
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the USER_PORTAL we want to update
     *   }
     * })
     */
    upsert<T extends USER_PORTALUpsertArgs>(args: SelectSubset<T, USER_PORTALUpsertArgs<ExtArgs>>): Prisma__USER_PORTALClient<$Result.GetResult<Prisma.$USER_PORTALPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of USER_PORTALS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALCountArgs} args - Arguments to filter USER_PORTALS to count.
     * @example
     * // Count the number of USER_PORTALS
     * const count = await prisma.uSER_PORTAL.count({
     *   where: {
     *     // ... the filter for the USER_PORTALS we want to count
     *   }
     * })
    **/
    count<T extends USER_PORTALCountArgs>(
      args?: Subset<T, USER_PORTALCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], USER_PORTALCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a USER_PORTAL.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends USER_PORTALAggregateArgs>(args: Subset<T, USER_PORTALAggregateArgs>): Prisma.PrismaPromise<GetUSER_PORTALAggregateType<T>>

    /**
     * Group by USER_PORTAL.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {USER_PORTALGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends USER_PORTALGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: USER_PORTALGroupByArgs['orderBy'] }
        : { orderBy?: USER_PORTALGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, USER_PORTALGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUSER_PORTALGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the USER_PORTAL model
   */
  readonly fields: USER_PORTALFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for USER_PORTAL.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__USER_PORTALClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the USER_PORTAL model
   */ 
  interface USER_PORTALFieldRefs {
    readonly PID: FieldRef<"USER_PORTAL", 'String'>
    readonly Name: FieldRef<"USER_PORTAL", 'String'>
  }
    

  // Custom InputTypes
  /**
   * USER_PORTAL findUnique
   */
  export type USER_PORTALFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * Filter, which USER_PORTAL to fetch.
     */
    where: USER_PORTALWhereUniqueInput
  }

  /**
   * USER_PORTAL findUniqueOrThrow
   */
  export type USER_PORTALFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * Filter, which USER_PORTAL to fetch.
     */
    where: USER_PORTALWhereUniqueInput
  }

  /**
   * USER_PORTAL findFirst
   */
  export type USER_PORTALFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * Filter, which USER_PORTAL to fetch.
     */
    where?: USER_PORTALWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of USER_PORTALS to fetch.
     */
    orderBy?: USER_PORTALOrderByWithRelationInput | USER_PORTALOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for USER_PORTALS.
     */
    cursor?: USER_PORTALWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` USER_PORTALS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` USER_PORTALS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of USER_PORTALS.
     */
    distinct?: USER_PORTALScalarFieldEnum | USER_PORTALScalarFieldEnum[]
  }

  /**
   * USER_PORTAL findFirstOrThrow
   */
  export type USER_PORTALFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * Filter, which USER_PORTAL to fetch.
     */
    where?: USER_PORTALWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of USER_PORTALS to fetch.
     */
    orderBy?: USER_PORTALOrderByWithRelationInput | USER_PORTALOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for USER_PORTALS.
     */
    cursor?: USER_PORTALWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` USER_PORTALS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` USER_PORTALS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of USER_PORTALS.
     */
    distinct?: USER_PORTALScalarFieldEnum | USER_PORTALScalarFieldEnum[]
  }

  /**
   * USER_PORTAL findMany
   */
  export type USER_PORTALFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * Filter, which USER_PORTALS to fetch.
     */
    where?: USER_PORTALWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of USER_PORTALS to fetch.
     */
    orderBy?: USER_PORTALOrderByWithRelationInput | USER_PORTALOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing USER_PORTALS.
     */
    cursor?: USER_PORTALWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` USER_PORTALS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` USER_PORTALS.
     */
    skip?: number
    distinct?: USER_PORTALScalarFieldEnum | USER_PORTALScalarFieldEnum[]
  }

  /**
   * USER_PORTAL create
   */
  export type USER_PORTALCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * The data needed to create a USER_PORTAL.
     */
    data: XOR<USER_PORTALCreateInput, USER_PORTALUncheckedCreateInput>
  }

  /**
   * USER_PORTAL createMany
   */
  export type USER_PORTALCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many USER_PORTALS.
     */
    data: USER_PORTALCreateManyInput | USER_PORTALCreateManyInput[]
  }

  /**
   * USER_PORTAL update
   */
  export type USER_PORTALUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * The data needed to update a USER_PORTAL.
     */
    data: XOR<USER_PORTALUpdateInput, USER_PORTALUncheckedUpdateInput>
    /**
     * Choose, which USER_PORTAL to update.
     */
    where: USER_PORTALWhereUniqueInput
  }

  /**
   * USER_PORTAL updateMany
   */
  export type USER_PORTALUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update USER_PORTALS.
     */
    data: XOR<USER_PORTALUpdateManyMutationInput, USER_PORTALUncheckedUpdateManyInput>
    /**
     * Filter which USER_PORTALS to update
     */
    where?: USER_PORTALWhereInput
  }

  /**
   * USER_PORTAL upsert
   */
  export type USER_PORTALUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * The filter to search for the USER_PORTAL to update in case it exists.
     */
    where: USER_PORTALWhereUniqueInput
    /**
     * In case the USER_PORTAL found by the `where` argument doesn't exist, create a new USER_PORTAL with this data.
     */
    create: XOR<USER_PORTALCreateInput, USER_PORTALUncheckedCreateInput>
    /**
     * In case the USER_PORTAL was found with the provided `where` argument, update it with this data.
     */
    update: XOR<USER_PORTALUpdateInput, USER_PORTALUncheckedUpdateInput>
  }

  /**
   * USER_PORTAL delete
   */
  export type USER_PORTALDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
    /**
     * Filter which USER_PORTAL to delete.
     */
    where: USER_PORTALWhereUniqueInput
  }

  /**
   * USER_PORTAL deleteMany
   */
  export type USER_PORTALDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which USER_PORTALS to delete
     */
    where?: USER_PORTALWhereInput
  }

  /**
   * USER_PORTAL without action
   */
  export type USER_PORTALDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the USER_PORTAL
     */
    select?: USER_PORTALSelect<ExtArgs> | null
  }


  /**
   * Model WS_DMChinhanh
   */

  export type AggregateWS_DMChinhanh = {
    _count: WS_DMChinhanhCountAggregateOutputType | null
    _min: WS_DMChinhanhMinAggregateOutputType | null
    _max: WS_DMChinhanhMaxAggregateOutputType | null
  }

  export type WS_DMChinhanhMinAggregateOutputType = {
    ID_ChiNhanh: string | null
    RSA_Public_Key: string | null
    Url_WS: string | null
    Ten_ChiNhanh: string | null
    Sudung: boolean | null
    Ghichu: string | null
    Url_Webnoibo: string | null
  }

  export type WS_DMChinhanhMaxAggregateOutputType = {
    ID_ChiNhanh: string | null
    RSA_Public_Key: string | null
    Url_WS: string | null
    Ten_ChiNhanh: string | null
    Sudung: boolean | null
    Ghichu: string | null
    Url_Webnoibo: string | null
  }

  export type WS_DMChinhanhCountAggregateOutputType = {
    ID_ChiNhanh: number
    RSA_Public_Key: number
    Url_WS: number
    Ten_ChiNhanh: number
    Sudung: number
    Ghichu: number
    Url_Webnoibo: number
    _all: number
  }


  export type WS_DMChinhanhMinAggregateInputType = {
    ID_ChiNhanh?: true
    RSA_Public_Key?: true
    Url_WS?: true
    Ten_ChiNhanh?: true
    Sudung?: true
    Ghichu?: true
    Url_Webnoibo?: true
  }

  export type WS_DMChinhanhMaxAggregateInputType = {
    ID_ChiNhanh?: true
    RSA_Public_Key?: true
    Url_WS?: true
    Ten_ChiNhanh?: true
    Sudung?: true
    Ghichu?: true
    Url_Webnoibo?: true
  }

  export type WS_DMChinhanhCountAggregateInputType = {
    ID_ChiNhanh?: true
    RSA_Public_Key?: true
    Url_WS?: true
    Ten_ChiNhanh?: true
    Sudung?: true
    Ghichu?: true
    Url_Webnoibo?: true
    _all?: true
  }

  export type WS_DMChinhanhAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMChinhanh to aggregate.
     */
    where?: WS_DMChinhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMChinhanhs to fetch.
     */
    orderBy?: WS_DMChinhanhOrderByWithRelationInput | WS_DMChinhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WS_DMChinhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMChinhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMChinhanhs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WS_DMChinhanhs
    **/
    _count?: true | WS_DMChinhanhCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WS_DMChinhanhMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WS_DMChinhanhMaxAggregateInputType
  }

  export type GetWS_DMChinhanhAggregateType<T extends WS_DMChinhanhAggregateArgs> = {
        [P in keyof T & keyof AggregateWS_DMChinhanh]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWS_DMChinhanh[P]>
      : GetScalarType<T[P], AggregateWS_DMChinhanh[P]>
  }




  export type WS_DMChinhanhGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WS_DMChinhanhWhereInput
    orderBy?: WS_DMChinhanhOrderByWithAggregationInput | WS_DMChinhanhOrderByWithAggregationInput[]
    by: WS_DMChinhanhScalarFieldEnum[] | WS_DMChinhanhScalarFieldEnum
    having?: WS_DMChinhanhScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WS_DMChinhanhCountAggregateInputType | true
    _min?: WS_DMChinhanhMinAggregateInputType
    _max?: WS_DMChinhanhMaxAggregateInputType
  }

  export type WS_DMChinhanhGroupByOutputType = {
    ID_ChiNhanh: string
    RSA_Public_Key: string | null
    Url_WS: string | null
    Ten_ChiNhanh: string | null
    Sudung: boolean | null
    Ghichu: string | null
    Url_Webnoibo: string | null
    _count: WS_DMChinhanhCountAggregateOutputType | null
    _min: WS_DMChinhanhMinAggregateOutputType | null
    _max: WS_DMChinhanhMaxAggregateOutputType | null
  }

  type GetWS_DMChinhanhGroupByPayload<T extends WS_DMChinhanhGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WS_DMChinhanhGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WS_DMChinhanhGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WS_DMChinhanhGroupByOutputType[P]>
            : GetScalarType<T[P], WS_DMChinhanhGroupByOutputType[P]>
        }
      >
    >


  export type WS_DMChinhanhSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID_ChiNhanh?: boolean
    RSA_Public_Key?: boolean
    Url_WS?: boolean
    Ten_ChiNhanh?: boolean
    Sudung?: boolean
    Ghichu?: boolean
    Url_Webnoibo?: boolean
  }, ExtArgs["result"]["wS_DMChinhanh"]>


  export type WS_DMChinhanhSelectScalar = {
    ID_ChiNhanh?: boolean
    RSA_Public_Key?: boolean
    Url_WS?: boolean
    Ten_ChiNhanh?: boolean
    Sudung?: boolean
    Ghichu?: boolean
    Url_Webnoibo?: boolean
  }


  export type $WS_DMChinhanhPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WS_DMChinhanh"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID_ChiNhanh: string
      RSA_Public_Key: string | null
      Url_WS: string | null
      Ten_ChiNhanh: string | null
      Sudung: boolean | null
      Ghichu: string | null
      Url_Webnoibo: string | null
    }, ExtArgs["result"]["wS_DMChinhanh"]>
    composites: {}
  }

  type WS_DMChinhanhGetPayload<S extends boolean | null | undefined | WS_DMChinhanhDefaultArgs> = $Result.GetResult<Prisma.$WS_DMChinhanhPayload, S>

  type WS_DMChinhanhCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WS_DMChinhanhFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WS_DMChinhanhCountAggregateInputType | true
    }

  export interface WS_DMChinhanhDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WS_DMChinhanh'], meta: { name: 'WS_DMChinhanh' } }
    /**
     * Find zero or one WS_DMChinhanh that matches the filter.
     * @param {WS_DMChinhanhFindUniqueArgs} args - Arguments to find a WS_DMChinhanh
     * @example
     * // Get one WS_DMChinhanh
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WS_DMChinhanhFindUniqueArgs>(args: SelectSubset<T, WS_DMChinhanhFindUniqueArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WS_DMChinhanh that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WS_DMChinhanhFindUniqueOrThrowArgs} args - Arguments to find a WS_DMChinhanh
     * @example
     * // Get one WS_DMChinhanh
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WS_DMChinhanhFindUniqueOrThrowArgs>(args: SelectSubset<T, WS_DMChinhanhFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WS_DMChinhanh that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhFindFirstArgs} args - Arguments to find a WS_DMChinhanh
     * @example
     * // Get one WS_DMChinhanh
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WS_DMChinhanhFindFirstArgs>(args?: SelectSubset<T, WS_DMChinhanhFindFirstArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WS_DMChinhanh that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhFindFirstOrThrowArgs} args - Arguments to find a WS_DMChinhanh
     * @example
     * // Get one WS_DMChinhanh
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WS_DMChinhanhFindFirstOrThrowArgs>(args?: SelectSubset<T, WS_DMChinhanhFindFirstOrThrowArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WS_DMChinhanhs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WS_DMChinhanhs
     * const wS_DMChinhanhs = await prisma.wS_DMChinhanh.findMany()
     * 
     * // Get first 10 WS_DMChinhanhs
     * const wS_DMChinhanhs = await prisma.wS_DMChinhanh.findMany({ take: 10 })
     * 
     * // Only select the `ID_ChiNhanh`
     * const wS_DMChinhanhWithID_ChiNhanhOnly = await prisma.wS_DMChinhanh.findMany({ select: { ID_ChiNhanh: true } })
     * 
     */
    findMany<T extends WS_DMChinhanhFindManyArgs>(args?: SelectSubset<T, WS_DMChinhanhFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WS_DMChinhanh.
     * @param {WS_DMChinhanhCreateArgs} args - Arguments to create a WS_DMChinhanh.
     * @example
     * // Create one WS_DMChinhanh
     * const WS_DMChinhanh = await prisma.wS_DMChinhanh.create({
     *   data: {
     *     // ... data to create a WS_DMChinhanh
     *   }
     * })
     * 
     */
    create<T extends WS_DMChinhanhCreateArgs>(args: SelectSubset<T, WS_DMChinhanhCreateArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WS_DMChinhanhs.
     * @param {WS_DMChinhanhCreateManyArgs} args - Arguments to create many WS_DMChinhanhs.
     * @example
     * // Create many WS_DMChinhanhs
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WS_DMChinhanhCreateManyArgs>(args?: SelectSubset<T, WS_DMChinhanhCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a WS_DMChinhanh.
     * @param {WS_DMChinhanhDeleteArgs} args - Arguments to delete one WS_DMChinhanh.
     * @example
     * // Delete one WS_DMChinhanh
     * const WS_DMChinhanh = await prisma.wS_DMChinhanh.delete({
     *   where: {
     *     // ... filter to delete one WS_DMChinhanh
     *   }
     * })
     * 
     */
    delete<T extends WS_DMChinhanhDeleteArgs>(args: SelectSubset<T, WS_DMChinhanhDeleteArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WS_DMChinhanh.
     * @param {WS_DMChinhanhUpdateArgs} args - Arguments to update one WS_DMChinhanh.
     * @example
     * // Update one WS_DMChinhanh
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WS_DMChinhanhUpdateArgs>(args: SelectSubset<T, WS_DMChinhanhUpdateArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WS_DMChinhanhs.
     * @param {WS_DMChinhanhDeleteManyArgs} args - Arguments to filter WS_DMChinhanhs to delete.
     * @example
     * // Delete a few WS_DMChinhanhs
     * const { count } = await prisma.wS_DMChinhanh.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WS_DMChinhanhDeleteManyArgs>(args?: SelectSubset<T, WS_DMChinhanhDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WS_DMChinhanhs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WS_DMChinhanhs
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WS_DMChinhanhUpdateManyArgs>(args: SelectSubset<T, WS_DMChinhanhUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WS_DMChinhanh.
     * @param {WS_DMChinhanhUpsertArgs} args - Arguments to update or create a WS_DMChinhanh.
     * @example
     * // Update or create a WS_DMChinhanh
     * const wS_DMChinhanh = await prisma.wS_DMChinhanh.upsert({
     *   create: {
     *     // ... data to create a WS_DMChinhanh
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WS_DMChinhanh we want to update
     *   }
     * })
     */
    upsert<T extends WS_DMChinhanhUpsertArgs>(args: SelectSubset<T, WS_DMChinhanhUpsertArgs<ExtArgs>>): Prisma__WS_DMChinhanhClient<$Result.GetResult<Prisma.$WS_DMChinhanhPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WS_DMChinhanhs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhCountArgs} args - Arguments to filter WS_DMChinhanhs to count.
     * @example
     * // Count the number of WS_DMChinhanhs
     * const count = await prisma.wS_DMChinhanh.count({
     *   where: {
     *     // ... the filter for the WS_DMChinhanhs we want to count
     *   }
     * })
    **/
    count<T extends WS_DMChinhanhCountArgs>(
      args?: Subset<T, WS_DMChinhanhCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WS_DMChinhanhCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WS_DMChinhanh.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WS_DMChinhanhAggregateArgs>(args: Subset<T, WS_DMChinhanhAggregateArgs>): Prisma.PrismaPromise<GetWS_DMChinhanhAggregateType<T>>

    /**
     * Group by WS_DMChinhanh.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMChinhanhGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WS_DMChinhanhGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WS_DMChinhanhGroupByArgs['orderBy'] }
        : { orderBy?: WS_DMChinhanhGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WS_DMChinhanhGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWS_DMChinhanhGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WS_DMChinhanh model
   */
  readonly fields: WS_DMChinhanhFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WS_DMChinhanh.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WS_DMChinhanhClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WS_DMChinhanh model
   */ 
  interface WS_DMChinhanhFieldRefs {
    readonly ID_ChiNhanh: FieldRef<"WS_DMChinhanh", 'String'>
    readonly RSA_Public_Key: FieldRef<"WS_DMChinhanh", 'String'>
    readonly Url_WS: FieldRef<"WS_DMChinhanh", 'String'>
    readonly Ten_ChiNhanh: FieldRef<"WS_DMChinhanh", 'String'>
    readonly Sudung: FieldRef<"WS_DMChinhanh", 'Boolean'>
    readonly Ghichu: FieldRef<"WS_DMChinhanh", 'String'>
    readonly Url_Webnoibo: FieldRef<"WS_DMChinhanh", 'String'>
  }
    

  // Custom InputTypes
  /**
   * WS_DMChinhanh findUnique
   */
  export type WS_DMChinhanhFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMChinhanh to fetch.
     */
    where: WS_DMChinhanhWhereUniqueInput
  }

  /**
   * WS_DMChinhanh findUniqueOrThrow
   */
  export type WS_DMChinhanhFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMChinhanh to fetch.
     */
    where: WS_DMChinhanhWhereUniqueInput
  }

  /**
   * WS_DMChinhanh findFirst
   */
  export type WS_DMChinhanhFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMChinhanh to fetch.
     */
    where?: WS_DMChinhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMChinhanhs to fetch.
     */
    orderBy?: WS_DMChinhanhOrderByWithRelationInput | WS_DMChinhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMChinhanhs.
     */
    cursor?: WS_DMChinhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMChinhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMChinhanhs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMChinhanhs.
     */
    distinct?: WS_DMChinhanhScalarFieldEnum | WS_DMChinhanhScalarFieldEnum[]
  }

  /**
   * WS_DMChinhanh findFirstOrThrow
   */
  export type WS_DMChinhanhFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMChinhanh to fetch.
     */
    where?: WS_DMChinhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMChinhanhs to fetch.
     */
    orderBy?: WS_DMChinhanhOrderByWithRelationInput | WS_DMChinhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMChinhanhs.
     */
    cursor?: WS_DMChinhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMChinhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMChinhanhs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMChinhanhs.
     */
    distinct?: WS_DMChinhanhScalarFieldEnum | WS_DMChinhanhScalarFieldEnum[]
  }

  /**
   * WS_DMChinhanh findMany
   */
  export type WS_DMChinhanhFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMChinhanhs to fetch.
     */
    where?: WS_DMChinhanhWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMChinhanhs to fetch.
     */
    orderBy?: WS_DMChinhanhOrderByWithRelationInput | WS_DMChinhanhOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WS_DMChinhanhs.
     */
    cursor?: WS_DMChinhanhWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMChinhanhs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMChinhanhs.
     */
    skip?: number
    distinct?: WS_DMChinhanhScalarFieldEnum | WS_DMChinhanhScalarFieldEnum[]
  }

  /**
   * WS_DMChinhanh create
   */
  export type WS_DMChinhanhCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * The data needed to create a WS_DMChinhanh.
     */
    data: XOR<WS_DMChinhanhCreateInput, WS_DMChinhanhUncheckedCreateInput>
  }

  /**
   * WS_DMChinhanh createMany
   */
  export type WS_DMChinhanhCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WS_DMChinhanhs.
     */
    data: WS_DMChinhanhCreateManyInput | WS_DMChinhanhCreateManyInput[]
  }

  /**
   * WS_DMChinhanh update
   */
  export type WS_DMChinhanhUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * The data needed to update a WS_DMChinhanh.
     */
    data: XOR<WS_DMChinhanhUpdateInput, WS_DMChinhanhUncheckedUpdateInput>
    /**
     * Choose, which WS_DMChinhanh to update.
     */
    where: WS_DMChinhanhWhereUniqueInput
  }

  /**
   * WS_DMChinhanh updateMany
   */
  export type WS_DMChinhanhUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WS_DMChinhanhs.
     */
    data: XOR<WS_DMChinhanhUpdateManyMutationInput, WS_DMChinhanhUncheckedUpdateManyInput>
    /**
     * Filter which WS_DMChinhanhs to update
     */
    where?: WS_DMChinhanhWhereInput
  }

  /**
   * WS_DMChinhanh upsert
   */
  export type WS_DMChinhanhUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * The filter to search for the WS_DMChinhanh to update in case it exists.
     */
    where: WS_DMChinhanhWhereUniqueInput
    /**
     * In case the WS_DMChinhanh found by the `where` argument doesn't exist, create a new WS_DMChinhanh with this data.
     */
    create: XOR<WS_DMChinhanhCreateInput, WS_DMChinhanhUncheckedCreateInput>
    /**
     * In case the WS_DMChinhanh was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WS_DMChinhanhUpdateInput, WS_DMChinhanhUncheckedUpdateInput>
  }

  /**
   * WS_DMChinhanh delete
   */
  export type WS_DMChinhanhDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
    /**
     * Filter which WS_DMChinhanh to delete.
     */
    where: WS_DMChinhanhWhereUniqueInput
  }

  /**
   * WS_DMChinhanh deleteMany
   */
  export type WS_DMChinhanhDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMChinhanhs to delete
     */
    where?: WS_DMChinhanhWhereInput
  }

  /**
   * WS_DMChinhanh without action
   */
  export type WS_DMChinhanhDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMChinhanh
     */
    select?: WS_DMChinhanhSelect<ExtArgs> | null
  }


  /**
   * Model WS_DMDonvi
   */

  export type AggregateWS_DMDonvi = {
    _count: WS_DMDonviCountAggregateOutputType | null
    _min: WS_DMDonviMinAggregateOutputType | null
    _max: WS_DMDonviMaxAggregateOutputType | null
  }

  export type WS_DMDonviMinAggregateOutputType = {
    id_DMDonvi: string | null
    Ten_Donvi: string | null
    id_Khoaphong: string | null
    id_ChiNhanh: string | null
    Sudung: boolean | null
  }

  export type WS_DMDonviMaxAggregateOutputType = {
    id_DMDonvi: string | null
    Ten_Donvi: string | null
    id_Khoaphong: string | null
    id_ChiNhanh: string | null
    Sudung: boolean | null
  }

  export type WS_DMDonviCountAggregateOutputType = {
    id_DMDonvi: number
    Ten_Donvi: number
    id_Khoaphong: number
    id_ChiNhanh: number
    Sudung: number
    _all: number
  }


  export type WS_DMDonviMinAggregateInputType = {
    id_DMDonvi?: true
    Ten_Donvi?: true
    id_Khoaphong?: true
    id_ChiNhanh?: true
    Sudung?: true
  }

  export type WS_DMDonviMaxAggregateInputType = {
    id_DMDonvi?: true
    Ten_Donvi?: true
    id_Khoaphong?: true
    id_ChiNhanh?: true
    Sudung?: true
  }

  export type WS_DMDonviCountAggregateInputType = {
    id_DMDonvi?: true
    Ten_Donvi?: true
    id_Khoaphong?: true
    id_ChiNhanh?: true
    Sudung?: true
    _all?: true
  }

  export type WS_DMDonviAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMDonvi to aggregate.
     */
    where?: WS_DMDonviWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMDonvis to fetch.
     */
    orderBy?: WS_DMDonviOrderByWithRelationInput | WS_DMDonviOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WS_DMDonviWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMDonvis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMDonvis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WS_DMDonvis
    **/
    _count?: true | WS_DMDonviCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WS_DMDonviMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WS_DMDonviMaxAggregateInputType
  }

  export type GetWS_DMDonviAggregateType<T extends WS_DMDonviAggregateArgs> = {
        [P in keyof T & keyof AggregateWS_DMDonvi]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWS_DMDonvi[P]>
      : GetScalarType<T[P], AggregateWS_DMDonvi[P]>
  }




  export type WS_DMDonviGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WS_DMDonviWhereInput
    orderBy?: WS_DMDonviOrderByWithAggregationInput | WS_DMDonviOrderByWithAggregationInput[]
    by: WS_DMDonviScalarFieldEnum[] | WS_DMDonviScalarFieldEnum
    having?: WS_DMDonviScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WS_DMDonviCountAggregateInputType | true
    _min?: WS_DMDonviMinAggregateInputType
    _max?: WS_DMDonviMaxAggregateInputType
  }

  export type WS_DMDonviGroupByOutputType = {
    id_DMDonvi: string
    Ten_Donvi: string | null
    id_Khoaphong: string | null
    id_ChiNhanh: string | null
    Sudung: boolean | null
    _count: WS_DMDonviCountAggregateOutputType | null
    _min: WS_DMDonviMinAggregateOutputType | null
    _max: WS_DMDonviMaxAggregateOutputType | null
  }

  type GetWS_DMDonviGroupByPayload<T extends WS_DMDonviGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WS_DMDonviGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WS_DMDonviGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WS_DMDonviGroupByOutputType[P]>
            : GetScalarType<T[P], WS_DMDonviGroupByOutputType[P]>
        }
      >
    >


  export type WS_DMDonviSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_DMDonvi?: boolean
    Ten_Donvi?: boolean
    id_Khoaphong?: boolean
    id_ChiNhanh?: boolean
    Sudung?: boolean
  }, ExtArgs["result"]["wS_DMDonvi"]>


  export type WS_DMDonviSelectScalar = {
    id_DMDonvi?: boolean
    Ten_Donvi?: boolean
    id_Khoaphong?: boolean
    id_ChiNhanh?: boolean
    Sudung?: boolean
  }


  export type $WS_DMDonviPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WS_DMDonvi"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_DMDonvi: string
      Ten_Donvi: string | null
      id_Khoaphong: string | null
      id_ChiNhanh: string | null
      Sudung: boolean | null
    }, ExtArgs["result"]["wS_DMDonvi"]>
    composites: {}
  }

  type WS_DMDonviGetPayload<S extends boolean | null | undefined | WS_DMDonviDefaultArgs> = $Result.GetResult<Prisma.$WS_DMDonviPayload, S>

  type WS_DMDonviCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WS_DMDonviFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WS_DMDonviCountAggregateInputType | true
    }

  export interface WS_DMDonviDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WS_DMDonvi'], meta: { name: 'WS_DMDonvi' } }
    /**
     * Find zero or one WS_DMDonvi that matches the filter.
     * @param {WS_DMDonviFindUniqueArgs} args - Arguments to find a WS_DMDonvi
     * @example
     * // Get one WS_DMDonvi
     * const wS_DMDonvi = await prisma.wS_DMDonvi.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WS_DMDonviFindUniqueArgs>(args: SelectSubset<T, WS_DMDonviFindUniqueArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WS_DMDonvi that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WS_DMDonviFindUniqueOrThrowArgs} args - Arguments to find a WS_DMDonvi
     * @example
     * // Get one WS_DMDonvi
     * const wS_DMDonvi = await prisma.wS_DMDonvi.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WS_DMDonviFindUniqueOrThrowArgs>(args: SelectSubset<T, WS_DMDonviFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WS_DMDonvi that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviFindFirstArgs} args - Arguments to find a WS_DMDonvi
     * @example
     * // Get one WS_DMDonvi
     * const wS_DMDonvi = await prisma.wS_DMDonvi.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WS_DMDonviFindFirstArgs>(args?: SelectSubset<T, WS_DMDonviFindFirstArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WS_DMDonvi that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviFindFirstOrThrowArgs} args - Arguments to find a WS_DMDonvi
     * @example
     * // Get one WS_DMDonvi
     * const wS_DMDonvi = await prisma.wS_DMDonvi.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WS_DMDonviFindFirstOrThrowArgs>(args?: SelectSubset<T, WS_DMDonviFindFirstOrThrowArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WS_DMDonvis that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WS_DMDonvis
     * const wS_DMDonvis = await prisma.wS_DMDonvi.findMany()
     * 
     * // Get first 10 WS_DMDonvis
     * const wS_DMDonvis = await prisma.wS_DMDonvi.findMany({ take: 10 })
     * 
     * // Only select the `id_DMDonvi`
     * const wS_DMDonviWithId_DMDonviOnly = await prisma.wS_DMDonvi.findMany({ select: { id_DMDonvi: true } })
     * 
     */
    findMany<T extends WS_DMDonviFindManyArgs>(args?: SelectSubset<T, WS_DMDonviFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WS_DMDonvi.
     * @param {WS_DMDonviCreateArgs} args - Arguments to create a WS_DMDonvi.
     * @example
     * // Create one WS_DMDonvi
     * const WS_DMDonvi = await prisma.wS_DMDonvi.create({
     *   data: {
     *     // ... data to create a WS_DMDonvi
     *   }
     * })
     * 
     */
    create<T extends WS_DMDonviCreateArgs>(args: SelectSubset<T, WS_DMDonviCreateArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WS_DMDonvis.
     * @param {WS_DMDonviCreateManyArgs} args - Arguments to create many WS_DMDonvis.
     * @example
     * // Create many WS_DMDonvis
     * const wS_DMDonvi = await prisma.wS_DMDonvi.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WS_DMDonviCreateManyArgs>(args?: SelectSubset<T, WS_DMDonviCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a WS_DMDonvi.
     * @param {WS_DMDonviDeleteArgs} args - Arguments to delete one WS_DMDonvi.
     * @example
     * // Delete one WS_DMDonvi
     * const WS_DMDonvi = await prisma.wS_DMDonvi.delete({
     *   where: {
     *     // ... filter to delete one WS_DMDonvi
     *   }
     * })
     * 
     */
    delete<T extends WS_DMDonviDeleteArgs>(args: SelectSubset<T, WS_DMDonviDeleteArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WS_DMDonvi.
     * @param {WS_DMDonviUpdateArgs} args - Arguments to update one WS_DMDonvi.
     * @example
     * // Update one WS_DMDonvi
     * const wS_DMDonvi = await prisma.wS_DMDonvi.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WS_DMDonviUpdateArgs>(args: SelectSubset<T, WS_DMDonviUpdateArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WS_DMDonvis.
     * @param {WS_DMDonviDeleteManyArgs} args - Arguments to filter WS_DMDonvis to delete.
     * @example
     * // Delete a few WS_DMDonvis
     * const { count } = await prisma.wS_DMDonvi.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WS_DMDonviDeleteManyArgs>(args?: SelectSubset<T, WS_DMDonviDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WS_DMDonvis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WS_DMDonvis
     * const wS_DMDonvi = await prisma.wS_DMDonvi.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WS_DMDonviUpdateManyArgs>(args: SelectSubset<T, WS_DMDonviUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WS_DMDonvi.
     * @param {WS_DMDonviUpsertArgs} args - Arguments to update or create a WS_DMDonvi.
     * @example
     * // Update or create a WS_DMDonvi
     * const wS_DMDonvi = await prisma.wS_DMDonvi.upsert({
     *   create: {
     *     // ... data to create a WS_DMDonvi
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WS_DMDonvi we want to update
     *   }
     * })
     */
    upsert<T extends WS_DMDonviUpsertArgs>(args: SelectSubset<T, WS_DMDonviUpsertArgs<ExtArgs>>): Prisma__WS_DMDonviClient<$Result.GetResult<Prisma.$WS_DMDonviPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WS_DMDonvis.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviCountArgs} args - Arguments to filter WS_DMDonvis to count.
     * @example
     * // Count the number of WS_DMDonvis
     * const count = await prisma.wS_DMDonvi.count({
     *   where: {
     *     // ... the filter for the WS_DMDonvis we want to count
     *   }
     * })
    **/
    count<T extends WS_DMDonviCountArgs>(
      args?: Subset<T, WS_DMDonviCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WS_DMDonviCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WS_DMDonvi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WS_DMDonviAggregateArgs>(args: Subset<T, WS_DMDonviAggregateArgs>): Prisma.PrismaPromise<GetWS_DMDonviAggregateType<T>>

    /**
     * Group by WS_DMDonvi.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMDonviGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WS_DMDonviGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WS_DMDonviGroupByArgs['orderBy'] }
        : { orderBy?: WS_DMDonviGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WS_DMDonviGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWS_DMDonviGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WS_DMDonvi model
   */
  readonly fields: WS_DMDonviFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WS_DMDonvi.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WS_DMDonviClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WS_DMDonvi model
   */ 
  interface WS_DMDonviFieldRefs {
    readonly id_DMDonvi: FieldRef<"WS_DMDonvi", 'String'>
    readonly Ten_Donvi: FieldRef<"WS_DMDonvi", 'String'>
    readonly id_Khoaphong: FieldRef<"WS_DMDonvi", 'String'>
    readonly id_ChiNhanh: FieldRef<"WS_DMDonvi", 'String'>
    readonly Sudung: FieldRef<"WS_DMDonvi", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * WS_DMDonvi findUnique
   */
  export type WS_DMDonviFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMDonvi to fetch.
     */
    where: WS_DMDonviWhereUniqueInput
  }

  /**
   * WS_DMDonvi findUniqueOrThrow
   */
  export type WS_DMDonviFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMDonvi to fetch.
     */
    where: WS_DMDonviWhereUniqueInput
  }

  /**
   * WS_DMDonvi findFirst
   */
  export type WS_DMDonviFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMDonvi to fetch.
     */
    where?: WS_DMDonviWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMDonvis to fetch.
     */
    orderBy?: WS_DMDonviOrderByWithRelationInput | WS_DMDonviOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMDonvis.
     */
    cursor?: WS_DMDonviWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMDonvis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMDonvis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMDonvis.
     */
    distinct?: WS_DMDonviScalarFieldEnum | WS_DMDonviScalarFieldEnum[]
  }

  /**
   * WS_DMDonvi findFirstOrThrow
   */
  export type WS_DMDonviFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMDonvi to fetch.
     */
    where?: WS_DMDonviWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMDonvis to fetch.
     */
    orderBy?: WS_DMDonviOrderByWithRelationInput | WS_DMDonviOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMDonvis.
     */
    cursor?: WS_DMDonviWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMDonvis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMDonvis.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMDonvis.
     */
    distinct?: WS_DMDonviScalarFieldEnum | WS_DMDonviScalarFieldEnum[]
  }

  /**
   * WS_DMDonvi findMany
   */
  export type WS_DMDonviFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMDonvis to fetch.
     */
    where?: WS_DMDonviWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMDonvis to fetch.
     */
    orderBy?: WS_DMDonviOrderByWithRelationInput | WS_DMDonviOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WS_DMDonvis.
     */
    cursor?: WS_DMDonviWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMDonvis from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMDonvis.
     */
    skip?: number
    distinct?: WS_DMDonviScalarFieldEnum | WS_DMDonviScalarFieldEnum[]
  }

  /**
   * WS_DMDonvi create
   */
  export type WS_DMDonviCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * The data needed to create a WS_DMDonvi.
     */
    data: XOR<WS_DMDonviCreateInput, WS_DMDonviUncheckedCreateInput>
  }

  /**
   * WS_DMDonvi createMany
   */
  export type WS_DMDonviCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WS_DMDonvis.
     */
    data: WS_DMDonviCreateManyInput | WS_DMDonviCreateManyInput[]
  }

  /**
   * WS_DMDonvi update
   */
  export type WS_DMDonviUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * The data needed to update a WS_DMDonvi.
     */
    data: XOR<WS_DMDonviUpdateInput, WS_DMDonviUncheckedUpdateInput>
    /**
     * Choose, which WS_DMDonvi to update.
     */
    where: WS_DMDonviWhereUniqueInput
  }

  /**
   * WS_DMDonvi updateMany
   */
  export type WS_DMDonviUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WS_DMDonvis.
     */
    data: XOR<WS_DMDonviUpdateManyMutationInput, WS_DMDonviUncheckedUpdateManyInput>
    /**
     * Filter which WS_DMDonvis to update
     */
    where?: WS_DMDonviWhereInput
  }

  /**
   * WS_DMDonvi upsert
   */
  export type WS_DMDonviUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * The filter to search for the WS_DMDonvi to update in case it exists.
     */
    where: WS_DMDonviWhereUniqueInput
    /**
     * In case the WS_DMDonvi found by the `where` argument doesn't exist, create a new WS_DMDonvi with this data.
     */
    create: XOR<WS_DMDonviCreateInput, WS_DMDonviUncheckedCreateInput>
    /**
     * In case the WS_DMDonvi was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WS_DMDonviUpdateInput, WS_DMDonviUncheckedUpdateInput>
  }

  /**
   * WS_DMDonvi delete
   */
  export type WS_DMDonviDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
    /**
     * Filter which WS_DMDonvi to delete.
     */
    where: WS_DMDonviWhereUniqueInput
  }

  /**
   * WS_DMDonvi deleteMany
   */
  export type WS_DMDonviDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMDonvis to delete
     */
    where?: WS_DMDonviWhereInput
  }

  /**
   * WS_DMDonvi without action
   */
  export type WS_DMDonviDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMDonvi
     */
    select?: WS_DMDonviSelect<ExtArgs> | null
  }


  /**
   * Model WS_DMKhoaPhong
   */

  export type AggregateWS_DMKhoaPhong = {
    _count: WS_DMKhoaPhongCountAggregateOutputType | null
    _min: WS_DMKhoaPhongMinAggregateOutputType | null
    _max: WS_DMKhoaPhongMaxAggregateOutputType | null
  }

  export type WS_DMKhoaPhongMinAggregateOutputType = {
    id_Khoaphong: string | null
    Ten: string | null
    id_KPCha: string | null
    ID_ChiNhanh: string | null
    Ghichu: string | null
    Sudung: boolean | null
    VanHanh: boolean | null
  }

  export type WS_DMKhoaPhongMaxAggregateOutputType = {
    id_Khoaphong: string | null
    Ten: string | null
    id_KPCha: string | null
    ID_ChiNhanh: string | null
    Ghichu: string | null
    Sudung: boolean | null
    VanHanh: boolean | null
  }

  export type WS_DMKhoaPhongCountAggregateOutputType = {
    id_Khoaphong: number
    Ten: number
    id_KPCha: number
    ID_ChiNhanh: number
    Ghichu: number
    Sudung: number
    VanHanh: number
    _all: number
  }


  export type WS_DMKhoaPhongMinAggregateInputType = {
    id_Khoaphong?: true
    Ten?: true
    id_KPCha?: true
    ID_ChiNhanh?: true
    Ghichu?: true
    Sudung?: true
    VanHanh?: true
  }

  export type WS_DMKhoaPhongMaxAggregateInputType = {
    id_Khoaphong?: true
    Ten?: true
    id_KPCha?: true
    ID_ChiNhanh?: true
    Ghichu?: true
    Sudung?: true
    VanHanh?: true
  }

  export type WS_DMKhoaPhongCountAggregateInputType = {
    id_Khoaphong?: true
    Ten?: true
    id_KPCha?: true
    ID_ChiNhanh?: true
    Ghichu?: true
    Sudung?: true
    VanHanh?: true
    _all?: true
  }

  export type WS_DMKhoaPhongAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMKhoaPhong to aggregate.
     */
    where?: WS_DMKhoaPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMKhoaPhongs to fetch.
     */
    orderBy?: WS_DMKhoaPhongOrderByWithRelationInput | WS_DMKhoaPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WS_DMKhoaPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMKhoaPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMKhoaPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WS_DMKhoaPhongs
    **/
    _count?: true | WS_DMKhoaPhongCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WS_DMKhoaPhongMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WS_DMKhoaPhongMaxAggregateInputType
  }

  export type GetWS_DMKhoaPhongAggregateType<T extends WS_DMKhoaPhongAggregateArgs> = {
        [P in keyof T & keyof AggregateWS_DMKhoaPhong]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWS_DMKhoaPhong[P]>
      : GetScalarType<T[P], AggregateWS_DMKhoaPhong[P]>
  }




  export type WS_DMKhoaPhongGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WS_DMKhoaPhongWhereInput
    orderBy?: WS_DMKhoaPhongOrderByWithAggregationInput | WS_DMKhoaPhongOrderByWithAggregationInput[]
    by: WS_DMKhoaPhongScalarFieldEnum[] | WS_DMKhoaPhongScalarFieldEnum
    having?: WS_DMKhoaPhongScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WS_DMKhoaPhongCountAggregateInputType | true
    _min?: WS_DMKhoaPhongMinAggregateInputType
    _max?: WS_DMKhoaPhongMaxAggregateInputType
  }

  export type WS_DMKhoaPhongGroupByOutputType = {
    id_Khoaphong: string
    Ten: string | null
    id_KPCha: string | null
    ID_ChiNhanh: string
    Ghichu: string | null
    Sudung: boolean | null
    VanHanh: boolean | null
    _count: WS_DMKhoaPhongCountAggregateOutputType | null
    _min: WS_DMKhoaPhongMinAggregateOutputType | null
    _max: WS_DMKhoaPhongMaxAggregateOutputType | null
  }

  type GetWS_DMKhoaPhongGroupByPayload<T extends WS_DMKhoaPhongGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WS_DMKhoaPhongGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WS_DMKhoaPhongGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WS_DMKhoaPhongGroupByOutputType[P]>
            : GetScalarType<T[P], WS_DMKhoaPhongGroupByOutputType[P]>
        }
      >
    >


  export type WS_DMKhoaPhongSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_Khoaphong?: boolean
    Ten?: boolean
    id_KPCha?: boolean
    ID_ChiNhanh?: boolean
    Ghichu?: boolean
    Sudung?: boolean
    VanHanh?: boolean
  }, ExtArgs["result"]["wS_DMKhoaPhong"]>


  export type WS_DMKhoaPhongSelectScalar = {
    id_Khoaphong?: boolean
    Ten?: boolean
    id_KPCha?: boolean
    ID_ChiNhanh?: boolean
    Ghichu?: boolean
    Sudung?: boolean
    VanHanh?: boolean
  }


  export type $WS_DMKhoaPhongPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WS_DMKhoaPhong"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_Khoaphong: string
      Ten: string | null
      id_KPCha: string | null
      ID_ChiNhanh: string
      Ghichu: string | null
      Sudung: boolean | null
      VanHanh: boolean | null
    }, ExtArgs["result"]["wS_DMKhoaPhong"]>
    composites: {}
  }

  type WS_DMKhoaPhongGetPayload<S extends boolean | null | undefined | WS_DMKhoaPhongDefaultArgs> = $Result.GetResult<Prisma.$WS_DMKhoaPhongPayload, S>

  type WS_DMKhoaPhongCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WS_DMKhoaPhongFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WS_DMKhoaPhongCountAggregateInputType | true
    }

  export interface WS_DMKhoaPhongDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WS_DMKhoaPhong'], meta: { name: 'WS_DMKhoaPhong' } }
    /**
     * Find zero or one WS_DMKhoaPhong that matches the filter.
     * @param {WS_DMKhoaPhongFindUniqueArgs} args - Arguments to find a WS_DMKhoaPhong
     * @example
     * // Get one WS_DMKhoaPhong
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WS_DMKhoaPhongFindUniqueArgs>(args: SelectSubset<T, WS_DMKhoaPhongFindUniqueArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WS_DMKhoaPhong that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WS_DMKhoaPhongFindUniqueOrThrowArgs} args - Arguments to find a WS_DMKhoaPhong
     * @example
     * // Get one WS_DMKhoaPhong
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WS_DMKhoaPhongFindUniqueOrThrowArgs>(args: SelectSubset<T, WS_DMKhoaPhongFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WS_DMKhoaPhong that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongFindFirstArgs} args - Arguments to find a WS_DMKhoaPhong
     * @example
     * // Get one WS_DMKhoaPhong
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WS_DMKhoaPhongFindFirstArgs>(args?: SelectSubset<T, WS_DMKhoaPhongFindFirstArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WS_DMKhoaPhong that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongFindFirstOrThrowArgs} args - Arguments to find a WS_DMKhoaPhong
     * @example
     * // Get one WS_DMKhoaPhong
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WS_DMKhoaPhongFindFirstOrThrowArgs>(args?: SelectSubset<T, WS_DMKhoaPhongFindFirstOrThrowArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WS_DMKhoaPhongs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WS_DMKhoaPhongs
     * const wS_DMKhoaPhongs = await prisma.wS_DMKhoaPhong.findMany()
     * 
     * // Get first 10 WS_DMKhoaPhongs
     * const wS_DMKhoaPhongs = await prisma.wS_DMKhoaPhong.findMany({ take: 10 })
     * 
     * // Only select the `id_Khoaphong`
     * const wS_DMKhoaPhongWithId_KhoaphongOnly = await prisma.wS_DMKhoaPhong.findMany({ select: { id_Khoaphong: true } })
     * 
     */
    findMany<T extends WS_DMKhoaPhongFindManyArgs>(args?: SelectSubset<T, WS_DMKhoaPhongFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WS_DMKhoaPhong.
     * @param {WS_DMKhoaPhongCreateArgs} args - Arguments to create a WS_DMKhoaPhong.
     * @example
     * // Create one WS_DMKhoaPhong
     * const WS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.create({
     *   data: {
     *     // ... data to create a WS_DMKhoaPhong
     *   }
     * })
     * 
     */
    create<T extends WS_DMKhoaPhongCreateArgs>(args: SelectSubset<T, WS_DMKhoaPhongCreateArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WS_DMKhoaPhongs.
     * @param {WS_DMKhoaPhongCreateManyArgs} args - Arguments to create many WS_DMKhoaPhongs.
     * @example
     * // Create many WS_DMKhoaPhongs
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WS_DMKhoaPhongCreateManyArgs>(args?: SelectSubset<T, WS_DMKhoaPhongCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a WS_DMKhoaPhong.
     * @param {WS_DMKhoaPhongDeleteArgs} args - Arguments to delete one WS_DMKhoaPhong.
     * @example
     * // Delete one WS_DMKhoaPhong
     * const WS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.delete({
     *   where: {
     *     // ... filter to delete one WS_DMKhoaPhong
     *   }
     * })
     * 
     */
    delete<T extends WS_DMKhoaPhongDeleteArgs>(args: SelectSubset<T, WS_DMKhoaPhongDeleteArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WS_DMKhoaPhong.
     * @param {WS_DMKhoaPhongUpdateArgs} args - Arguments to update one WS_DMKhoaPhong.
     * @example
     * // Update one WS_DMKhoaPhong
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WS_DMKhoaPhongUpdateArgs>(args: SelectSubset<T, WS_DMKhoaPhongUpdateArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WS_DMKhoaPhongs.
     * @param {WS_DMKhoaPhongDeleteManyArgs} args - Arguments to filter WS_DMKhoaPhongs to delete.
     * @example
     * // Delete a few WS_DMKhoaPhongs
     * const { count } = await prisma.wS_DMKhoaPhong.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WS_DMKhoaPhongDeleteManyArgs>(args?: SelectSubset<T, WS_DMKhoaPhongDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WS_DMKhoaPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WS_DMKhoaPhongs
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WS_DMKhoaPhongUpdateManyArgs>(args: SelectSubset<T, WS_DMKhoaPhongUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WS_DMKhoaPhong.
     * @param {WS_DMKhoaPhongUpsertArgs} args - Arguments to update or create a WS_DMKhoaPhong.
     * @example
     * // Update or create a WS_DMKhoaPhong
     * const wS_DMKhoaPhong = await prisma.wS_DMKhoaPhong.upsert({
     *   create: {
     *     // ... data to create a WS_DMKhoaPhong
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WS_DMKhoaPhong we want to update
     *   }
     * })
     */
    upsert<T extends WS_DMKhoaPhongUpsertArgs>(args: SelectSubset<T, WS_DMKhoaPhongUpsertArgs<ExtArgs>>): Prisma__WS_DMKhoaPhongClient<$Result.GetResult<Prisma.$WS_DMKhoaPhongPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WS_DMKhoaPhongs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongCountArgs} args - Arguments to filter WS_DMKhoaPhongs to count.
     * @example
     * // Count the number of WS_DMKhoaPhongs
     * const count = await prisma.wS_DMKhoaPhong.count({
     *   where: {
     *     // ... the filter for the WS_DMKhoaPhongs we want to count
     *   }
     * })
    **/
    count<T extends WS_DMKhoaPhongCountArgs>(
      args?: Subset<T, WS_DMKhoaPhongCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WS_DMKhoaPhongCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WS_DMKhoaPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WS_DMKhoaPhongAggregateArgs>(args: Subset<T, WS_DMKhoaPhongAggregateArgs>): Prisma.PrismaPromise<GetWS_DMKhoaPhongAggregateType<T>>

    /**
     * Group by WS_DMKhoaPhong.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMKhoaPhongGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WS_DMKhoaPhongGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WS_DMKhoaPhongGroupByArgs['orderBy'] }
        : { orderBy?: WS_DMKhoaPhongGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WS_DMKhoaPhongGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWS_DMKhoaPhongGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WS_DMKhoaPhong model
   */
  readonly fields: WS_DMKhoaPhongFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WS_DMKhoaPhong.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WS_DMKhoaPhongClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WS_DMKhoaPhong model
   */ 
  interface WS_DMKhoaPhongFieldRefs {
    readonly id_Khoaphong: FieldRef<"WS_DMKhoaPhong", 'String'>
    readonly Ten: FieldRef<"WS_DMKhoaPhong", 'String'>
    readonly id_KPCha: FieldRef<"WS_DMKhoaPhong", 'String'>
    readonly ID_ChiNhanh: FieldRef<"WS_DMKhoaPhong", 'String'>
    readonly Ghichu: FieldRef<"WS_DMKhoaPhong", 'String'>
    readonly Sudung: FieldRef<"WS_DMKhoaPhong", 'Boolean'>
    readonly VanHanh: FieldRef<"WS_DMKhoaPhong", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * WS_DMKhoaPhong findUnique
   */
  export type WS_DMKhoaPhongFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMKhoaPhong to fetch.
     */
    where: WS_DMKhoaPhongWhereUniqueInput
  }

  /**
   * WS_DMKhoaPhong findUniqueOrThrow
   */
  export type WS_DMKhoaPhongFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMKhoaPhong to fetch.
     */
    where: WS_DMKhoaPhongWhereUniqueInput
  }

  /**
   * WS_DMKhoaPhong findFirst
   */
  export type WS_DMKhoaPhongFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMKhoaPhong to fetch.
     */
    where?: WS_DMKhoaPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMKhoaPhongs to fetch.
     */
    orderBy?: WS_DMKhoaPhongOrderByWithRelationInput | WS_DMKhoaPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMKhoaPhongs.
     */
    cursor?: WS_DMKhoaPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMKhoaPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMKhoaPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMKhoaPhongs.
     */
    distinct?: WS_DMKhoaPhongScalarFieldEnum | WS_DMKhoaPhongScalarFieldEnum[]
  }

  /**
   * WS_DMKhoaPhong findFirstOrThrow
   */
  export type WS_DMKhoaPhongFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMKhoaPhong to fetch.
     */
    where?: WS_DMKhoaPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMKhoaPhongs to fetch.
     */
    orderBy?: WS_DMKhoaPhongOrderByWithRelationInput | WS_DMKhoaPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMKhoaPhongs.
     */
    cursor?: WS_DMKhoaPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMKhoaPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMKhoaPhongs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMKhoaPhongs.
     */
    distinct?: WS_DMKhoaPhongScalarFieldEnum | WS_DMKhoaPhongScalarFieldEnum[]
  }

  /**
   * WS_DMKhoaPhong findMany
   */
  export type WS_DMKhoaPhongFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMKhoaPhongs to fetch.
     */
    where?: WS_DMKhoaPhongWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMKhoaPhongs to fetch.
     */
    orderBy?: WS_DMKhoaPhongOrderByWithRelationInput | WS_DMKhoaPhongOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WS_DMKhoaPhongs.
     */
    cursor?: WS_DMKhoaPhongWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMKhoaPhongs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMKhoaPhongs.
     */
    skip?: number
    distinct?: WS_DMKhoaPhongScalarFieldEnum | WS_DMKhoaPhongScalarFieldEnum[]
  }

  /**
   * WS_DMKhoaPhong create
   */
  export type WS_DMKhoaPhongCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * The data needed to create a WS_DMKhoaPhong.
     */
    data: XOR<WS_DMKhoaPhongCreateInput, WS_DMKhoaPhongUncheckedCreateInput>
  }

  /**
   * WS_DMKhoaPhong createMany
   */
  export type WS_DMKhoaPhongCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WS_DMKhoaPhongs.
     */
    data: WS_DMKhoaPhongCreateManyInput | WS_DMKhoaPhongCreateManyInput[]
  }

  /**
   * WS_DMKhoaPhong update
   */
  export type WS_DMKhoaPhongUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * The data needed to update a WS_DMKhoaPhong.
     */
    data: XOR<WS_DMKhoaPhongUpdateInput, WS_DMKhoaPhongUncheckedUpdateInput>
    /**
     * Choose, which WS_DMKhoaPhong to update.
     */
    where: WS_DMKhoaPhongWhereUniqueInput
  }

  /**
   * WS_DMKhoaPhong updateMany
   */
  export type WS_DMKhoaPhongUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WS_DMKhoaPhongs.
     */
    data: XOR<WS_DMKhoaPhongUpdateManyMutationInput, WS_DMKhoaPhongUncheckedUpdateManyInput>
    /**
     * Filter which WS_DMKhoaPhongs to update
     */
    where?: WS_DMKhoaPhongWhereInput
  }

  /**
   * WS_DMKhoaPhong upsert
   */
  export type WS_DMKhoaPhongUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * The filter to search for the WS_DMKhoaPhong to update in case it exists.
     */
    where: WS_DMKhoaPhongWhereUniqueInput
    /**
     * In case the WS_DMKhoaPhong found by the `where` argument doesn't exist, create a new WS_DMKhoaPhong with this data.
     */
    create: XOR<WS_DMKhoaPhongCreateInput, WS_DMKhoaPhongUncheckedCreateInput>
    /**
     * In case the WS_DMKhoaPhong was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WS_DMKhoaPhongUpdateInput, WS_DMKhoaPhongUncheckedUpdateInput>
  }

  /**
   * WS_DMKhoaPhong delete
   */
  export type WS_DMKhoaPhongDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
    /**
     * Filter which WS_DMKhoaPhong to delete.
     */
    where: WS_DMKhoaPhongWhereUniqueInput
  }

  /**
   * WS_DMKhoaPhong deleteMany
   */
  export type WS_DMKhoaPhongDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMKhoaPhongs to delete
     */
    where?: WS_DMKhoaPhongWhereInput
  }

  /**
   * WS_DMKhoaPhong without action
   */
  export type WS_DMKhoaPhongDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMKhoaPhong
     */
    select?: WS_DMKhoaPhongSelect<ExtArgs> | null
  }


  /**
   * Model WS_DMNhomTochuc
   */

  export type AggregateWS_DMNhomTochuc = {
    _count: WS_DMNhomTochucCountAggregateOutputType | null
    _min: WS_DMNhomTochucMinAggregateOutputType | null
    _max: WS_DMNhomTochucMaxAggregateOutputType | null
  }

  export type WS_DMNhomTochucMinAggregateOutputType = {
    id_DMNhomTochuc: string | null
    id_DMChinhanh: string | null
    Ten: string | null
    Ghichu: string | null
    Sudung: boolean | null
  }

  export type WS_DMNhomTochucMaxAggregateOutputType = {
    id_DMNhomTochuc: string | null
    id_DMChinhanh: string | null
    Ten: string | null
    Ghichu: string | null
    Sudung: boolean | null
  }

  export type WS_DMNhomTochucCountAggregateOutputType = {
    id_DMNhomTochuc: number
    id_DMChinhanh: number
    Ten: number
    Ghichu: number
    Sudung: number
    _all: number
  }


  export type WS_DMNhomTochucMinAggregateInputType = {
    id_DMNhomTochuc?: true
    id_DMChinhanh?: true
    Ten?: true
    Ghichu?: true
    Sudung?: true
  }

  export type WS_DMNhomTochucMaxAggregateInputType = {
    id_DMNhomTochuc?: true
    id_DMChinhanh?: true
    Ten?: true
    Ghichu?: true
    Sudung?: true
  }

  export type WS_DMNhomTochucCountAggregateInputType = {
    id_DMNhomTochuc?: true
    id_DMChinhanh?: true
    Ten?: true
    Ghichu?: true
    Sudung?: true
    _all?: true
  }

  export type WS_DMNhomTochucAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMNhomTochuc to aggregate.
     */
    where?: WS_DMNhomTochucWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMNhomTochucs to fetch.
     */
    orderBy?: WS_DMNhomTochucOrderByWithRelationInput | WS_DMNhomTochucOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WS_DMNhomTochucWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMNhomTochucs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMNhomTochucs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WS_DMNhomTochucs
    **/
    _count?: true | WS_DMNhomTochucCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WS_DMNhomTochucMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WS_DMNhomTochucMaxAggregateInputType
  }

  export type GetWS_DMNhomTochucAggregateType<T extends WS_DMNhomTochucAggregateArgs> = {
        [P in keyof T & keyof AggregateWS_DMNhomTochuc]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWS_DMNhomTochuc[P]>
      : GetScalarType<T[P], AggregateWS_DMNhomTochuc[P]>
  }




  export type WS_DMNhomTochucGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WS_DMNhomTochucWhereInput
    orderBy?: WS_DMNhomTochucOrderByWithAggregationInput | WS_DMNhomTochucOrderByWithAggregationInput[]
    by: WS_DMNhomTochucScalarFieldEnum[] | WS_DMNhomTochucScalarFieldEnum
    having?: WS_DMNhomTochucScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WS_DMNhomTochucCountAggregateInputType | true
    _min?: WS_DMNhomTochucMinAggregateInputType
    _max?: WS_DMNhomTochucMaxAggregateInputType
  }

  export type WS_DMNhomTochucGroupByOutputType = {
    id_DMNhomTochuc: string
    id_DMChinhanh: string
    Ten: string | null
    Ghichu: string | null
    Sudung: boolean | null
    _count: WS_DMNhomTochucCountAggregateOutputType | null
    _min: WS_DMNhomTochucMinAggregateOutputType | null
    _max: WS_DMNhomTochucMaxAggregateOutputType | null
  }

  type GetWS_DMNhomTochucGroupByPayload<T extends WS_DMNhomTochucGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WS_DMNhomTochucGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WS_DMNhomTochucGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WS_DMNhomTochucGroupByOutputType[P]>
            : GetScalarType<T[P], WS_DMNhomTochucGroupByOutputType[P]>
        }
      >
    >


  export type WS_DMNhomTochucSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_DMNhomTochuc?: boolean
    id_DMChinhanh?: boolean
    Ten?: boolean
    Ghichu?: boolean
    Sudung?: boolean
  }, ExtArgs["result"]["wS_DMNhomTochuc"]>


  export type WS_DMNhomTochucSelectScalar = {
    id_DMNhomTochuc?: boolean
    id_DMChinhanh?: boolean
    Ten?: boolean
    Ghichu?: boolean
    Sudung?: boolean
  }


  export type $WS_DMNhomTochucPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WS_DMNhomTochuc"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_DMNhomTochuc: string
      id_DMChinhanh: string
      Ten: string | null
      Ghichu: string | null
      Sudung: boolean | null
    }, ExtArgs["result"]["wS_DMNhomTochuc"]>
    composites: {}
  }

  type WS_DMNhomTochucGetPayload<S extends boolean | null | undefined | WS_DMNhomTochucDefaultArgs> = $Result.GetResult<Prisma.$WS_DMNhomTochucPayload, S>

  type WS_DMNhomTochucCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WS_DMNhomTochucFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WS_DMNhomTochucCountAggregateInputType | true
    }

  export interface WS_DMNhomTochucDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WS_DMNhomTochuc'], meta: { name: 'WS_DMNhomTochuc' } }
    /**
     * Find zero or one WS_DMNhomTochuc that matches the filter.
     * @param {WS_DMNhomTochucFindUniqueArgs} args - Arguments to find a WS_DMNhomTochuc
     * @example
     * // Get one WS_DMNhomTochuc
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WS_DMNhomTochucFindUniqueArgs>(args: SelectSubset<T, WS_DMNhomTochucFindUniqueArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WS_DMNhomTochuc that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WS_DMNhomTochucFindUniqueOrThrowArgs} args - Arguments to find a WS_DMNhomTochuc
     * @example
     * // Get one WS_DMNhomTochuc
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WS_DMNhomTochucFindUniqueOrThrowArgs>(args: SelectSubset<T, WS_DMNhomTochucFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WS_DMNhomTochuc that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucFindFirstArgs} args - Arguments to find a WS_DMNhomTochuc
     * @example
     * // Get one WS_DMNhomTochuc
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WS_DMNhomTochucFindFirstArgs>(args?: SelectSubset<T, WS_DMNhomTochucFindFirstArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WS_DMNhomTochuc that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucFindFirstOrThrowArgs} args - Arguments to find a WS_DMNhomTochuc
     * @example
     * // Get one WS_DMNhomTochuc
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WS_DMNhomTochucFindFirstOrThrowArgs>(args?: SelectSubset<T, WS_DMNhomTochucFindFirstOrThrowArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WS_DMNhomTochucs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WS_DMNhomTochucs
     * const wS_DMNhomTochucs = await prisma.wS_DMNhomTochuc.findMany()
     * 
     * // Get first 10 WS_DMNhomTochucs
     * const wS_DMNhomTochucs = await prisma.wS_DMNhomTochuc.findMany({ take: 10 })
     * 
     * // Only select the `id_DMNhomTochuc`
     * const wS_DMNhomTochucWithId_DMNhomTochucOnly = await prisma.wS_DMNhomTochuc.findMany({ select: { id_DMNhomTochuc: true } })
     * 
     */
    findMany<T extends WS_DMNhomTochucFindManyArgs>(args?: SelectSubset<T, WS_DMNhomTochucFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WS_DMNhomTochuc.
     * @param {WS_DMNhomTochucCreateArgs} args - Arguments to create a WS_DMNhomTochuc.
     * @example
     * // Create one WS_DMNhomTochuc
     * const WS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.create({
     *   data: {
     *     // ... data to create a WS_DMNhomTochuc
     *   }
     * })
     * 
     */
    create<T extends WS_DMNhomTochucCreateArgs>(args: SelectSubset<T, WS_DMNhomTochucCreateArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WS_DMNhomTochucs.
     * @param {WS_DMNhomTochucCreateManyArgs} args - Arguments to create many WS_DMNhomTochucs.
     * @example
     * // Create many WS_DMNhomTochucs
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WS_DMNhomTochucCreateManyArgs>(args?: SelectSubset<T, WS_DMNhomTochucCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a WS_DMNhomTochuc.
     * @param {WS_DMNhomTochucDeleteArgs} args - Arguments to delete one WS_DMNhomTochuc.
     * @example
     * // Delete one WS_DMNhomTochuc
     * const WS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.delete({
     *   where: {
     *     // ... filter to delete one WS_DMNhomTochuc
     *   }
     * })
     * 
     */
    delete<T extends WS_DMNhomTochucDeleteArgs>(args: SelectSubset<T, WS_DMNhomTochucDeleteArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WS_DMNhomTochuc.
     * @param {WS_DMNhomTochucUpdateArgs} args - Arguments to update one WS_DMNhomTochuc.
     * @example
     * // Update one WS_DMNhomTochuc
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WS_DMNhomTochucUpdateArgs>(args: SelectSubset<T, WS_DMNhomTochucUpdateArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WS_DMNhomTochucs.
     * @param {WS_DMNhomTochucDeleteManyArgs} args - Arguments to filter WS_DMNhomTochucs to delete.
     * @example
     * // Delete a few WS_DMNhomTochucs
     * const { count } = await prisma.wS_DMNhomTochuc.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WS_DMNhomTochucDeleteManyArgs>(args?: SelectSubset<T, WS_DMNhomTochucDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WS_DMNhomTochucs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WS_DMNhomTochucs
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WS_DMNhomTochucUpdateManyArgs>(args: SelectSubset<T, WS_DMNhomTochucUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WS_DMNhomTochuc.
     * @param {WS_DMNhomTochucUpsertArgs} args - Arguments to update or create a WS_DMNhomTochuc.
     * @example
     * // Update or create a WS_DMNhomTochuc
     * const wS_DMNhomTochuc = await prisma.wS_DMNhomTochuc.upsert({
     *   create: {
     *     // ... data to create a WS_DMNhomTochuc
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WS_DMNhomTochuc we want to update
     *   }
     * })
     */
    upsert<T extends WS_DMNhomTochucUpsertArgs>(args: SelectSubset<T, WS_DMNhomTochucUpsertArgs<ExtArgs>>): Prisma__WS_DMNhomTochucClient<$Result.GetResult<Prisma.$WS_DMNhomTochucPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WS_DMNhomTochucs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucCountArgs} args - Arguments to filter WS_DMNhomTochucs to count.
     * @example
     * // Count the number of WS_DMNhomTochucs
     * const count = await prisma.wS_DMNhomTochuc.count({
     *   where: {
     *     // ... the filter for the WS_DMNhomTochucs we want to count
     *   }
     * })
    **/
    count<T extends WS_DMNhomTochucCountArgs>(
      args?: Subset<T, WS_DMNhomTochucCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WS_DMNhomTochucCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WS_DMNhomTochuc.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WS_DMNhomTochucAggregateArgs>(args: Subset<T, WS_DMNhomTochucAggregateArgs>): Prisma.PrismaPromise<GetWS_DMNhomTochucAggregateType<T>>

    /**
     * Group by WS_DMNhomTochuc.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_DMNhomTochucGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WS_DMNhomTochucGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WS_DMNhomTochucGroupByArgs['orderBy'] }
        : { orderBy?: WS_DMNhomTochucGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WS_DMNhomTochucGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWS_DMNhomTochucGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WS_DMNhomTochuc model
   */
  readonly fields: WS_DMNhomTochucFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WS_DMNhomTochuc.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WS_DMNhomTochucClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WS_DMNhomTochuc model
   */ 
  interface WS_DMNhomTochucFieldRefs {
    readonly id_DMNhomTochuc: FieldRef<"WS_DMNhomTochuc", 'String'>
    readonly id_DMChinhanh: FieldRef<"WS_DMNhomTochuc", 'String'>
    readonly Ten: FieldRef<"WS_DMNhomTochuc", 'String'>
    readonly Ghichu: FieldRef<"WS_DMNhomTochuc", 'String'>
    readonly Sudung: FieldRef<"WS_DMNhomTochuc", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * WS_DMNhomTochuc findUnique
   */
  export type WS_DMNhomTochucFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMNhomTochuc to fetch.
     */
    where: WS_DMNhomTochucWhereUniqueInput
  }

  /**
   * WS_DMNhomTochuc findUniqueOrThrow
   */
  export type WS_DMNhomTochucFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMNhomTochuc to fetch.
     */
    where: WS_DMNhomTochucWhereUniqueInput
  }

  /**
   * WS_DMNhomTochuc findFirst
   */
  export type WS_DMNhomTochucFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMNhomTochuc to fetch.
     */
    where?: WS_DMNhomTochucWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMNhomTochucs to fetch.
     */
    orderBy?: WS_DMNhomTochucOrderByWithRelationInput | WS_DMNhomTochucOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMNhomTochucs.
     */
    cursor?: WS_DMNhomTochucWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMNhomTochucs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMNhomTochucs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMNhomTochucs.
     */
    distinct?: WS_DMNhomTochucScalarFieldEnum | WS_DMNhomTochucScalarFieldEnum[]
  }

  /**
   * WS_DMNhomTochuc findFirstOrThrow
   */
  export type WS_DMNhomTochucFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMNhomTochuc to fetch.
     */
    where?: WS_DMNhomTochucWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMNhomTochucs to fetch.
     */
    orderBy?: WS_DMNhomTochucOrderByWithRelationInput | WS_DMNhomTochucOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_DMNhomTochucs.
     */
    cursor?: WS_DMNhomTochucWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMNhomTochucs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMNhomTochucs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_DMNhomTochucs.
     */
    distinct?: WS_DMNhomTochucScalarFieldEnum | WS_DMNhomTochucScalarFieldEnum[]
  }

  /**
   * WS_DMNhomTochuc findMany
   */
  export type WS_DMNhomTochucFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * Filter, which WS_DMNhomTochucs to fetch.
     */
    where?: WS_DMNhomTochucWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_DMNhomTochucs to fetch.
     */
    orderBy?: WS_DMNhomTochucOrderByWithRelationInput | WS_DMNhomTochucOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WS_DMNhomTochucs.
     */
    cursor?: WS_DMNhomTochucWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_DMNhomTochucs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_DMNhomTochucs.
     */
    skip?: number
    distinct?: WS_DMNhomTochucScalarFieldEnum | WS_DMNhomTochucScalarFieldEnum[]
  }

  /**
   * WS_DMNhomTochuc create
   */
  export type WS_DMNhomTochucCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * The data needed to create a WS_DMNhomTochuc.
     */
    data: XOR<WS_DMNhomTochucCreateInput, WS_DMNhomTochucUncheckedCreateInput>
  }

  /**
   * WS_DMNhomTochuc createMany
   */
  export type WS_DMNhomTochucCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WS_DMNhomTochucs.
     */
    data: WS_DMNhomTochucCreateManyInput | WS_DMNhomTochucCreateManyInput[]
  }

  /**
   * WS_DMNhomTochuc update
   */
  export type WS_DMNhomTochucUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * The data needed to update a WS_DMNhomTochuc.
     */
    data: XOR<WS_DMNhomTochucUpdateInput, WS_DMNhomTochucUncheckedUpdateInput>
    /**
     * Choose, which WS_DMNhomTochuc to update.
     */
    where: WS_DMNhomTochucWhereUniqueInput
  }

  /**
   * WS_DMNhomTochuc updateMany
   */
  export type WS_DMNhomTochucUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WS_DMNhomTochucs.
     */
    data: XOR<WS_DMNhomTochucUpdateManyMutationInput, WS_DMNhomTochucUncheckedUpdateManyInput>
    /**
     * Filter which WS_DMNhomTochucs to update
     */
    where?: WS_DMNhomTochucWhereInput
  }

  /**
   * WS_DMNhomTochuc upsert
   */
  export type WS_DMNhomTochucUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * The filter to search for the WS_DMNhomTochuc to update in case it exists.
     */
    where: WS_DMNhomTochucWhereUniqueInput
    /**
     * In case the WS_DMNhomTochuc found by the `where` argument doesn't exist, create a new WS_DMNhomTochuc with this data.
     */
    create: XOR<WS_DMNhomTochucCreateInput, WS_DMNhomTochucUncheckedCreateInput>
    /**
     * In case the WS_DMNhomTochuc was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WS_DMNhomTochucUpdateInput, WS_DMNhomTochucUncheckedUpdateInput>
  }

  /**
   * WS_DMNhomTochuc delete
   */
  export type WS_DMNhomTochucDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
    /**
     * Filter which WS_DMNhomTochuc to delete.
     */
    where: WS_DMNhomTochucWhereUniqueInput
  }

  /**
   * WS_DMNhomTochuc deleteMany
   */
  export type WS_DMNhomTochucDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_DMNhomTochucs to delete
     */
    where?: WS_DMNhomTochucWhereInput
  }

  /**
   * WS_DMNhomTochuc without action
   */
  export type WS_DMNhomTochucDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_DMNhomTochuc
     */
    select?: WS_DMNhomTochucSelect<ExtArgs> | null
  }


  /**
   * Model WS_Log
   */

  export type AggregateWS_Log = {
    _count: WS_LogCountAggregateOutputType | null
    _avg: WS_LogAvgAggregateOutputType | null
    _sum: WS_LogSumAggregateOutputType | null
    _min: WS_LogMinAggregateOutputType | null
    _max: WS_LogMaxAggregateOutputType | null
  }

  export type WS_LogAvgAggregateOutputType = {
    id_Log: number | null
    id_TaiKhoan: number | null
  }

  export type WS_LogSumAggregateOutputType = {
    id_Log: number | null
    id_TaiKhoan: number | null
  }

  export type WS_LogMinAggregateOutputType = {
    id_Log: number | null
    id_TaiKhoan: number | null
    Taikhoan: string | null
    Ngaygio: Date | null
    ResponseCode: string | null
    UserHostName: string | null
    UserHostAddress: string | null
    QueryString: string | null
    HttpMethod: string | null
    ClientBrowser: string | null
  }

  export type WS_LogMaxAggregateOutputType = {
    id_Log: number | null
    id_TaiKhoan: number | null
    Taikhoan: string | null
    Ngaygio: Date | null
    ResponseCode: string | null
    UserHostName: string | null
    UserHostAddress: string | null
    QueryString: string | null
    HttpMethod: string | null
    ClientBrowser: string | null
  }

  export type WS_LogCountAggregateOutputType = {
    id_Log: number
    id_TaiKhoan: number
    Taikhoan: number
    Ngaygio: number
    ResponseCode: number
    UserHostName: number
    UserHostAddress: number
    QueryString: number
    HttpMethod: number
    ClientBrowser: number
    _all: number
  }


  export type WS_LogAvgAggregateInputType = {
    id_Log?: true
    id_TaiKhoan?: true
  }

  export type WS_LogSumAggregateInputType = {
    id_Log?: true
    id_TaiKhoan?: true
  }

  export type WS_LogMinAggregateInputType = {
    id_Log?: true
    id_TaiKhoan?: true
    Taikhoan?: true
    Ngaygio?: true
    ResponseCode?: true
    UserHostName?: true
    UserHostAddress?: true
    QueryString?: true
    HttpMethod?: true
    ClientBrowser?: true
  }

  export type WS_LogMaxAggregateInputType = {
    id_Log?: true
    id_TaiKhoan?: true
    Taikhoan?: true
    Ngaygio?: true
    ResponseCode?: true
    UserHostName?: true
    UserHostAddress?: true
    QueryString?: true
    HttpMethod?: true
    ClientBrowser?: true
  }

  export type WS_LogCountAggregateInputType = {
    id_Log?: true
    id_TaiKhoan?: true
    Taikhoan?: true
    Ngaygio?: true
    ResponseCode?: true
    UserHostName?: true
    UserHostAddress?: true
    QueryString?: true
    HttpMethod?: true
    ClientBrowser?: true
    _all?: true
  }

  export type WS_LogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_Log to aggregate.
     */
    where?: WS_LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Logs to fetch.
     */
    orderBy?: WS_LogOrderByWithRelationInput | WS_LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WS_LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WS_Logs
    **/
    _count?: true | WS_LogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WS_LogAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WS_LogSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WS_LogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WS_LogMaxAggregateInputType
  }

  export type GetWS_LogAggregateType<T extends WS_LogAggregateArgs> = {
        [P in keyof T & keyof AggregateWS_Log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWS_Log[P]>
      : GetScalarType<T[P], AggregateWS_Log[P]>
  }




  export type WS_LogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WS_LogWhereInput
    orderBy?: WS_LogOrderByWithAggregationInput | WS_LogOrderByWithAggregationInput[]
    by: WS_LogScalarFieldEnum[] | WS_LogScalarFieldEnum
    having?: WS_LogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WS_LogCountAggregateInputType | true
    _avg?: WS_LogAvgAggregateInputType
    _sum?: WS_LogSumAggregateInputType
    _min?: WS_LogMinAggregateInputType
    _max?: WS_LogMaxAggregateInputType
  }

  export type WS_LogGroupByOutputType = {
    id_Log: number
    id_TaiKhoan: number | null
    Taikhoan: string | null
    Ngaygio: Date | null
    ResponseCode: string | null
    UserHostName: string | null
    UserHostAddress: string | null
    QueryString: string | null
    HttpMethod: string | null
    ClientBrowser: string | null
    _count: WS_LogCountAggregateOutputType | null
    _avg: WS_LogAvgAggregateOutputType | null
    _sum: WS_LogSumAggregateOutputType | null
    _min: WS_LogMinAggregateOutputType | null
    _max: WS_LogMaxAggregateOutputType | null
  }

  type GetWS_LogGroupByPayload<T extends WS_LogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WS_LogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WS_LogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WS_LogGroupByOutputType[P]>
            : GetScalarType<T[P], WS_LogGroupByOutputType[P]>
        }
      >
    >


  export type WS_LogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_Log?: boolean
    id_TaiKhoan?: boolean
    Taikhoan?: boolean
    Ngaygio?: boolean
    ResponseCode?: boolean
    UserHostName?: boolean
    UserHostAddress?: boolean
    QueryString?: boolean
    HttpMethod?: boolean
    ClientBrowser?: boolean
  }, ExtArgs["result"]["wS_Log"]>


  export type WS_LogSelectScalar = {
    id_Log?: boolean
    id_TaiKhoan?: boolean
    Taikhoan?: boolean
    Ngaygio?: boolean
    ResponseCode?: boolean
    UserHostName?: boolean
    UserHostAddress?: boolean
    QueryString?: boolean
    HttpMethod?: boolean
    ClientBrowser?: boolean
  }


  export type $WS_LogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WS_Log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_Log: number
      id_TaiKhoan: number | null
      Taikhoan: string | null
      Ngaygio: Date | null
      ResponseCode: string | null
      UserHostName: string | null
      UserHostAddress: string | null
      QueryString: string | null
      HttpMethod: string | null
      ClientBrowser: string | null
    }, ExtArgs["result"]["wS_Log"]>
    composites: {}
  }

  type WS_LogGetPayload<S extends boolean | null | undefined | WS_LogDefaultArgs> = $Result.GetResult<Prisma.$WS_LogPayload, S>

  type WS_LogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WS_LogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WS_LogCountAggregateInputType | true
    }

  export interface WS_LogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WS_Log'], meta: { name: 'WS_Log' } }
    /**
     * Find zero or one WS_Log that matches the filter.
     * @param {WS_LogFindUniqueArgs} args - Arguments to find a WS_Log
     * @example
     * // Get one WS_Log
     * const wS_Log = await prisma.wS_Log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WS_LogFindUniqueArgs>(args: SelectSubset<T, WS_LogFindUniqueArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WS_Log that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WS_LogFindUniqueOrThrowArgs} args - Arguments to find a WS_Log
     * @example
     * // Get one WS_Log
     * const wS_Log = await prisma.wS_Log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WS_LogFindUniqueOrThrowArgs>(args: SelectSubset<T, WS_LogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WS_Log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogFindFirstArgs} args - Arguments to find a WS_Log
     * @example
     * // Get one WS_Log
     * const wS_Log = await prisma.wS_Log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WS_LogFindFirstArgs>(args?: SelectSubset<T, WS_LogFindFirstArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WS_Log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogFindFirstOrThrowArgs} args - Arguments to find a WS_Log
     * @example
     * // Get one WS_Log
     * const wS_Log = await prisma.wS_Log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WS_LogFindFirstOrThrowArgs>(args?: SelectSubset<T, WS_LogFindFirstOrThrowArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WS_Logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WS_Logs
     * const wS_Logs = await prisma.wS_Log.findMany()
     * 
     * // Get first 10 WS_Logs
     * const wS_Logs = await prisma.wS_Log.findMany({ take: 10 })
     * 
     * // Only select the `id_Log`
     * const wS_LogWithId_LogOnly = await prisma.wS_Log.findMany({ select: { id_Log: true } })
     * 
     */
    findMany<T extends WS_LogFindManyArgs>(args?: SelectSubset<T, WS_LogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WS_Log.
     * @param {WS_LogCreateArgs} args - Arguments to create a WS_Log.
     * @example
     * // Create one WS_Log
     * const WS_Log = await prisma.wS_Log.create({
     *   data: {
     *     // ... data to create a WS_Log
     *   }
     * })
     * 
     */
    create<T extends WS_LogCreateArgs>(args: SelectSubset<T, WS_LogCreateArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WS_Logs.
     * @param {WS_LogCreateManyArgs} args - Arguments to create many WS_Logs.
     * @example
     * // Create many WS_Logs
     * const wS_Log = await prisma.wS_Log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WS_LogCreateManyArgs>(args?: SelectSubset<T, WS_LogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a WS_Log.
     * @param {WS_LogDeleteArgs} args - Arguments to delete one WS_Log.
     * @example
     * // Delete one WS_Log
     * const WS_Log = await prisma.wS_Log.delete({
     *   where: {
     *     // ... filter to delete one WS_Log
     *   }
     * })
     * 
     */
    delete<T extends WS_LogDeleteArgs>(args: SelectSubset<T, WS_LogDeleteArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WS_Log.
     * @param {WS_LogUpdateArgs} args - Arguments to update one WS_Log.
     * @example
     * // Update one WS_Log
     * const wS_Log = await prisma.wS_Log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WS_LogUpdateArgs>(args: SelectSubset<T, WS_LogUpdateArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WS_Logs.
     * @param {WS_LogDeleteManyArgs} args - Arguments to filter WS_Logs to delete.
     * @example
     * // Delete a few WS_Logs
     * const { count } = await prisma.wS_Log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WS_LogDeleteManyArgs>(args?: SelectSubset<T, WS_LogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WS_Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WS_Logs
     * const wS_Log = await prisma.wS_Log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WS_LogUpdateManyArgs>(args: SelectSubset<T, WS_LogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WS_Log.
     * @param {WS_LogUpsertArgs} args - Arguments to update or create a WS_Log.
     * @example
     * // Update or create a WS_Log
     * const wS_Log = await prisma.wS_Log.upsert({
     *   create: {
     *     // ... data to create a WS_Log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WS_Log we want to update
     *   }
     * })
     */
    upsert<T extends WS_LogUpsertArgs>(args: SelectSubset<T, WS_LogUpsertArgs<ExtArgs>>): Prisma__WS_LogClient<$Result.GetResult<Prisma.$WS_LogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WS_Logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogCountArgs} args - Arguments to filter WS_Logs to count.
     * @example
     * // Count the number of WS_Logs
     * const count = await prisma.wS_Log.count({
     *   where: {
     *     // ... the filter for the WS_Logs we want to count
     *   }
     * })
    **/
    count<T extends WS_LogCountArgs>(
      args?: Subset<T, WS_LogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WS_LogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WS_Log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WS_LogAggregateArgs>(args: Subset<T, WS_LogAggregateArgs>): Prisma.PrismaPromise<GetWS_LogAggregateType<T>>

    /**
     * Group by WS_Log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_LogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WS_LogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WS_LogGroupByArgs['orderBy'] }
        : { orderBy?: WS_LogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WS_LogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWS_LogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WS_Log model
   */
  readonly fields: WS_LogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WS_Log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WS_LogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WS_Log model
   */ 
  interface WS_LogFieldRefs {
    readonly id_Log: FieldRef<"WS_Log", 'Int'>
    readonly id_TaiKhoan: FieldRef<"WS_Log", 'Int'>
    readonly Taikhoan: FieldRef<"WS_Log", 'String'>
    readonly Ngaygio: FieldRef<"WS_Log", 'DateTime'>
    readonly ResponseCode: FieldRef<"WS_Log", 'String'>
    readonly UserHostName: FieldRef<"WS_Log", 'String'>
    readonly UserHostAddress: FieldRef<"WS_Log", 'String'>
    readonly QueryString: FieldRef<"WS_Log", 'String'>
    readonly HttpMethod: FieldRef<"WS_Log", 'String'>
    readonly ClientBrowser: FieldRef<"WS_Log", 'String'>
  }
    

  // Custom InputTypes
  /**
   * WS_Log findUnique
   */
  export type WS_LogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * Filter, which WS_Log to fetch.
     */
    where: WS_LogWhereUniqueInput
  }

  /**
   * WS_Log findUniqueOrThrow
   */
  export type WS_LogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * Filter, which WS_Log to fetch.
     */
    where: WS_LogWhereUniqueInput
  }

  /**
   * WS_Log findFirst
   */
  export type WS_LogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * Filter, which WS_Log to fetch.
     */
    where?: WS_LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Logs to fetch.
     */
    orderBy?: WS_LogOrderByWithRelationInput | WS_LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_Logs.
     */
    cursor?: WS_LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_Logs.
     */
    distinct?: WS_LogScalarFieldEnum | WS_LogScalarFieldEnum[]
  }

  /**
   * WS_Log findFirstOrThrow
   */
  export type WS_LogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * Filter, which WS_Log to fetch.
     */
    where?: WS_LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Logs to fetch.
     */
    orderBy?: WS_LogOrderByWithRelationInput | WS_LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_Logs.
     */
    cursor?: WS_LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_Logs.
     */
    distinct?: WS_LogScalarFieldEnum | WS_LogScalarFieldEnum[]
  }

  /**
   * WS_Log findMany
   */
  export type WS_LogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * Filter, which WS_Logs to fetch.
     */
    where?: WS_LogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Logs to fetch.
     */
    orderBy?: WS_LogOrderByWithRelationInput | WS_LogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WS_Logs.
     */
    cursor?: WS_LogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Logs.
     */
    skip?: number
    distinct?: WS_LogScalarFieldEnum | WS_LogScalarFieldEnum[]
  }

  /**
   * WS_Log create
   */
  export type WS_LogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * The data needed to create a WS_Log.
     */
    data?: XOR<WS_LogCreateInput, WS_LogUncheckedCreateInput>
  }

  /**
   * WS_Log createMany
   */
  export type WS_LogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WS_Logs.
     */
    data: WS_LogCreateManyInput | WS_LogCreateManyInput[]
  }

  /**
   * WS_Log update
   */
  export type WS_LogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * The data needed to update a WS_Log.
     */
    data: XOR<WS_LogUpdateInput, WS_LogUncheckedUpdateInput>
    /**
     * Choose, which WS_Log to update.
     */
    where: WS_LogWhereUniqueInput
  }

  /**
   * WS_Log updateMany
   */
  export type WS_LogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WS_Logs.
     */
    data: XOR<WS_LogUpdateManyMutationInput, WS_LogUncheckedUpdateManyInput>
    /**
     * Filter which WS_Logs to update
     */
    where?: WS_LogWhereInput
  }

  /**
   * WS_Log upsert
   */
  export type WS_LogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * The filter to search for the WS_Log to update in case it exists.
     */
    where: WS_LogWhereUniqueInput
    /**
     * In case the WS_Log found by the `where` argument doesn't exist, create a new WS_Log with this data.
     */
    create: XOR<WS_LogCreateInput, WS_LogUncheckedCreateInput>
    /**
     * In case the WS_Log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WS_LogUpdateInput, WS_LogUncheckedUpdateInput>
  }

  /**
   * WS_Log delete
   */
  export type WS_LogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
    /**
     * Filter which WS_Log to delete.
     */
    where: WS_LogWhereUniqueInput
  }

  /**
   * WS_Log deleteMany
   */
  export type WS_LogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_Logs to delete
     */
    where?: WS_LogWhereInput
  }

  /**
   * WS_Log without action
   */
  export type WS_LogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Log
     */
    select?: WS_LogSelect<ExtArgs> | null
  }


  /**
   * Model WS_Taikhoan
   */

  export type AggregateWS_Taikhoan = {
    _count: WS_TaikhoanCountAggregateOutputType | null
    _avg: WS_TaikhoanAvgAggregateOutputType | null
    _sum: WS_TaikhoanSumAggregateOutputType | null
    _min: WS_TaikhoanMinAggregateOutputType | null
    _max: WS_TaikhoanMaxAggregateOutputType | null
  }

  export type WS_TaikhoanAvgAggregateOutputType = {
    id_TaiKhoan: number | null
  }

  export type WS_TaikhoanSumAggregateOutputType = {
    id_TaiKhoan: number | null
  }

  export type WS_TaikhoanMinAggregateOutputType = {
    id_TaiKhoan: number | null
    Taikhoan: string | null
    Matkhau: string | null
    ID_ChiNhanh: string | null
    NgaygioTao: Date | null
    NgaygioHetHan: Date | null
    SuDung: boolean | null
    GhiChu: string | null
  }

  export type WS_TaikhoanMaxAggregateOutputType = {
    id_TaiKhoan: number | null
    Taikhoan: string | null
    Matkhau: string | null
    ID_ChiNhanh: string | null
    NgaygioTao: Date | null
    NgaygioHetHan: Date | null
    SuDung: boolean | null
    GhiChu: string | null
  }

  export type WS_TaikhoanCountAggregateOutputType = {
    id_TaiKhoan: number
    Taikhoan: number
    Matkhau: number
    ID_ChiNhanh: number
    NgaygioTao: number
    NgaygioHetHan: number
    SuDung: number
    GhiChu: number
    _all: number
  }


  export type WS_TaikhoanAvgAggregateInputType = {
    id_TaiKhoan?: true
  }

  export type WS_TaikhoanSumAggregateInputType = {
    id_TaiKhoan?: true
  }

  export type WS_TaikhoanMinAggregateInputType = {
    id_TaiKhoan?: true
    Taikhoan?: true
    Matkhau?: true
    ID_ChiNhanh?: true
    NgaygioTao?: true
    NgaygioHetHan?: true
    SuDung?: true
    GhiChu?: true
  }

  export type WS_TaikhoanMaxAggregateInputType = {
    id_TaiKhoan?: true
    Taikhoan?: true
    Matkhau?: true
    ID_ChiNhanh?: true
    NgaygioTao?: true
    NgaygioHetHan?: true
    SuDung?: true
    GhiChu?: true
  }

  export type WS_TaikhoanCountAggregateInputType = {
    id_TaiKhoan?: true
    Taikhoan?: true
    Matkhau?: true
    ID_ChiNhanh?: true
    NgaygioTao?: true
    NgaygioHetHan?: true
    SuDung?: true
    GhiChu?: true
    _all?: true
  }

  export type WS_TaikhoanAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_Taikhoan to aggregate.
     */
    where?: WS_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Taikhoans to fetch.
     */
    orderBy?: WS_TaikhoanOrderByWithRelationInput | WS_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WS_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Taikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned WS_Taikhoans
    **/
    _count?: true | WS_TaikhoanCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: WS_TaikhoanAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: WS_TaikhoanSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WS_TaikhoanMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WS_TaikhoanMaxAggregateInputType
  }

  export type GetWS_TaikhoanAggregateType<T extends WS_TaikhoanAggregateArgs> = {
        [P in keyof T & keyof AggregateWS_Taikhoan]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWS_Taikhoan[P]>
      : GetScalarType<T[P], AggregateWS_Taikhoan[P]>
  }




  export type WS_TaikhoanGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WS_TaikhoanWhereInput
    orderBy?: WS_TaikhoanOrderByWithAggregationInput | WS_TaikhoanOrderByWithAggregationInput[]
    by: WS_TaikhoanScalarFieldEnum[] | WS_TaikhoanScalarFieldEnum
    having?: WS_TaikhoanScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WS_TaikhoanCountAggregateInputType | true
    _avg?: WS_TaikhoanAvgAggregateInputType
    _sum?: WS_TaikhoanSumAggregateInputType
    _min?: WS_TaikhoanMinAggregateInputType
    _max?: WS_TaikhoanMaxAggregateInputType
  }

  export type WS_TaikhoanGroupByOutputType = {
    id_TaiKhoan: number
    Taikhoan: string | null
    Matkhau: string | null
    ID_ChiNhanh: string | null
    NgaygioTao: Date | null
    NgaygioHetHan: Date | null
    SuDung: boolean | null
    GhiChu: string | null
    _count: WS_TaikhoanCountAggregateOutputType | null
    _avg: WS_TaikhoanAvgAggregateOutputType | null
    _sum: WS_TaikhoanSumAggregateOutputType | null
    _min: WS_TaikhoanMinAggregateOutputType | null
    _max: WS_TaikhoanMaxAggregateOutputType | null
  }

  type GetWS_TaikhoanGroupByPayload<T extends WS_TaikhoanGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WS_TaikhoanGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WS_TaikhoanGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WS_TaikhoanGroupByOutputType[P]>
            : GetScalarType<T[P], WS_TaikhoanGroupByOutputType[P]>
        }
      >
    >


  export type WS_TaikhoanSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_TaiKhoan?: boolean
    Taikhoan?: boolean
    Matkhau?: boolean
    ID_ChiNhanh?: boolean
    NgaygioTao?: boolean
    NgaygioHetHan?: boolean
    SuDung?: boolean
    GhiChu?: boolean
  }, ExtArgs["result"]["wS_Taikhoan"]>


  export type WS_TaikhoanSelectScalar = {
    id_TaiKhoan?: boolean
    Taikhoan?: boolean
    Matkhau?: boolean
    ID_ChiNhanh?: boolean
    NgaygioTao?: boolean
    NgaygioHetHan?: boolean
    SuDung?: boolean
    GhiChu?: boolean
  }


  export type $WS_TaikhoanPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "WS_Taikhoan"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id_TaiKhoan: number
      Taikhoan: string | null
      Matkhau: string | null
      ID_ChiNhanh: string | null
      NgaygioTao: Date | null
      NgaygioHetHan: Date | null
      SuDung: boolean | null
      GhiChu: string | null
    }, ExtArgs["result"]["wS_Taikhoan"]>
    composites: {}
  }

  type WS_TaikhoanGetPayload<S extends boolean | null | undefined | WS_TaikhoanDefaultArgs> = $Result.GetResult<Prisma.$WS_TaikhoanPayload, S>

  type WS_TaikhoanCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WS_TaikhoanFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WS_TaikhoanCountAggregateInputType | true
    }

  export interface WS_TaikhoanDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WS_Taikhoan'], meta: { name: 'WS_Taikhoan' } }
    /**
     * Find zero or one WS_Taikhoan that matches the filter.
     * @param {WS_TaikhoanFindUniqueArgs} args - Arguments to find a WS_Taikhoan
     * @example
     * // Get one WS_Taikhoan
     * const wS_Taikhoan = await prisma.wS_Taikhoan.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WS_TaikhoanFindUniqueArgs>(args: SelectSubset<T, WS_TaikhoanFindUniqueArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one WS_Taikhoan that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WS_TaikhoanFindUniqueOrThrowArgs} args - Arguments to find a WS_Taikhoan
     * @example
     * // Get one WS_Taikhoan
     * const wS_Taikhoan = await prisma.wS_Taikhoan.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WS_TaikhoanFindUniqueOrThrowArgs>(args: SelectSubset<T, WS_TaikhoanFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first WS_Taikhoan that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanFindFirstArgs} args - Arguments to find a WS_Taikhoan
     * @example
     * // Get one WS_Taikhoan
     * const wS_Taikhoan = await prisma.wS_Taikhoan.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WS_TaikhoanFindFirstArgs>(args?: SelectSubset<T, WS_TaikhoanFindFirstArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first WS_Taikhoan that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanFindFirstOrThrowArgs} args - Arguments to find a WS_Taikhoan
     * @example
     * // Get one WS_Taikhoan
     * const wS_Taikhoan = await prisma.wS_Taikhoan.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WS_TaikhoanFindFirstOrThrowArgs>(args?: SelectSubset<T, WS_TaikhoanFindFirstOrThrowArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more WS_Taikhoans that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all WS_Taikhoans
     * const wS_Taikhoans = await prisma.wS_Taikhoan.findMany()
     * 
     * // Get first 10 WS_Taikhoans
     * const wS_Taikhoans = await prisma.wS_Taikhoan.findMany({ take: 10 })
     * 
     * // Only select the `id_TaiKhoan`
     * const wS_TaikhoanWithId_TaiKhoanOnly = await prisma.wS_Taikhoan.findMany({ select: { id_TaiKhoan: true } })
     * 
     */
    findMany<T extends WS_TaikhoanFindManyArgs>(args?: SelectSubset<T, WS_TaikhoanFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a WS_Taikhoan.
     * @param {WS_TaikhoanCreateArgs} args - Arguments to create a WS_Taikhoan.
     * @example
     * // Create one WS_Taikhoan
     * const WS_Taikhoan = await prisma.wS_Taikhoan.create({
     *   data: {
     *     // ... data to create a WS_Taikhoan
     *   }
     * })
     * 
     */
    create<T extends WS_TaikhoanCreateArgs>(args: SelectSubset<T, WS_TaikhoanCreateArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many WS_Taikhoans.
     * @param {WS_TaikhoanCreateManyArgs} args - Arguments to create many WS_Taikhoans.
     * @example
     * // Create many WS_Taikhoans
     * const wS_Taikhoan = await prisma.wS_Taikhoan.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WS_TaikhoanCreateManyArgs>(args?: SelectSubset<T, WS_TaikhoanCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a WS_Taikhoan.
     * @param {WS_TaikhoanDeleteArgs} args - Arguments to delete one WS_Taikhoan.
     * @example
     * // Delete one WS_Taikhoan
     * const WS_Taikhoan = await prisma.wS_Taikhoan.delete({
     *   where: {
     *     // ... filter to delete one WS_Taikhoan
     *   }
     * })
     * 
     */
    delete<T extends WS_TaikhoanDeleteArgs>(args: SelectSubset<T, WS_TaikhoanDeleteArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one WS_Taikhoan.
     * @param {WS_TaikhoanUpdateArgs} args - Arguments to update one WS_Taikhoan.
     * @example
     * // Update one WS_Taikhoan
     * const wS_Taikhoan = await prisma.wS_Taikhoan.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WS_TaikhoanUpdateArgs>(args: SelectSubset<T, WS_TaikhoanUpdateArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more WS_Taikhoans.
     * @param {WS_TaikhoanDeleteManyArgs} args - Arguments to filter WS_Taikhoans to delete.
     * @example
     * // Delete a few WS_Taikhoans
     * const { count } = await prisma.wS_Taikhoan.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WS_TaikhoanDeleteManyArgs>(args?: SelectSubset<T, WS_TaikhoanDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more WS_Taikhoans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many WS_Taikhoans
     * const wS_Taikhoan = await prisma.wS_Taikhoan.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WS_TaikhoanUpdateManyArgs>(args: SelectSubset<T, WS_TaikhoanUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one WS_Taikhoan.
     * @param {WS_TaikhoanUpsertArgs} args - Arguments to update or create a WS_Taikhoan.
     * @example
     * // Update or create a WS_Taikhoan
     * const wS_Taikhoan = await prisma.wS_Taikhoan.upsert({
     *   create: {
     *     // ... data to create a WS_Taikhoan
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the WS_Taikhoan we want to update
     *   }
     * })
     */
    upsert<T extends WS_TaikhoanUpsertArgs>(args: SelectSubset<T, WS_TaikhoanUpsertArgs<ExtArgs>>): Prisma__WS_TaikhoanClient<$Result.GetResult<Prisma.$WS_TaikhoanPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of WS_Taikhoans.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanCountArgs} args - Arguments to filter WS_Taikhoans to count.
     * @example
     * // Count the number of WS_Taikhoans
     * const count = await prisma.wS_Taikhoan.count({
     *   where: {
     *     // ... the filter for the WS_Taikhoans we want to count
     *   }
     * })
    **/
    count<T extends WS_TaikhoanCountArgs>(
      args?: Subset<T, WS_TaikhoanCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WS_TaikhoanCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a WS_Taikhoan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WS_TaikhoanAggregateArgs>(args: Subset<T, WS_TaikhoanAggregateArgs>): Prisma.PrismaPromise<GetWS_TaikhoanAggregateType<T>>

    /**
     * Group by WS_Taikhoan.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WS_TaikhoanGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WS_TaikhoanGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WS_TaikhoanGroupByArgs['orderBy'] }
        : { orderBy?: WS_TaikhoanGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WS_TaikhoanGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWS_TaikhoanGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the WS_Taikhoan model
   */
  readonly fields: WS_TaikhoanFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for WS_Taikhoan.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WS_TaikhoanClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the WS_Taikhoan model
   */ 
  interface WS_TaikhoanFieldRefs {
    readonly id_TaiKhoan: FieldRef<"WS_Taikhoan", 'Int'>
    readonly Taikhoan: FieldRef<"WS_Taikhoan", 'String'>
    readonly Matkhau: FieldRef<"WS_Taikhoan", 'String'>
    readonly ID_ChiNhanh: FieldRef<"WS_Taikhoan", 'String'>
    readonly NgaygioTao: FieldRef<"WS_Taikhoan", 'DateTime'>
    readonly NgaygioHetHan: FieldRef<"WS_Taikhoan", 'DateTime'>
    readonly SuDung: FieldRef<"WS_Taikhoan", 'Boolean'>
    readonly GhiChu: FieldRef<"WS_Taikhoan", 'String'>
  }
    

  // Custom InputTypes
  /**
   * WS_Taikhoan findUnique
   */
  export type WS_TaikhoanFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which WS_Taikhoan to fetch.
     */
    where: WS_TaikhoanWhereUniqueInput
  }

  /**
   * WS_Taikhoan findUniqueOrThrow
   */
  export type WS_TaikhoanFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which WS_Taikhoan to fetch.
     */
    where: WS_TaikhoanWhereUniqueInput
  }

  /**
   * WS_Taikhoan findFirst
   */
  export type WS_TaikhoanFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which WS_Taikhoan to fetch.
     */
    where?: WS_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Taikhoans to fetch.
     */
    orderBy?: WS_TaikhoanOrderByWithRelationInput | WS_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_Taikhoans.
     */
    cursor?: WS_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Taikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_Taikhoans.
     */
    distinct?: WS_TaikhoanScalarFieldEnum | WS_TaikhoanScalarFieldEnum[]
  }

  /**
   * WS_Taikhoan findFirstOrThrow
   */
  export type WS_TaikhoanFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which WS_Taikhoan to fetch.
     */
    where?: WS_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Taikhoans to fetch.
     */
    orderBy?: WS_TaikhoanOrderByWithRelationInput | WS_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for WS_Taikhoans.
     */
    cursor?: WS_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Taikhoans.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of WS_Taikhoans.
     */
    distinct?: WS_TaikhoanScalarFieldEnum | WS_TaikhoanScalarFieldEnum[]
  }

  /**
   * WS_Taikhoan findMany
   */
  export type WS_TaikhoanFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter, which WS_Taikhoans to fetch.
     */
    where?: WS_TaikhoanWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of WS_Taikhoans to fetch.
     */
    orderBy?: WS_TaikhoanOrderByWithRelationInput | WS_TaikhoanOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing WS_Taikhoans.
     */
    cursor?: WS_TaikhoanWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` WS_Taikhoans from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` WS_Taikhoans.
     */
    skip?: number
    distinct?: WS_TaikhoanScalarFieldEnum | WS_TaikhoanScalarFieldEnum[]
  }

  /**
   * WS_Taikhoan create
   */
  export type WS_TaikhoanCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * The data needed to create a WS_Taikhoan.
     */
    data?: XOR<WS_TaikhoanCreateInput, WS_TaikhoanUncheckedCreateInput>
  }

  /**
   * WS_Taikhoan createMany
   */
  export type WS_TaikhoanCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many WS_Taikhoans.
     */
    data: WS_TaikhoanCreateManyInput | WS_TaikhoanCreateManyInput[]
  }

  /**
   * WS_Taikhoan update
   */
  export type WS_TaikhoanUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * The data needed to update a WS_Taikhoan.
     */
    data: XOR<WS_TaikhoanUpdateInput, WS_TaikhoanUncheckedUpdateInput>
    /**
     * Choose, which WS_Taikhoan to update.
     */
    where: WS_TaikhoanWhereUniqueInput
  }

  /**
   * WS_Taikhoan updateMany
   */
  export type WS_TaikhoanUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update WS_Taikhoans.
     */
    data: XOR<WS_TaikhoanUpdateManyMutationInput, WS_TaikhoanUncheckedUpdateManyInput>
    /**
     * Filter which WS_Taikhoans to update
     */
    where?: WS_TaikhoanWhereInput
  }

  /**
   * WS_Taikhoan upsert
   */
  export type WS_TaikhoanUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * The filter to search for the WS_Taikhoan to update in case it exists.
     */
    where: WS_TaikhoanWhereUniqueInput
    /**
     * In case the WS_Taikhoan found by the `where` argument doesn't exist, create a new WS_Taikhoan with this data.
     */
    create: XOR<WS_TaikhoanCreateInput, WS_TaikhoanUncheckedCreateInput>
    /**
     * In case the WS_Taikhoan was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WS_TaikhoanUpdateInput, WS_TaikhoanUncheckedUpdateInput>
  }

  /**
   * WS_Taikhoan delete
   */
  export type WS_TaikhoanDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
    /**
     * Filter which WS_Taikhoan to delete.
     */
    where: WS_TaikhoanWhereUniqueInput
  }

  /**
   * WS_Taikhoan deleteMany
   */
  export type WS_TaikhoanDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which WS_Taikhoans to delete
     */
    where?: WS_TaikhoanWhereInput
  }

  /**
   * WS_Taikhoan without action
   */
  export type WS_TaikhoanDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the WS_Taikhoan
     */
    select?: WS_TaikhoanSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable',
    Snapshot: 'Snapshot'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CashierDataScalarFieldEnum: {
    Id: 'Id',
    IdChiNhanh: 'IdChiNhanh',
    ChiNhanh: 'ChiNhanh',
    IdPhieuThu: 'IdPhieuThu',
    IdNhanVien: 'IdNhanVien',
    HoTenNhanVien: 'HoTenNhanVien',
    NgayThu: 'NgayThu',
    IdBenhNhan: 'IdBenhNhan',
    HoTenBenhNhan: 'HoTenBenhNhan',
    NamSinh: 'NamSinh',
    TinhThanh: 'TinhThanh',
    IdTiepNhan: 'IdTiepNhan',
    DoiTuong: 'DoiTuong',
    LoaiTiepNhan: 'LoaiTiepNhan',
    KhamBenhVe: 'KhamBenhVe',
    LoaiPhieu: 'LoaiPhieu',
    IdPCD: 'IdPCD',
    TienTamUng: 'TienTamUng',
    TUConLai: 'TUConLai',
    DenTu: 'DenTu',
    ChuyenKhoa: 'ChuyenKhoa',
    IdChiTiet: 'IdChiTiet',
    IdDichVu: 'IdDichVu',
    TenDichVu: 'TenDichVu',
    PhanLoai: 'PhanLoai',
    LoaiHang: 'LoaiHang',
    CoBHYT: 'CoBHYT',
    SoLuong: 'SoLuong',
    DonVi: 'DonVi',
    DonGia: 'DonGia',
    GiaBHYT: 'GiaBHYT',
    ThanhTien: 'ThanhTien',
    BHYTChi: 'BHYTChi',
    ThanhTienBHYT: 'ThanhTienBHYT',
    TongTien: 'TongTien',
    ChenhLech: 'ChenhLech',
    GiamGia: 'GiamGia',
    TienGiam: 'TienGiam',
    ThanhToan: 'ThanhToan',
    TienGuiMau: 'TienGuiMau'
  };

  export type CashierDataScalarFieldEnum = (typeof CashierDataScalarFieldEnum)[keyof typeof CashierDataScalarFieldEnum]


  export const DrugRevenueDataScalarFieldEnum: {
    Id: 'Id',
    IdChiNhanh: 'IdChiNhanh',
    ChiNhanh: 'ChiNhanh',
    IdXuatKho: 'IdXuatKho',
    IdToaThuoc: 'IdToaThuoc',
    IdNhanVien: 'IdNhanVien',
    HoTenNhanVien: 'HoTenNhanVien',
    IdPhongKham: 'IdPhongKham',
    TenPhongKham: 'TenPhongKham',
    IdBenhNhan: 'IdBenhNhan',
    HoTenBenhNhan: 'HoTenBenhNhan',
    DoiTuong: 'DoiTuong',
    NgayXuat: 'NgayXuat',
    LoaiPhieu: 'LoaiPhieu',
    MaNghiepVu: 'MaNghiepVu',
    IdKho: 'IdKho',
    TenKho: 'TenKho',
    TongTien: 'TongTien',
    ChietKhau: 'ChietKhau',
    TienTruocThue: 'TienTruocThue',
    ThanhTien: 'ThanhTien'
  };

  export type DrugRevenueDataScalarFieldEnum = (typeof DrugRevenueDataScalarFieldEnum)[keyof typeof DrugRevenueDataScalarFieldEnum]


  export const PC_BangluongScalarFieldEnum: {
    id_bangluong: 'id_bangluong',
    id_chinhanh: 'id_chinhanh',
    id_nhanvien: 'id_nhanvien',
    nam_luong: 'nam_luong',
    thang_luong: 'thang_luong',
    chitiet_luong: 'chitiet_luong',
    luong_sanpham: 'luong_sanpham',
    id_nhanvien_upload: 'id_nhanvien_upload',
    ngay_upload: 'ngay_upload'
  };

  export type PC_BangluongScalarFieldEnum = (typeof PC_BangluongScalarFieldEnum)[keyof typeof PC_BangluongScalarFieldEnum]


  export const PC_BantinScalarFieldEnum: {
    id_Bantin: 'id_Bantin',
    Tieude: 'Tieude',
    Tomtat: 'Tomtat',
    Noidung: 'Noidung',
    Url_Images: 'Url_Images',
    id_Chinhanh: 'id_Chinhanh',
    id_KP_Banhanh: 'id_KP_Banhanh',
    Ten_KP_Banhanh: 'Ten_KP_Banhanh',
    id_To_Banhanh: 'id_To_Banhanh',
    Ten_To_Banhanh: 'Ten_To_Banhanh',
    id_NV_Them: 'id_NV_Them',
    Ngaydang: 'Ngaydang',
    Ngay_Hethan: 'Ngay_Hethan',
    Hienthi_Home: 'Hienthi_Home',
    Sudung: 'Sudung',
    Luotxem: 'Luotxem',
    Ghim_Bantin: 'Ghim_Bantin',
    Bantin_Tapdoan: 'Bantin_Tapdoan',
    id_DMPhanloai: 'id_DMPhanloai',
    TenPhanloai: 'TenPhanloai',
    id_DMPhanloaiCT: 'id_DMPhanloaiCT',
    TenChitiet: 'TenChitiet',
    Url_Video: 'Url_Video'
  };

  export type PC_BantinScalarFieldEnum = (typeof PC_BantinScalarFieldEnum)[keyof typeof PC_BantinScalarFieldEnum]


  export const PC_BenhnhanScalarFieldEnum: {
    id_Benhnhan: 'id_Benhnhan',
    Hoten: 'Hoten',
    Ten: 'Ten',
    Hotenkhongdau: 'Hotenkhongdau',
    Ngaythangnamsinh: 'Ngaythangnamsinh',
    Namsinh: 'Namsinh',
    Gioitinh: 'Gioitinh',
    Noilamviec: 'Noilamviec',
    SoCMND: 'SoCMND',
    Email: 'Email',
    Dienthoai_didong: 'Dienthoai_didong',
    Tamtru_diachi: 'Tamtru_diachi',
    Tamtru_xaphuong: 'Tamtru_xaphuong',
    Tamtru_idXaphuong: 'Tamtru_idXaphuong',
    Tamtru_quanhuyen: 'Tamtru_quanhuyen',
    Tamtru_idQuanhuyen: 'Tamtru_idQuanhuyen',
    Tamtru_tinhthanh: 'Tamtru_tinhthanh',
    Tamtru_idTinhthanh: 'Tamtru_idTinhthanh',
    id_DMQuoctich: 'id_DMQuoctich',
    Quoctich: 'Quoctich',
    id_DMNghenghiep: 'id_DMNghenghiep',
    Nghenghiep: 'Nghenghiep',
    id_DMDantoc: 'id_DMDantoc',
    Dantoc: 'Dantoc',
    id_DMTongiao: 'id_DMTongiao',
    Tongiao: 'Tongiao',
    Trangthai: 'Trangthai',
    Cogiadinh: 'Cogiadinh',
    Ngaygiotaohoso: 'Ngaygiotaohoso',
    id_Nhanvien: 'id_Nhanvien',
    DCNuocngoai: 'DCNuocngoai',
    id_ChiNhanh: 'id_ChiNhanh',
    id_BenhnhanMoi: 'id_BenhnhanMoi',
    id_BenhnhanMe: 'id_BenhnhanMe',
    MahosoIVF: 'MahosoIVF',
    BNLH_Ten: 'BNLH_Ten',
    BNLH_DiaChi: 'BNLH_DiaChi',
    BNLH_SoDienThoai: 'BNLH_SoDienThoai',
    BNLH_QuanHe: 'BNLH_QuanHe',
    BNTT_Para: 'BNTT_Para',
    BNTT_TienSuBanThan: 'BNTT_TienSuBanThan',
    BNTT_TienSuGD: 'BNTT_TienSuGD',
    BNTT_SanhTaiBV: 'BNTT_SanhTaiBV',
    BNTT_DuocSinhTaiBV: 'BNTT_DuocSinhTaiBV',
    BNTT_MaTiemngua: 'BNTT_MaTiemngua',
    BNTT_ChoTrung: 'BNTT_ChoTrung',
    BNTT_NhanTrung_TenVo: 'BNTT_NhanTrung_TenVo',
    BNTT_NhanTrung_NamsinhVo: 'BNTT_NhanTrung_NamsinhVo',
    BNTT_NhanTrung_TenChong: 'BNTT_NhanTrung_TenChong',
    BNTT_NhanTrung_NamsinhChong: 'BNTT_NhanTrung_NamsinhChong',
    Sync_Version: 'Sync_Version',
    Sync_Date: 'Sync_Date',
    Sync_To_All: 'Sync_To_All',
    Sync_By_Branch: 'Sync_By_Branch'
  };

  export type PC_BenhnhanScalarFieldEnum = (typeof PC_BenhnhanScalarFieldEnum)[keyof typeof PC_BenhnhanScalarFieldEnum]


  export const PC_CustomerScalarFieldEnum: {
    pcId: 'pcId',
    name: 'name',
    birthday: 'birthday',
    phoneNumber: 'phoneNumber',
    gender: 'gender',
    idCardNo: 'idCardNo',
    email: 'email',
    careerCode: 'careerCode',
    nationalityCode: 'nationalityCode',
    ethnicCode: 'ethnicCode',
    countryCode: 'countryCode',
    cityCode: 'cityCode',
    districtCode: 'districtCode',
    wardCode: 'wardCode',
    homeAddress: 'homeAddress',
    managerId: 'managerId',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type PC_CustomerScalarFieldEnum = (typeof PC_CustomerScalarFieldEnum)[keyof typeof PC_CustomerScalarFieldEnum]


  export const PC_HosoIVFScalarFieldEnum: {
    id_HosoIVF: 'id_HosoIVF',
    MasoHS: 'MasoHS',
    Namluutru: 'Namluutru',
    Sohientai: 'Sohientai',
    id_BN_Vo: 'id_BN_Vo',
    id_BN_Chong: 'id_BN_Chong',
    Trangthai: 'Trangthai',
    Ngaytao: 'Ngaytao',
    id_nhanvien: 'id_nhanvien',
    id_Khoaphong: 'id_Khoaphong',
    Phanloai: 'Phanloai',
    Ghichu: 'Ghichu',
    id_BSGuibenh: 'id_BSGuibenh',
    Hoten_BSGuibenh: 'Hoten_BSGuibenh',
    id_ChiNhanh: 'id_ChiNhanh',
    Sync_Version: 'Sync_Version',
    Sync_Date: 'Sync_Date',
    Sync_To_All: 'Sync_To_All',
    Sync_By_Branch: 'Sync_By_Branch'
  };

  export type PC_HosoIVFScalarFieldEnum = (typeof PC_HosoIVFScalarFieldEnum)[keyof typeof PC_HosoIVFScalarFieldEnum]


  export const PC_ModuleScalarFieldEnum: {
    id_Module: 'id_Module',
    enumModule: 'enumModule',
    TenModule: 'TenModule',
    Loai_Ungdung: 'Loai_Ungdung'
  };

  export type PC_ModuleScalarFieldEnum = (typeof PC_ModuleScalarFieldEnum)[keyof typeof PC_ModuleScalarFieldEnum]


  export const PC_Module_NhomTKScalarFieldEnum: {
    id_MDNhom: 'id_MDNhom',
    enum_Module: 'enum_Module',
    enum_NhomTK: 'enum_NhomTK',
    Mod_Xem: 'Mod_Xem',
    Mod_Them: 'Mod_Them',
    Mod_Sua: 'Mod_Sua',
    Mod_Xoa: 'Mod_Xoa',
    Mod_Xuat: 'Mod_Xuat',
    Ghichu: 'Ghichu',
    Loai_Ungdung: 'Loai_Ungdung'
  };

  export type PC_Module_NhomTKScalarFieldEnum = (typeof PC_Module_NhomTKScalarFieldEnum)[keyof typeof PC_Module_NhomTKScalarFieldEnum]


  export const PC_NhanvienScalarFieldEnum: {
    ID_Nhanvien: 'ID_Nhanvien',
    Hoten: 'Hoten',
    Ten: 'Ten',
    Ngaysinh: 'Ngaysinh',
    Namsinh: 'Namsinh',
    Gioitinh: 'Gioitinh',
    Dienthoai: 'Dienthoai',
    Email: 'Email',
    ID_NhomNV: 'ID_NhomNV',
    Ten_NhomNV: 'Ten_NhomNV',
    id_DMPhongban: 'id_DMPhongban',
    Phongban: 'Phongban',
    id_DMTonhom: 'id_DMTonhom',
    Tonhom: 'Tonhom',
    ID_Chinhanh: 'ID_Chinhanh',
    Diachi: 'Diachi',
    Trangthai: 'Trangthai',
    Ngayvaolam: 'Ngayvaolam',
    AnhProfile: 'AnhProfile',
    Sync_Version: 'Sync_Version',
    Sync_End: 'Sync_End'
  };

  export type PC_NhanvienScalarFieldEnum = (typeof PC_NhanvienScalarFieldEnum)[keyof typeof PC_NhanvienScalarFieldEnum]


  export const PC_Nhanvien_MediaScalarFieldEnum: {
    id_Nhanvien: 'id_Nhanvien',
    AnhProfile: 'AnhProfile'
  };

  export type PC_Nhanvien_MediaScalarFieldEnum = (typeof PC_Nhanvien_MediaScalarFieldEnum)[keyof typeof PC_Nhanvien_MediaScalarFieldEnum]


  export const PC_NhomTaikhoanScalarFieldEnum: {
    id_NhomTK: 'id_NhomTK',
    enumNhom: 'enumNhom',
    TenNhom: 'TenNhom',
    Sudung: 'Sudung'
  };

  export type PC_NhomTaikhoanScalarFieldEnum = (typeof PC_NhomTaikhoanScalarFieldEnum)[keyof typeof PC_NhomTaikhoanScalarFieldEnum]


  export const PC_PhienbanScalarFieldEnum: {
    ID_Phienban: 'ID_Phienban',
    Ten: 'Ten',
    Ngayphathanh: 'Ngayphathanh',
    Duongdan: 'Duongdan',
    Kichhoat: 'Kichhoat',
    Ghichu: 'Ghichu'
  };

  export type PC_PhienbanScalarFieldEnum = (typeof PC_PhienbanScalarFieldEnum)[keyof typeof PC_PhienbanScalarFieldEnum]


  export const PC_TaikhoanScalarFieldEnum: {
    id_User: 'id_User',
    Password: 'Password',
    Name: 'Name',
    Email: 'Email',
    Device_IMEI: 'Device_IMEI',
    Device_OS: 'Device_OS',
    Device_Version: 'Device_Version',
    DateCreate: 'DateCreate',
    DaDoiPass: 'DaDoiPass',
    Active: 'Active',
    Disable: 'Disable',
    LastLogin: 'LastLogin',
    LastLogin_Web: 'LastLogin_Web',
    Login_App: 'Login_App',
    Login_Web: 'Login_Web',
    Avatar: 'Avatar',
    ID_ChiNhanh: 'ID_ChiNhanh'
  };

  export type PC_TaikhoanScalarFieldEnum = (typeof PC_TaikhoanScalarFieldEnum)[keyof typeof PC_TaikhoanScalarFieldEnum]


  export const PC_Taikhoan_BangluongScalarFieldEnum: {
    id: 'id',
    id_taikhoan: 'id_taikhoan',
    HotenNV: 'HotenNV',
    id_nhanvien_cap: 'id_nhanvien_cap',
    ngaycap: 'ngaycap',
    sdt_nhan_pass: 'sdt_nhan_pass',
    da_gui_sms: 'da_gui_sms',
    trangthai_sms: 'trangthai_sms',
    Pass_bill_luong: 'Pass_bill_luong'
  };

  export type PC_Taikhoan_BangluongScalarFieldEnum = (typeof PC_Taikhoan_BangluongScalarFieldEnum)[keyof typeof PC_Taikhoan_BangluongScalarFieldEnum]


  export const PC_ThanhvienScalarFieldEnum: {
    id_TV: 'id_TV',
    enum_NhomTK: 'enum_NhomTK',
    id_User: 'id_User'
  };

  export type PC_ThanhvienScalarFieldEnum = (typeof PC_ThanhvienScalarFieldEnum)[keyof typeof PC_ThanhvienScalarFieldEnum]


  export const PC_TheCapphatScalarFieldEnum: {
    id_TheCapphat: 'id_TheCapphat',
    id_Benhnhan: 'id_Benhnhan',
    Hoten_Benhnhan: 'Hoten_Benhnhan',
    Ngaysinh: 'Ngaysinh',
    Ngaycapthe: 'Ngaycapthe',
    id_NVCap: 'id_NVCap',
    Hoten_NVCap: 'Hoten_NVCap',
    id_Dauthe: 'id_Dauthe',
    MaThe: 'MaThe',
    Diem_Congthem: 'Diem_Congthem',
    Lydo_Congdiem: 'Lydo_Congdiem',
    id_NVCongdiem: 'id_NVCongdiem',
    Trangthai: 'Trangthai',
    LydoKhoa: 'LydoKhoa',
    Ngayhethan: 'Ngayhethan',
    DoituongSudung: 'DoituongSudung',
    TTNguoiNhanThe: 'TTNguoiNhanThe',
    CongdongBau: 'CongdongBau',
    Nangcap_PCCARE: 'Nangcap_PCCARE',
    Ngaynang: 'Ngaynang',
    id_ChiNhanh: 'id_ChiNhanh',
    Sync_Version: 'Sync_Version',
    Sync_Date: 'Sync_Date',
    Sync_To_All: 'Sync_To_All',
    Sync_By_Branch: 'Sync_By_Branch'
  };

  export type PC_TheCapphatScalarFieldEnum = (typeof PC_TheCapphatScalarFieldEnum)[keyof typeof PC_TheCapphatScalarFieldEnum]


  export const Tbl_PhishingScalarFieldEnum: {
    id: 'id',
    userid: 'userid',
    username: 'username',
    phone: 'phone',
    email: 'email',
    description: 'description',
    branchID: 'branchID',
    branchName: 'branchName',
    deptID: 'deptID',
    deptName: 'deptName'
  };

  export type Tbl_PhishingScalarFieldEnum = (typeof Tbl_PhishingScalarFieldEnum)[keyof typeof Tbl_PhishingScalarFieldEnum]


  export const USER_PORTALScalarFieldEnum: {
    PID: 'PID',
    Name: 'Name'
  };

  export type USER_PORTALScalarFieldEnum = (typeof USER_PORTALScalarFieldEnum)[keyof typeof USER_PORTALScalarFieldEnum]


  export const WS_DMChinhanhScalarFieldEnum: {
    ID_ChiNhanh: 'ID_ChiNhanh',
    RSA_Public_Key: 'RSA_Public_Key',
    Url_WS: 'Url_WS',
    Ten_ChiNhanh: 'Ten_ChiNhanh',
    Sudung: 'Sudung',
    Ghichu: 'Ghichu',
    Url_Webnoibo: 'Url_Webnoibo'
  };

  export type WS_DMChinhanhScalarFieldEnum = (typeof WS_DMChinhanhScalarFieldEnum)[keyof typeof WS_DMChinhanhScalarFieldEnum]


  export const WS_DMDonviScalarFieldEnum: {
    id_DMDonvi: 'id_DMDonvi',
    Ten_Donvi: 'Ten_Donvi',
    id_Khoaphong: 'id_Khoaphong',
    id_ChiNhanh: 'id_ChiNhanh',
    Sudung: 'Sudung'
  };

  export type WS_DMDonviScalarFieldEnum = (typeof WS_DMDonviScalarFieldEnum)[keyof typeof WS_DMDonviScalarFieldEnum]


  export const WS_DMKhoaPhongScalarFieldEnum: {
    id_Khoaphong: 'id_Khoaphong',
    Ten: 'Ten',
    id_KPCha: 'id_KPCha',
    ID_ChiNhanh: 'ID_ChiNhanh',
    Ghichu: 'Ghichu',
    Sudung: 'Sudung',
    VanHanh: 'VanHanh'
  };

  export type WS_DMKhoaPhongScalarFieldEnum = (typeof WS_DMKhoaPhongScalarFieldEnum)[keyof typeof WS_DMKhoaPhongScalarFieldEnum]


  export const WS_DMNhomTochucScalarFieldEnum: {
    id_DMNhomTochuc: 'id_DMNhomTochuc',
    id_DMChinhanh: 'id_DMChinhanh',
    Ten: 'Ten',
    Ghichu: 'Ghichu',
    Sudung: 'Sudung'
  };

  export type WS_DMNhomTochucScalarFieldEnum = (typeof WS_DMNhomTochucScalarFieldEnum)[keyof typeof WS_DMNhomTochucScalarFieldEnum]


  export const WS_LogScalarFieldEnum: {
    id_Log: 'id_Log',
    id_TaiKhoan: 'id_TaiKhoan',
    Taikhoan: 'Taikhoan',
    Ngaygio: 'Ngaygio',
    ResponseCode: 'ResponseCode',
    UserHostName: 'UserHostName',
    UserHostAddress: 'UserHostAddress',
    QueryString: 'QueryString',
    HttpMethod: 'HttpMethod',
    ClientBrowser: 'ClientBrowser'
  };

  export type WS_LogScalarFieldEnum = (typeof WS_LogScalarFieldEnum)[keyof typeof WS_LogScalarFieldEnum]


  export const WS_TaikhoanScalarFieldEnum: {
    id_TaiKhoan: 'id_TaiKhoan',
    Taikhoan: 'Taikhoan',
    Matkhau: 'Matkhau',
    ID_ChiNhanh: 'ID_ChiNhanh',
    NgaygioTao: 'NgaygioTao',
    NgaygioHetHan: 'NgaygioHetHan',
    SuDung: 'SuDung',
    GhiChu: 'GhiChu'
  };

  export type WS_TaikhoanScalarFieldEnum = (typeof WS_TaikhoanScalarFieldEnum)[keyof typeof WS_TaikhoanScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Bytes'
   */
  export type BytesFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Bytes'>
    
  /**
   * Deep Input Types
   */


  export type CashierDataWhereInput = {
    AND?: CashierDataWhereInput | CashierDataWhereInput[]
    OR?: CashierDataWhereInput[]
    NOT?: CashierDataWhereInput | CashierDataWhereInput[]
    Id?: StringFilter<"CashierData"> | string
    IdChiNhanh?: StringNullableFilter<"CashierData"> | string | null
    ChiNhanh?: StringNullableFilter<"CashierData"> | string | null
    IdPhieuThu?: StringNullableFilter<"CashierData"> | string | null
    IdNhanVien?: StringNullableFilter<"CashierData"> | string | null
    HoTenNhanVien?: StringNullableFilter<"CashierData"> | string | null
    NgayThu?: DateTimeNullableFilter<"CashierData"> | Date | string | null
    IdBenhNhan?: StringNullableFilter<"CashierData"> | string | null
    HoTenBenhNhan?: StringNullableFilter<"CashierData"> | string | null
    NamSinh?: StringNullableFilter<"CashierData"> | string | null
    TinhThanh?: StringNullableFilter<"CashierData"> | string | null
    IdTiepNhan?: IntNullableFilter<"CashierData"> | number | null
    DoiTuong?: StringNullableFilter<"CashierData"> | string | null
    LoaiTiepNhan?: StringNullableFilter<"CashierData"> | string | null
    KhamBenhVe?: BoolNullableFilter<"CashierData"> | boolean | null
    LoaiPhieu?: StringNullableFilter<"CashierData"> | string | null
    IdPCD?: StringNullableFilter<"CashierData"> | string | null
    TienTamUng?: FloatNullableFilter<"CashierData"> | number | null
    TUConLai?: FloatNullableFilter<"CashierData"> | number | null
    DenTu?: StringNullableFilter<"CashierData"> | string | null
    ChuyenKhoa?: StringNullableFilter<"CashierData"> | string | null
    IdChiTiet?: IntNullableFilter<"CashierData"> | number | null
    IdDichVu?: StringNullableFilter<"CashierData"> | string | null
    TenDichVu?: StringNullableFilter<"CashierData"> | string | null
    PhanLoai?: StringNullableFilter<"CashierData"> | string | null
    LoaiHang?: StringNullableFilter<"CashierData"> | string | null
    CoBHYT?: BoolNullableFilter<"CashierData"> | boolean | null
    SoLuong?: FloatNullableFilter<"CashierData"> | number | null
    DonVi?: StringNullableFilter<"CashierData"> | string | null
    DonGia?: FloatNullableFilter<"CashierData"> | number | null
    GiaBHYT?: FloatNullableFilter<"CashierData"> | number | null
    ThanhTien?: FloatNullableFilter<"CashierData"> | number | null
    BHYTChi?: FloatNullableFilter<"CashierData"> | number | null
    ThanhTienBHYT?: FloatNullableFilter<"CashierData"> | number | null
    TongTien?: FloatNullableFilter<"CashierData"> | number | null
    ChenhLech?: FloatNullableFilter<"CashierData"> | number | null
    GiamGia?: FloatNullableFilter<"CashierData"> | number | null
    TienGiam?: FloatNullableFilter<"CashierData"> | number | null
    ThanhToan?: FloatNullableFilter<"CashierData"> | number | null
    TienGuiMau?: FloatNullableFilter<"CashierData"> | number | null
  }

  export type CashierDataOrderByWithRelationInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrderInput | SortOrder
    ChiNhanh?: SortOrderInput | SortOrder
    IdPhieuThu?: SortOrderInput | SortOrder
    IdNhanVien?: SortOrderInput | SortOrder
    HoTenNhanVien?: SortOrderInput | SortOrder
    NgayThu?: SortOrderInput | SortOrder
    IdBenhNhan?: SortOrderInput | SortOrder
    HoTenBenhNhan?: SortOrderInput | SortOrder
    NamSinh?: SortOrderInput | SortOrder
    TinhThanh?: SortOrderInput | SortOrder
    IdTiepNhan?: SortOrderInput | SortOrder
    DoiTuong?: SortOrderInput | SortOrder
    LoaiTiepNhan?: SortOrderInput | SortOrder
    KhamBenhVe?: SortOrderInput | SortOrder
    LoaiPhieu?: SortOrderInput | SortOrder
    IdPCD?: SortOrderInput | SortOrder
    TienTamUng?: SortOrderInput | SortOrder
    TUConLai?: SortOrderInput | SortOrder
    DenTu?: SortOrderInput | SortOrder
    ChuyenKhoa?: SortOrderInput | SortOrder
    IdChiTiet?: SortOrderInput | SortOrder
    IdDichVu?: SortOrderInput | SortOrder
    TenDichVu?: SortOrderInput | SortOrder
    PhanLoai?: SortOrderInput | SortOrder
    LoaiHang?: SortOrderInput | SortOrder
    CoBHYT?: SortOrderInput | SortOrder
    SoLuong?: SortOrderInput | SortOrder
    DonVi?: SortOrderInput | SortOrder
    DonGia?: SortOrderInput | SortOrder
    GiaBHYT?: SortOrderInput | SortOrder
    ThanhTien?: SortOrderInput | SortOrder
    BHYTChi?: SortOrderInput | SortOrder
    ThanhTienBHYT?: SortOrderInput | SortOrder
    TongTien?: SortOrderInput | SortOrder
    ChenhLech?: SortOrderInput | SortOrder
    GiamGia?: SortOrderInput | SortOrder
    TienGiam?: SortOrderInput | SortOrder
    ThanhToan?: SortOrderInput | SortOrder
    TienGuiMau?: SortOrderInput | SortOrder
  }

  export type CashierDataWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: CashierDataWhereInput | CashierDataWhereInput[]
    OR?: CashierDataWhereInput[]
    NOT?: CashierDataWhereInput | CashierDataWhereInput[]
    IdChiNhanh?: StringNullableFilter<"CashierData"> | string | null
    ChiNhanh?: StringNullableFilter<"CashierData"> | string | null
    IdPhieuThu?: StringNullableFilter<"CashierData"> | string | null
    IdNhanVien?: StringNullableFilter<"CashierData"> | string | null
    HoTenNhanVien?: StringNullableFilter<"CashierData"> | string | null
    NgayThu?: DateTimeNullableFilter<"CashierData"> | Date | string | null
    IdBenhNhan?: StringNullableFilter<"CashierData"> | string | null
    HoTenBenhNhan?: StringNullableFilter<"CashierData"> | string | null
    NamSinh?: StringNullableFilter<"CashierData"> | string | null
    TinhThanh?: StringNullableFilter<"CashierData"> | string | null
    IdTiepNhan?: IntNullableFilter<"CashierData"> | number | null
    DoiTuong?: StringNullableFilter<"CashierData"> | string | null
    LoaiTiepNhan?: StringNullableFilter<"CashierData"> | string | null
    KhamBenhVe?: BoolNullableFilter<"CashierData"> | boolean | null
    LoaiPhieu?: StringNullableFilter<"CashierData"> | string | null
    IdPCD?: StringNullableFilter<"CashierData"> | string | null
    TienTamUng?: FloatNullableFilter<"CashierData"> | number | null
    TUConLai?: FloatNullableFilter<"CashierData"> | number | null
    DenTu?: StringNullableFilter<"CashierData"> | string | null
    ChuyenKhoa?: StringNullableFilter<"CashierData"> | string | null
    IdChiTiet?: IntNullableFilter<"CashierData"> | number | null
    IdDichVu?: StringNullableFilter<"CashierData"> | string | null
    TenDichVu?: StringNullableFilter<"CashierData"> | string | null
    PhanLoai?: StringNullableFilter<"CashierData"> | string | null
    LoaiHang?: StringNullableFilter<"CashierData"> | string | null
    CoBHYT?: BoolNullableFilter<"CashierData"> | boolean | null
    SoLuong?: FloatNullableFilter<"CashierData"> | number | null
    DonVi?: StringNullableFilter<"CashierData"> | string | null
    DonGia?: FloatNullableFilter<"CashierData"> | number | null
    GiaBHYT?: FloatNullableFilter<"CashierData"> | number | null
    ThanhTien?: FloatNullableFilter<"CashierData"> | number | null
    BHYTChi?: FloatNullableFilter<"CashierData"> | number | null
    ThanhTienBHYT?: FloatNullableFilter<"CashierData"> | number | null
    TongTien?: FloatNullableFilter<"CashierData"> | number | null
    ChenhLech?: FloatNullableFilter<"CashierData"> | number | null
    GiamGia?: FloatNullableFilter<"CashierData"> | number | null
    TienGiam?: FloatNullableFilter<"CashierData"> | number | null
    ThanhToan?: FloatNullableFilter<"CashierData"> | number | null
    TienGuiMau?: FloatNullableFilter<"CashierData"> | number | null
  }, "Id">

  export type CashierDataOrderByWithAggregationInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrderInput | SortOrder
    ChiNhanh?: SortOrderInput | SortOrder
    IdPhieuThu?: SortOrderInput | SortOrder
    IdNhanVien?: SortOrderInput | SortOrder
    HoTenNhanVien?: SortOrderInput | SortOrder
    NgayThu?: SortOrderInput | SortOrder
    IdBenhNhan?: SortOrderInput | SortOrder
    HoTenBenhNhan?: SortOrderInput | SortOrder
    NamSinh?: SortOrderInput | SortOrder
    TinhThanh?: SortOrderInput | SortOrder
    IdTiepNhan?: SortOrderInput | SortOrder
    DoiTuong?: SortOrderInput | SortOrder
    LoaiTiepNhan?: SortOrderInput | SortOrder
    KhamBenhVe?: SortOrderInput | SortOrder
    LoaiPhieu?: SortOrderInput | SortOrder
    IdPCD?: SortOrderInput | SortOrder
    TienTamUng?: SortOrderInput | SortOrder
    TUConLai?: SortOrderInput | SortOrder
    DenTu?: SortOrderInput | SortOrder
    ChuyenKhoa?: SortOrderInput | SortOrder
    IdChiTiet?: SortOrderInput | SortOrder
    IdDichVu?: SortOrderInput | SortOrder
    TenDichVu?: SortOrderInput | SortOrder
    PhanLoai?: SortOrderInput | SortOrder
    LoaiHang?: SortOrderInput | SortOrder
    CoBHYT?: SortOrderInput | SortOrder
    SoLuong?: SortOrderInput | SortOrder
    DonVi?: SortOrderInput | SortOrder
    DonGia?: SortOrderInput | SortOrder
    GiaBHYT?: SortOrderInput | SortOrder
    ThanhTien?: SortOrderInput | SortOrder
    BHYTChi?: SortOrderInput | SortOrder
    ThanhTienBHYT?: SortOrderInput | SortOrder
    TongTien?: SortOrderInput | SortOrder
    ChenhLech?: SortOrderInput | SortOrder
    GiamGia?: SortOrderInput | SortOrder
    TienGiam?: SortOrderInput | SortOrder
    ThanhToan?: SortOrderInput | SortOrder
    TienGuiMau?: SortOrderInput | SortOrder
    _count?: CashierDataCountOrderByAggregateInput
    _avg?: CashierDataAvgOrderByAggregateInput
    _max?: CashierDataMaxOrderByAggregateInput
    _min?: CashierDataMinOrderByAggregateInput
    _sum?: CashierDataSumOrderByAggregateInput
  }

  export type CashierDataScalarWhereWithAggregatesInput = {
    AND?: CashierDataScalarWhereWithAggregatesInput | CashierDataScalarWhereWithAggregatesInput[]
    OR?: CashierDataScalarWhereWithAggregatesInput[]
    NOT?: CashierDataScalarWhereWithAggregatesInput | CashierDataScalarWhereWithAggregatesInput[]
    Id?: StringWithAggregatesFilter<"CashierData"> | string
    IdChiNhanh?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    ChiNhanh?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    IdPhieuThu?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    IdNhanVien?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    HoTenNhanVien?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    NgayThu?: DateTimeNullableWithAggregatesFilter<"CashierData"> | Date | string | null
    IdBenhNhan?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    HoTenBenhNhan?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    NamSinh?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    TinhThanh?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    IdTiepNhan?: IntNullableWithAggregatesFilter<"CashierData"> | number | null
    DoiTuong?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    LoaiTiepNhan?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    KhamBenhVe?: BoolNullableWithAggregatesFilter<"CashierData"> | boolean | null
    LoaiPhieu?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    IdPCD?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    TienTamUng?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    TUConLai?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    DenTu?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    ChuyenKhoa?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    IdChiTiet?: IntNullableWithAggregatesFilter<"CashierData"> | number | null
    IdDichVu?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    TenDichVu?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    PhanLoai?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    LoaiHang?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    CoBHYT?: BoolNullableWithAggregatesFilter<"CashierData"> | boolean | null
    SoLuong?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    DonVi?: StringNullableWithAggregatesFilter<"CashierData"> | string | null
    DonGia?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    GiaBHYT?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    ThanhTien?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    BHYTChi?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    ThanhTienBHYT?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    TongTien?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    ChenhLech?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    GiamGia?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    TienGiam?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    ThanhToan?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
    TienGuiMau?: FloatNullableWithAggregatesFilter<"CashierData"> | number | null
  }

  export type DrugRevenueDataWhereInput = {
    AND?: DrugRevenueDataWhereInput | DrugRevenueDataWhereInput[]
    OR?: DrugRevenueDataWhereInput[]
    NOT?: DrugRevenueDataWhereInput | DrugRevenueDataWhereInput[]
    Id?: StringFilter<"DrugRevenueData"> | string
    IdChiNhanh?: StringNullableFilter<"DrugRevenueData"> | string | null
    ChiNhanh?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdXuatKho?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdToaThuoc?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdNhanVien?: StringNullableFilter<"DrugRevenueData"> | string | null
    HoTenNhanVien?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdPhongKham?: StringNullableFilter<"DrugRevenueData"> | string | null
    TenPhongKham?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdBenhNhan?: StringNullableFilter<"DrugRevenueData"> | string | null
    HoTenBenhNhan?: StringNullableFilter<"DrugRevenueData"> | string | null
    DoiTuong?: StringNullableFilter<"DrugRevenueData"> | string | null
    NgayXuat?: DateTimeNullableFilter<"DrugRevenueData"> | Date | string | null
    LoaiPhieu?: StringNullableFilter<"DrugRevenueData"> | string | null
    MaNghiepVu?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdKho?: StringNullableFilter<"DrugRevenueData"> | string | null
    TenKho?: StringNullableFilter<"DrugRevenueData"> | string | null
    TongTien?: FloatNullableFilter<"DrugRevenueData"> | number | null
    ChietKhau?: FloatNullableFilter<"DrugRevenueData"> | number | null
    TienTruocThue?: FloatNullableFilter<"DrugRevenueData"> | number | null
    ThanhTien?: FloatNullableFilter<"DrugRevenueData"> | number | null
  }

  export type DrugRevenueDataOrderByWithRelationInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrderInput | SortOrder
    ChiNhanh?: SortOrderInput | SortOrder
    IdXuatKho?: SortOrderInput | SortOrder
    IdToaThuoc?: SortOrderInput | SortOrder
    IdNhanVien?: SortOrderInput | SortOrder
    HoTenNhanVien?: SortOrderInput | SortOrder
    IdPhongKham?: SortOrderInput | SortOrder
    TenPhongKham?: SortOrderInput | SortOrder
    IdBenhNhan?: SortOrderInput | SortOrder
    HoTenBenhNhan?: SortOrderInput | SortOrder
    DoiTuong?: SortOrderInput | SortOrder
    NgayXuat?: SortOrderInput | SortOrder
    LoaiPhieu?: SortOrderInput | SortOrder
    MaNghiepVu?: SortOrderInput | SortOrder
    IdKho?: SortOrderInput | SortOrder
    TenKho?: SortOrderInput | SortOrder
    TongTien?: SortOrderInput | SortOrder
    ChietKhau?: SortOrderInput | SortOrder
    TienTruocThue?: SortOrderInput | SortOrder
    ThanhTien?: SortOrderInput | SortOrder
  }

  export type DrugRevenueDataWhereUniqueInput = Prisma.AtLeast<{
    Id?: string
    AND?: DrugRevenueDataWhereInput | DrugRevenueDataWhereInput[]
    OR?: DrugRevenueDataWhereInput[]
    NOT?: DrugRevenueDataWhereInput | DrugRevenueDataWhereInput[]
    IdChiNhanh?: StringNullableFilter<"DrugRevenueData"> | string | null
    ChiNhanh?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdXuatKho?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdToaThuoc?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdNhanVien?: StringNullableFilter<"DrugRevenueData"> | string | null
    HoTenNhanVien?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdPhongKham?: StringNullableFilter<"DrugRevenueData"> | string | null
    TenPhongKham?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdBenhNhan?: StringNullableFilter<"DrugRevenueData"> | string | null
    HoTenBenhNhan?: StringNullableFilter<"DrugRevenueData"> | string | null
    DoiTuong?: StringNullableFilter<"DrugRevenueData"> | string | null
    NgayXuat?: DateTimeNullableFilter<"DrugRevenueData"> | Date | string | null
    LoaiPhieu?: StringNullableFilter<"DrugRevenueData"> | string | null
    MaNghiepVu?: StringNullableFilter<"DrugRevenueData"> | string | null
    IdKho?: StringNullableFilter<"DrugRevenueData"> | string | null
    TenKho?: StringNullableFilter<"DrugRevenueData"> | string | null
    TongTien?: FloatNullableFilter<"DrugRevenueData"> | number | null
    ChietKhau?: FloatNullableFilter<"DrugRevenueData"> | number | null
    TienTruocThue?: FloatNullableFilter<"DrugRevenueData"> | number | null
    ThanhTien?: FloatNullableFilter<"DrugRevenueData"> | number | null
  }, "Id">

  export type DrugRevenueDataOrderByWithAggregationInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrderInput | SortOrder
    ChiNhanh?: SortOrderInput | SortOrder
    IdXuatKho?: SortOrderInput | SortOrder
    IdToaThuoc?: SortOrderInput | SortOrder
    IdNhanVien?: SortOrderInput | SortOrder
    HoTenNhanVien?: SortOrderInput | SortOrder
    IdPhongKham?: SortOrderInput | SortOrder
    TenPhongKham?: SortOrderInput | SortOrder
    IdBenhNhan?: SortOrderInput | SortOrder
    HoTenBenhNhan?: SortOrderInput | SortOrder
    DoiTuong?: SortOrderInput | SortOrder
    NgayXuat?: SortOrderInput | SortOrder
    LoaiPhieu?: SortOrderInput | SortOrder
    MaNghiepVu?: SortOrderInput | SortOrder
    IdKho?: SortOrderInput | SortOrder
    TenKho?: SortOrderInput | SortOrder
    TongTien?: SortOrderInput | SortOrder
    ChietKhau?: SortOrderInput | SortOrder
    TienTruocThue?: SortOrderInput | SortOrder
    ThanhTien?: SortOrderInput | SortOrder
    _count?: DrugRevenueDataCountOrderByAggregateInput
    _avg?: DrugRevenueDataAvgOrderByAggregateInput
    _max?: DrugRevenueDataMaxOrderByAggregateInput
    _min?: DrugRevenueDataMinOrderByAggregateInput
    _sum?: DrugRevenueDataSumOrderByAggregateInput
  }

  export type DrugRevenueDataScalarWhereWithAggregatesInput = {
    AND?: DrugRevenueDataScalarWhereWithAggregatesInput | DrugRevenueDataScalarWhereWithAggregatesInput[]
    OR?: DrugRevenueDataScalarWhereWithAggregatesInput[]
    NOT?: DrugRevenueDataScalarWhereWithAggregatesInput | DrugRevenueDataScalarWhereWithAggregatesInput[]
    Id?: StringWithAggregatesFilter<"DrugRevenueData"> | string
    IdChiNhanh?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    ChiNhanh?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    IdXuatKho?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    IdToaThuoc?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    IdNhanVien?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    HoTenNhanVien?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    IdPhongKham?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    TenPhongKham?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    IdBenhNhan?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    HoTenBenhNhan?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    DoiTuong?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    NgayXuat?: DateTimeNullableWithAggregatesFilter<"DrugRevenueData"> | Date | string | null
    LoaiPhieu?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    MaNghiepVu?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    IdKho?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    TenKho?: StringNullableWithAggregatesFilter<"DrugRevenueData"> | string | null
    TongTien?: FloatNullableWithAggregatesFilter<"DrugRevenueData"> | number | null
    ChietKhau?: FloatNullableWithAggregatesFilter<"DrugRevenueData"> | number | null
    TienTruocThue?: FloatNullableWithAggregatesFilter<"DrugRevenueData"> | number | null
    ThanhTien?: FloatNullableWithAggregatesFilter<"DrugRevenueData"> | number | null
  }

  export type PC_BangluongWhereInput = {
    AND?: PC_BangluongWhereInput | PC_BangluongWhereInput[]
    OR?: PC_BangluongWhereInput[]
    NOT?: PC_BangluongWhereInput | PC_BangluongWhereInput[]
    id_bangluong?: IntFilter<"PC_Bangluong"> | number
    id_chinhanh?: StringNullableFilter<"PC_Bangluong"> | string | null
    id_nhanvien?: StringNullableFilter<"PC_Bangluong"> | string | null
    nam_luong?: IntNullableFilter<"PC_Bangluong"> | number | null
    thang_luong?: IntNullableFilter<"PC_Bangluong"> | number | null
    chitiet_luong?: BytesNullableFilter<"PC_Bangluong"> | Buffer | null
    luong_sanpham?: BytesNullableFilter<"PC_Bangluong"> | Buffer | null
    id_nhanvien_upload?: StringNullableFilter<"PC_Bangluong"> | string | null
    ngay_upload?: DateTimeNullableFilter<"PC_Bangluong"> | Date | string | null
  }

  export type PC_BangluongOrderByWithRelationInput = {
    id_bangluong?: SortOrder
    id_chinhanh?: SortOrderInput | SortOrder
    id_nhanvien?: SortOrderInput | SortOrder
    nam_luong?: SortOrderInput | SortOrder
    thang_luong?: SortOrderInput | SortOrder
    chitiet_luong?: SortOrderInput | SortOrder
    luong_sanpham?: SortOrderInput | SortOrder
    id_nhanvien_upload?: SortOrderInput | SortOrder
    ngay_upload?: SortOrderInput | SortOrder
  }

  export type PC_BangluongWhereUniqueInput = Prisma.AtLeast<{
    id_bangluong?: number
    AND?: PC_BangluongWhereInput | PC_BangluongWhereInput[]
    OR?: PC_BangluongWhereInput[]
    NOT?: PC_BangluongWhereInput | PC_BangluongWhereInput[]
    id_chinhanh?: StringNullableFilter<"PC_Bangluong"> | string | null
    id_nhanvien?: StringNullableFilter<"PC_Bangluong"> | string | null
    nam_luong?: IntNullableFilter<"PC_Bangluong"> | number | null
    thang_luong?: IntNullableFilter<"PC_Bangluong"> | number | null
    chitiet_luong?: BytesNullableFilter<"PC_Bangluong"> | Buffer | null
    luong_sanpham?: BytesNullableFilter<"PC_Bangluong"> | Buffer | null
    id_nhanvien_upload?: StringNullableFilter<"PC_Bangluong"> | string | null
    ngay_upload?: DateTimeNullableFilter<"PC_Bangluong"> | Date | string | null
  }, "id_bangluong">

  export type PC_BangluongOrderByWithAggregationInput = {
    id_bangluong?: SortOrder
    id_chinhanh?: SortOrderInput | SortOrder
    id_nhanvien?: SortOrderInput | SortOrder
    nam_luong?: SortOrderInput | SortOrder
    thang_luong?: SortOrderInput | SortOrder
    chitiet_luong?: SortOrderInput | SortOrder
    luong_sanpham?: SortOrderInput | SortOrder
    id_nhanvien_upload?: SortOrderInput | SortOrder
    ngay_upload?: SortOrderInput | SortOrder
    _count?: PC_BangluongCountOrderByAggregateInput
    _avg?: PC_BangluongAvgOrderByAggregateInput
    _max?: PC_BangluongMaxOrderByAggregateInput
    _min?: PC_BangluongMinOrderByAggregateInput
    _sum?: PC_BangluongSumOrderByAggregateInput
  }

  export type PC_BangluongScalarWhereWithAggregatesInput = {
    AND?: PC_BangluongScalarWhereWithAggregatesInput | PC_BangluongScalarWhereWithAggregatesInput[]
    OR?: PC_BangluongScalarWhereWithAggregatesInput[]
    NOT?: PC_BangluongScalarWhereWithAggregatesInput | PC_BangluongScalarWhereWithAggregatesInput[]
    id_bangluong?: IntWithAggregatesFilter<"PC_Bangluong"> | number
    id_chinhanh?: StringNullableWithAggregatesFilter<"PC_Bangluong"> | string | null
    id_nhanvien?: StringNullableWithAggregatesFilter<"PC_Bangluong"> | string | null
    nam_luong?: IntNullableWithAggregatesFilter<"PC_Bangluong"> | number | null
    thang_luong?: IntNullableWithAggregatesFilter<"PC_Bangluong"> | number | null
    chitiet_luong?: BytesNullableWithAggregatesFilter<"PC_Bangluong"> | Buffer | null
    luong_sanpham?: BytesNullableWithAggregatesFilter<"PC_Bangluong"> | Buffer | null
    id_nhanvien_upload?: StringNullableWithAggregatesFilter<"PC_Bangluong"> | string | null
    ngay_upload?: DateTimeNullableWithAggregatesFilter<"PC_Bangluong"> | Date | string | null
  }

  export type PC_BantinWhereInput = {
    AND?: PC_BantinWhereInput | PC_BantinWhereInput[]
    OR?: PC_BantinWhereInput[]
    NOT?: PC_BantinWhereInput | PC_BantinWhereInput[]
    id_Bantin?: IntFilter<"PC_Bantin"> | number
    Tieude?: StringNullableFilter<"PC_Bantin"> | string | null
    Tomtat?: StringNullableFilter<"PC_Bantin"> | string | null
    Noidung?: StringNullableFilter<"PC_Bantin"> | string | null
    Url_Images?: StringNullableFilter<"PC_Bantin"> | string | null
    id_Chinhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    id_KP_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    Ten_KP_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    id_To_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    Ten_To_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    id_NV_Them?: StringNullableFilter<"PC_Bantin"> | string | null
    Ngaydang?: DateTimeNullableFilter<"PC_Bantin"> | Date | string | null
    Ngay_Hethan?: DateTimeNullableFilter<"PC_Bantin"> | Date | string | null
    Hienthi_Home?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    Sudung?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    Luotxem?: IntNullableFilter<"PC_Bantin"> | number | null
    Ghim_Bantin?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    Bantin_Tapdoan?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    id_DMPhanloai?: IntNullableFilter<"PC_Bantin"> | number | null
    TenPhanloai?: StringNullableFilter<"PC_Bantin"> | string | null
    id_DMPhanloaiCT?: IntNullableFilter<"PC_Bantin"> | number | null
    TenChitiet?: StringNullableFilter<"PC_Bantin"> | string | null
    Url_Video?: StringNullableFilter<"PC_Bantin"> | string | null
  }

  export type PC_BantinOrderByWithRelationInput = {
    id_Bantin?: SortOrder
    Tieude?: SortOrderInput | SortOrder
    Tomtat?: SortOrderInput | SortOrder
    Noidung?: SortOrderInput | SortOrder
    Url_Images?: SortOrderInput | SortOrder
    id_Chinhanh?: SortOrderInput | SortOrder
    id_KP_Banhanh?: SortOrderInput | SortOrder
    Ten_KP_Banhanh?: SortOrderInput | SortOrder
    id_To_Banhanh?: SortOrderInput | SortOrder
    Ten_To_Banhanh?: SortOrderInput | SortOrder
    id_NV_Them?: SortOrderInput | SortOrder
    Ngaydang?: SortOrderInput | SortOrder
    Ngay_Hethan?: SortOrderInput | SortOrder
    Hienthi_Home?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    Luotxem?: SortOrderInput | SortOrder
    Ghim_Bantin?: SortOrderInput | SortOrder
    Bantin_Tapdoan?: SortOrderInput | SortOrder
    id_DMPhanloai?: SortOrderInput | SortOrder
    TenPhanloai?: SortOrderInput | SortOrder
    id_DMPhanloaiCT?: SortOrderInput | SortOrder
    TenChitiet?: SortOrderInput | SortOrder
    Url_Video?: SortOrderInput | SortOrder
  }

  export type PC_BantinWhereUniqueInput = Prisma.AtLeast<{
    id_Bantin?: number
    AND?: PC_BantinWhereInput | PC_BantinWhereInput[]
    OR?: PC_BantinWhereInput[]
    NOT?: PC_BantinWhereInput | PC_BantinWhereInput[]
    Tieude?: StringNullableFilter<"PC_Bantin"> | string | null
    Tomtat?: StringNullableFilter<"PC_Bantin"> | string | null
    Noidung?: StringNullableFilter<"PC_Bantin"> | string | null
    Url_Images?: StringNullableFilter<"PC_Bantin"> | string | null
    id_Chinhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    id_KP_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    Ten_KP_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    id_To_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    Ten_To_Banhanh?: StringNullableFilter<"PC_Bantin"> | string | null
    id_NV_Them?: StringNullableFilter<"PC_Bantin"> | string | null
    Ngaydang?: DateTimeNullableFilter<"PC_Bantin"> | Date | string | null
    Ngay_Hethan?: DateTimeNullableFilter<"PC_Bantin"> | Date | string | null
    Hienthi_Home?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    Sudung?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    Luotxem?: IntNullableFilter<"PC_Bantin"> | number | null
    Ghim_Bantin?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    Bantin_Tapdoan?: BoolNullableFilter<"PC_Bantin"> | boolean | null
    id_DMPhanloai?: IntNullableFilter<"PC_Bantin"> | number | null
    TenPhanloai?: StringNullableFilter<"PC_Bantin"> | string | null
    id_DMPhanloaiCT?: IntNullableFilter<"PC_Bantin"> | number | null
    TenChitiet?: StringNullableFilter<"PC_Bantin"> | string | null
    Url_Video?: StringNullableFilter<"PC_Bantin"> | string | null
  }, "id_Bantin">

  export type PC_BantinOrderByWithAggregationInput = {
    id_Bantin?: SortOrder
    Tieude?: SortOrderInput | SortOrder
    Tomtat?: SortOrderInput | SortOrder
    Noidung?: SortOrderInput | SortOrder
    Url_Images?: SortOrderInput | SortOrder
    id_Chinhanh?: SortOrderInput | SortOrder
    id_KP_Banhanh?: SortOrderInput | SortOrder
    Ten_KP_Banhanh?: SortOrderInput | SortOrder
    id_To_Banhanh?: SortOrderInput | SortOrder
    Ten_To_Banhanh?: SortOrderInput | SortOrder
    id_NV_Them?: SortOrderInput | SortOrder
    Ngaydang?: SortOrderInput | SortOrder
    Ngay_Hethan?: SortOrderInput | SortOrder
    Hienthi_Home?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    Luotxem?: SortOrderInput | SortOrder
    Ghim_Bantin?: SortOrderInput | SortOrder
    Bantin_Tapdoan?: SortOrderInput | SortOrder
    id_DMPhanloai?: SortOrderInput | SortOrder
    TenPhanloai?: SortOrderInput | SortOrder
    id_DMPhanloaiCT?: SortOrderInput | SortOrder
    TenChitiet?: SortOrderInput | SortOrder
    Url_Video?: SortOrderInput | SortOrder
    _count?: PC_BantinCountOrderByAggregateInput
    _avg?: PC_BantinAvgOrderByAggregateInput
    _max?: PC_BantinMaxOrderByAggregateInput
    _min?: PC_BantinMinOrderByAggregateInput
    _sum?: PC_BantinSumOrderByAggregateInput
  }

  export type PC_BantinScalarWhereWithAggregatesInput = {
    AND?: PC_BantinScalarWhereWithAggregatesInput | PC_BantinScalarWhereWithAggregatesInput[]
    OR?: PC_BantinScalarWhereWithAggregatesInput[]
    NOT?: PC_BantinScalarWhereWithAggregatesInput | PC_BantinScalarWhereWithAggregatesInput[]
    id_Bantin?: IntWithAggregatesFilter<"PC_Bantin"> | number
    Tieude?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Tomtat?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Noidung?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Url_Images?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    id_Chinhanh?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    id_KP_Banhanh?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Ten_KP_Banhanh?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    id_To_Banhanh?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Ten_To_Banhanh?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    id_NV_Them?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Ngaydang?: DateTimeNullableWithAggregatesFilter<"PC_Bantin"> | Date | string | null
    Ngay_Hethan?: DateTimeNullableWithAggregatesFilter<"PC_Bantin"> | Date | string | null
    Hienthi_Home?: BoolNullableWithAggregatesFilter<"PC_Bantin"> | boolean | null
    Sudung?: BoolNullableWithAggregatesFilter<"PC_Bantin"> | boolean | null
    Luotxem?: IntNullableWithAggregatesFilter<"PC_Bantin"> | number | null
    Ghim_Bantin?: BoolNullableWithAggregatesFilter<"PC_Bantin"> | boolean | null
    Bantin_Tapdoan?: BoolNullableWithAggregatesFilter<"PC_Bantin"> | boolean | null
    id_DMPhanloai?: IntNullableWithAggregatesFilter<"PC_Bantin"> | number | null
    TenPhanloai?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    id_DMPhanloaiCT?: IntNullableWithAggregatesFilter<"PC_Bantin"> | number | null
    TenChitiet?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
    Url_Video?: StringNullableWithAggregatesFilter<"PC_Bantin"> | string | null
  }

  export type PC_BenhnhanWhereInput = {
    AND?: PC_BenhnhanWhereInput | PC_BenhnhanWhereInput[]
    OR?: PC_BenhnhanWhereInput[]
    NOT?: PC_BenhnhanWhereInput | PC_BenhnhanWhereInput[]
    id_Benhnhan?: StringFilter<"PC_Benhnhan"> | string
    Hoten?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Ten?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Hotenkhongdau?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Ngaythangnamsinh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Namsinh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Gioitinh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Noilamviec?: StringNullableFilter<"PC_Benhnhan"> | string | null
    SoCMND?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Email?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Dienthoai_didong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_diachi?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_xaphuong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_idXaphuong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_quanhuyen?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_idQuanhuyen?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_tinhthanh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_idTinhthanh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMQuoctich?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Quoctich?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMNghenghiep?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Nghenghiep?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMDantoc?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Dantoc?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMTongiao?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tongiao?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Trangthai?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Cogiadinh?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    Ngaygiotaohoso?: DateTimeNullableFilter<"PC_Benhnhan"> | Date | string | null
    id_Nhanvien?: StringNullableFilter<"PC_Benhnhan"> | string | null
    DCNuocngoai?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    id_ChiNhanh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_BenhnhanMoi?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_BenhnhanMe?: StringNullableFilter<"PC_Benhnhan"> | string | null
    MahosoIVF?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_Ten?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_DiaChi?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_SoDienThoai?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_QuanHe?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_Para?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_TienSuBanThan?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_TienSuGD?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_SanhTaiBV?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    BNTT_DuocSinhTaiBV?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    BNTT_MaTiemngua?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_ChoTrung?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    BNTT_NhanTrung_TenVo?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_NamsinhVo?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_TenChong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_NamsinhChong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Sync_Version?: IntNullableFilter<"PC_Benhnhan"> | number | null
    Sync_Date?: DateTimeNullableFilter<"PC_Benhnhan"> | Date | string | null
    Sync_To_All?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    Sync_By_Branch?: StringNullableFilter<"PC_Benhnhan"> | string | null
  }

  export type PC_BenhnhanOrderByWithRelationInput = {
    id_Benhnhan?: SortOrder
    Hoten?: SortOrderInput | SortOrder
    Ten?: SortOrderInput | SortOrder
    Hotenkhongdau?: SortOrderInput | SortOrder
    Ngaythangnamsinh?: SortOrderInput | SortOrder
    Namsinh?: SortOrderInput | SortOrder
    Gioitinh?: SortOrderInput | SortOrder
    Noilamviec?: SortOrderInput | SortOrder
    SoCMND?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Dienthoai_didong?: SortOrderInput | SortOrder
    Tamtru_diachi?: SortOrderInput | SortOrder
    Tamtru_xaphuong?: SortOrderInput | SortOrder
    Tamtru_idXaphuong?: SortOrderInput | SortOrder
    Tamtru_quanhuyen?: SortOrderInput | SortOrder
    Tamtru_idQuanhuyen?: SortOrderInput | SortOrder
    Tamtru_tinhthanh?: SortOrderInput | SortOrder
    Tamtru_idTinhthanh?: SortOrderInput | SortOrder
    id_DMQuoctich?: SortOrderInput | SortOrder
    Quoctich?: SortOrderInput | SortOrder
    id_DMNghenghiep?: SortOrderInput | SortOrder
    Nghenghiep?: SortOrderInput | SortOrder
    id_DMDantoc?: SortOrderInput | SortOrder
    Dantoc?: SortOrderInput | SortOrder
    id_DMTongiao?: SortOrderInput | SortOrder
    Tongiao?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    Cogiadinh?: SortOrderInput | SortOrder
    Ngaygiotaohoso?: SortOrderInput | SortOrder
    id_Nhanvien?: SortOrderInput | SortOrder
    DCNuocngoai?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    id_BenhnhanMoi?: SortOrderInput | SortOrder
    id_BenhnhanMe?: SortOrderInput | SortOrder
    MahosoIVF?: SortOrderInput | SortOrder
    BNLH_Ten?: SortOrderInput | SortOrder
    BNLH_DiaChi?: SortOrderInput | SortOrder
    BNLH_SoDienThoai?: SortOrderInput | SortOrder
    BNLH_QuanHe?: SortOrderInput | SortOrder
    BNTT_Para?: SortOrderInput | SortOrder
    BNTT_TienSuBanThan?: SortOrderInput | SortOrder
    BNTT_TienSuGD?: SortOrderInput | SortOrder
    BNTT_SanhTaiBV?: SortOrderInput | SortOrder
    BNTT_DuocSinhTaiBV?: SortOrderInput | SortOrder
    BNTT_MaTiemngua?: SortOrderInput | SortOrder
    BNTT_ChoTrung?: SortOrderInput | SortOrder
    BNTT_NhanTrung_TenVo?: SortOrderInput | SortOrder
    BNTT_NhanTrung_NamsinhVo?: SortOrderInput | SortOrder
    BNTT_NhanTrung_TenChong?: SortOrderInput | SortOrder
    BNTT_NhanTrung_NamsinhChong?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_Date?: SortOrderInput | SortOrder
    Sync_To_All?: SortOrderInput | SortOrder
    Sync_By_Branch?: SortOrderInput | SortOrder
  }

  export type PC_BenhnhanWhereUniqueInput = Prisma.AtLeast<{
    id_Benhnhan?: string
    AND?: PC_BenhnhanWhereInput | PC_BenhnhanWhereInput[]
    OR?: PC_BenhnhanWhereInput[]
    NOT?: PC_BenhnhanWhereInput | PC_BenhnhanWhereInput[]
    Hoten?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Ten?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Hotenkhongdau?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Ngaythangnamsinh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Namsinh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Gioitinh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Noilamviec?: StringNullableFilter<"PC_Benhnhan"> | string | null
    SoCMND?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Email?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Dienthoai_didong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_diachi?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_xaphuong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_idXaphuong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_quanhuyen?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_idQuanhuyen?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_tinhthanh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tamtru_idTinhthanh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMQuoctich?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Quoctich?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMNghenghiep?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Nghenghiep?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMDantoc?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Dantoc?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_DMTongiao?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Tongiao?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Trangthai?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Cogiadinh?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    Ngaygiotaohoso?: DateTimeNullableFilter<"PC_Benhnhan"> | Date | string | null
    id_Nhanvien?: StringNullableFilter<"PC_Benhnhan"> | string | null
    DCNuocngoai?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    id_ChiNhanh?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_BenhnhanMoi?: StringNullableFilter<"PC_Benhnhan"> | string | null
    id_BenhnhanMe?: StringNullableFilter<"PC_Benhnhan"> | string | null
    MahosoIVF?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_Ten?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_DiaChi?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_SoDienThoai?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNLH_QuanHe?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_Para?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_TienSuBanThan?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_TienSuGD?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_SanhTaiBV?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    BNTT_DuocSinhTaiBV?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    BNTT_MaTiemngua?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_ChoTrung?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    BNTT_NhanTrung_TenVo?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_NamsinhVo?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_TenChong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_NamsinhChong?: StringNullableFilter<"PC_Benhnhan"> | string | null
    Sync_Version?: IntNullableFilter<"PC_Benhnhan"> | number | null
    Sync_Date?: DateTimeNullableFilter<"PC_Benhnhan"> | Date | string | null
    Sync_To_All?: BoolNullableFilter<"PC_Benhnhan"> | boolean | null
    Sync_By_Branch?: StringNullableFilter<"PC_Benhnhan"> | string | null
  }, "id_Benhnhan">

  export type PC_BenhnhanOrderByWithAggregationInput = {
    id_Benhnhan?: SortOrder
    Hoten?: SortOrderInput | SortOrder
    Ten?: SortOrderInput | SortOrder
    Hotenkhongdau?: SortOrderInput | SortOrder
    Ngaythangnamsinh?: SortOrderInput | SortOrder
    Namsinh?: SortOrderInput | SortOrder
    Gioitinh?: SortOrderInput | SortOrder
    Noilamviec?: SortOrderInput | SortOrder
    SoCMND?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Dienthoai_didong?: SortOrderInput | SortOrder
    Tamtru_diachi?: SortOrderInput | SortOrder
    Tamtru_xaphuong?: SortOrderInput | SortOrder
    Tamtru_idXaphuong?: SortOrderInput | SortOrder
    Tamtru_quanhuyen?: SortOrderInput | SortOrder
    Tamtru_idQuanhuyen?: SortOrderInput | SortOrder
    Tamtru_tinhthanh?: SortOrderInput | SortOrder
    Tamtru_idTinhthanh?: SortOrderInput | SortOrder
    id_DMQuoctich?: SortOrderInput | SortOrder
    Quoctich?: SortOrderInput | SortOrder
    id_DMNghenghiep?: SortOrderInput | SortOrder
    Nghenghiep?: SortOrderInput | SortOrder
    id_DMDantoc?: SortOrderInput | SortOrder
    Dantoc?: SortOrderInput | SortOrder
    id_DMTongiao?: SortOrderInput | SortOrder
    Tongiao?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    Cogiadinh?: SortOrderInput | SortOrder
    Ngaygiotaohoso?: SortOrderInput | SortOrder
    id_Nhanvien?: SortOrderInput | SortOrder
    DCNuocngoai?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    id_BenhnhanMoi?: SortOrderInput | SortOrder
    id_BenhnhanMe?: SortOrderInput | SortOrder
    MahosoIVF?: SortOrderInput | SortOrder
    BNLH_Ten?: SortOrderInput | SortOrder
    BNLH_DiaChi?: SortOrderInput | SortOrder
    BNLH_SoDienThoai?: SortOrderInput | SortOrder
    BNLH_QuanHe?: SortOrderInput | SortOrder
    BNTT_Para?: SortOrderInput | SortOrder
    BNTT_TienSuBanThan?: SortOrderInput | SortOrder
    BNTT_TienSuGD?: SortOrderInput | SortOrder
    BNTT_SanhTaiBV?: SortOrderInput | SortOrder
    BNTT_DuocSinhTaiBV?: SortOrderInput | SortOrder
    BNTT_MaTiemngua?: SortOrderInput | SortOrder
    BNTT_ChoTrung?: SortOrderInput | SortOrder
    BNTT_NhanTrung_TenVo?: SortOrderInput | SortOrder
    BNTT_NhanTrung_NamsinhVo?: SortOrderInput | SortOrder
    BNTT_NhanTrung_TenChong?: SortOrderInput | SortOrder
    BNTT_NhanTrung_NamsinhChong?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_Date?: SortOrderInput | SortOrder
    Sync_To_All?: SortOrderInput | SortOrder
    Sync_By_Branch?: SortOrderInput | SortOrder
    _count?: PC_BenhnhanCountOrderByAggregateInput
    _avg?: PC_BenhnhanAvgOrderByAggregateInput
    _max?: PC_BenhnhanMaxOrderByAggregateInput
    _min?: PC_BenhnhanMinOrderByAggregateInput
    _sum?: PC_BenhnhanSumOrderByAggregateInput
  }

  export type PC_BenhnhanScalarWhereWithAggregatesInput = {
    AND?: PC_BenhnhanScalarWhereWithAggregatesInput | PC_BenhnhanScalarWhereWithAggregatesInput[]
    OR?: PC_BenhnhanScalarWhereWithAggregatesInput[]
    NOT?: PC_BenhnhanScalarWhereWithAggregatesInput | PC_BenhnhanScalarWhereWithAggregatesInput[]
    id_Benhnhan?: StringWithAggregatesFilter<"PC_Benhnhan"> | string
    Hoten?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Ten?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Hotenkhongdau?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Ngaythangnamsinh?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Namsinh?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Gioitinh?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Noilamviec?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    SoCMND?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Email?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Dienthoai_didong?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_diachi?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_xaphuong?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_idXaphuong?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_quanhuyen?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_idQuanhuyen?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_tinhthanh?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tamtru_idTinhthanh?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    id_DMQuoctich?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Quoctich?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    id_DMNghenghiep?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Nghenghiep?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    id_DMDantoc?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Dantoc?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    id_DMTongiao?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Tongiao?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Trangthai?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Cogiadinh?: BoolNullableWithAggregatesFilter<"PC_Benhnhan"> | boolean | null
    Ngaygiotaohoso?: DateTimeNullableWithAggregatesFilter<"PC_Benhnhan"> | Date | string | null
    id_Nhanvien?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    DCNuocngoai?: BoolNullableWithAggregatesFilter<"PC_Benhnhan"> | boolean | null
    id_ChiNhanh?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    id_BenhnhanMoi?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    id_BenhnhanMe?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    MahosoIVF?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNLH_Ten?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNLH_DiaChi?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNLH_SoDienThoai?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNLH_QuanHe?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_Para?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_TienSuBanThan?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_TienSuGD?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_SanhTaiBV?: BoolNullableWithAggregatesFilter<"PC_Benhnhan"> | boolean | null
    BNTT_DuocSinhTaiBV?: BoolNullableWithAggregatesFilter<"PC_Benhnhan"> | boolean | null
    BNTT_MaTiemngua?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_ChoTrung?: BoolNullableWithAggregatesFilter<"PC_Benhnhan"> | boolean | null
    BNTT_NhanTrung_TenVo?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_NamsinhVo?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_TenChong?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    BNTT_NhanTrung_NamsinhChong?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
    Sync_Version?: IntNullableWithAggregatesFilter<"PC_Benhnhan"> | number | null
    Sync_Date?: DateTimeNullableWithAggregatesFilter<"PC_Benhnhan"> | Date | string | null
    Sync_To_All?: BoolNullableWithAggregatesFilter<"PC_Benhnhan"> | boolean | null
    Sync_By_Branch?: StringNullableWithAggregatesFilter<"PC_Benhnhan"> | string | null
  }

  export type PC_CustomerWhereInput = {
    AND?: PC_CustomerWhereInput | PC_CustomerWhereInput[]
    OR?: PC_CustomerWhereInput[]
    NOT?: PC_CustomerWhereInput | PC_CustomerWhereInput[]
    pcId?: StringFilter<"PC_Customer"> | string
    name?: StringNullableFilter<"PC_Customer"> | string | null
    birthday?: StringNullableFilter<"PC_Customer"> | string | null
    phoneNumber?: StringNullableFilter<"PC_Customer"> | string | null
    gender?: StringNullableFilter<"PC_Customer"> | string | null
    idCardNo?: StringNullableFilter<"PC_Customer"> | string | null
    email?: StringNullableFilter<"PC_Customer"> | string | null
    careerCode?: StringNullableFilter<"PC_Customer"> | string | null
    nationalityCode?: StringNullableFilter<"PC_Customer"> | string | null
    ethnicCode?: StringNullableFilter<"PC_Customer"> | string | null
    countryCode?: StringNullableFilter<"PC_Customer"> | string | null
    cityCode?: StringNullableFilter<"PC_Customer"> | string | null
    districtCode?: StringNullableFilter<"PC_Customer"> | string | null
    wardCode?: StringNullableFilter<"PC_Customer"> | string | null
    homeAddress?: StringNullableFilter<"PC_Customer"> | string | null
    managerId?: StringNullableFilter<"PC_Customer"> | string | null
    status?: StringNullableFilter<"PC_Customer"> | string | null
    createdAt?: DateTimeNullableFilter<"PC_Customer"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PC_Customer"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"PC_Customer"> | Date | string | null
  }

  export type PC_CustomerOrderByWithRelationInput = {
    pcId?: SortOrder
    name?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    idCardNo?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    careerCode?: SortOrderInput | SortOrder
    nationalityCode?: SortOrderInput | SortOrder
    ethnicCode?: SortOrderInput | SortOrder
    countryCode?: SortOrderInput | SortOrder
    cityCode?: SortOrderInput | SortOrder
    districtCode?: SortOrderInput | SortOrder
    wardCode?: SortOrderInput | SortOrder
    homeAddress?: SortOrderInput | SortOrder
    managerId?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
  }

  export type PC_CustomerWhereUniqueInput = Prisma.AtLeast<{
    pcId?: string
    AND?: PC_CustomerWhereInput | PC_CustomerWhereInput[]
    OR?: PC_CustomerWhereInput[]
    NOT?: PC_CustomerWhereInput | PC_CustomerWhereInput[]
    name?: StringNullableFilter<"PC_Customer"> | string | null
    birthday?: StringNullableFilter<"PC_Customer"> | string | null
    phoneNumber?: StringNullableFilter<"PC_Customer"> | string | null
    gender?: StringNullableFilter<"PC_Customer"> | string | null
    idCardNo?: StringNullableFilter<"PC_Customer"> | string | null
    email?: StringNullableFilter<"PC_Customer"> | string | null
    careerCode?: StringNullableFilter<"PC_Customer"> | string | null
    nationalityCode?: StringNullableFilter<"PC_Customer"> | string | null
    ethnicCode?: StringNullableFilter<"PC_Customer"> | string | null
    countryCode?: StringNullableFilter<"PC_Customer"> | string | null
    cityCode?: StringNullableFilter<"PC_Customer"> | string | null
    districtCode?: StringNullableFilter<"PC_Customer"> | string | null
    wardCode?: StringNullableFilter<"PC_Customer"> | string | null
    homeAddress?: StringNullableFilter<"PC_Customer"> | string | null
    managerId?: StringNullableFilter<"PC_Customer"> | string | null
    status?: StringNullableFilter<"PC_Customer"> | string | null
    createdAt?: DateTimeNullableFilter<"PC_Customer"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"PC_Customer"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"PC_Customer"> | Date | string | null
  }, "pcId">

  export type PC_CustomerOrderByWithAggregationInput = {
    pcId?: SortOrder
    name?: SortOrderInput | SortOrder
    birthday?: SortOrderInput | SortOrder
    phoneNumber?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    idCardNo?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    careerCode?: SortOrderInput | SortOrder
    nationalityCode?: SortOrderInput | SortOrder
    ethnicCode?: SortOrderInput | SortOrder
    countryCode?: SortOrderInput | SortOrder
    cityCode?: SortOrderInput | SortOrder
    districtCode?: SortOrderInput | SortOrder
    wardCode?: SortOrderInput | SortOrder
    homeAddress?: SortOrderInput | SortOrder
    managerId?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: PC_CustomerCountOrderByAggregateInput
    _max?: PC_CustomerMaxOrderByAggregateInput
    _min?: PC_CustomerMinOrderByAggregateInput
  }

  export type PC_CustomerScalarWhereWithAggregatesInput = {
    AND?: PC_CustomerScalarWhereWithAggregatesInput | PC_CustomerScalarWhereWithAggregatesInput[]
    OR?: PC_CustomerScalarWhereWithAggregatesInput[]
    NOT?: PC_CustomerScalarWhereWithAggregatesInput | PC_CustomerScalarWhereWithAggregatesInput[]
    pcId?: StringWithAggregatesFilter<"PC_Customer"> | string
    name?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    birthday?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    phoneNumber?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    gender?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    idCardNo?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    email?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    careerCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    nationalityCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    ethnicCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    countryCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    cityCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    districtCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    wardCode?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    homeAddress?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    managerId?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    status?: StringNullableWithAggregatesFilter<"PC_Customer"> | string | null
    createdAt?: DateTimeNullableWithAggregatesFilter<"PC_Customer"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"PC_Customer"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"PC_Customer"> | Date | string | null
  }

  export type PC_HosoIVFWhereInput = {
    AND?: PC_HosoIVFWhereInput | PC_HosoIVFWhereInput[]
    OR?: PC_HosoIVFWhereInput[]
    NOT?: PC_HosoIVFWhereInput | PC_HosoIVFWhereInput[]
    id_HosoIVF?: IntFilter<"PC_HosoIVF"> | number
    MasoHS?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Namluutru?: IntNullableFilter<"PC_HosoIVF"> | number | null
    Sohientai?: IntNullableFilter<"PC_HosoIVF"> | number | null
    id_BN_Vo?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_BN_Chong?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Trangthai?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Ngaytao?: DateTimeNullableFilter<"PC_HosoIVF"> | Date | string | null
    id_nhanvien?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_Khoaphong?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Phanloai?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Ghichu?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_BSGuibenh?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Hoten_BSGuibenh?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_ChiNhanh?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Sync_Version?: IntNullableFilter<"PC_HosoIVF"> | number | null
    Sync_Date?: DateTimeNullableFilter<"PC_HosoIVF"> | Date | string | null
    Sync_To_All?: BoolNullableFilter<"PC_HosoIVF"> | boolean | null
    Sync_By_Branch?: StringNullableFilter<"PC_HosoIVF"> | string | null
  }

  export type PC_HosoIVFOrderByWithRelationInput = {
    id_HosoIVF?: SortOrder
    MasoHS?: SortOrderInput | SortOrder
    Namluutru?: SortOrderInput | SortOrder
    Sohientai?: SortOrderInput | SortOrder
    id_BN_Vo?: SortOrderInput | SortOrder
    id_BN_Chong?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    Ngaytao?: SortOrderInput | SortOrder
    id_nhanvien?: SortOrderInput | SortOrder
    id_Khoaphong?: SortOrderInput | SortOrder
    Phanloai?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    id_BSGuibenh?: SortOrderInput | SortOrder
    Hoten_BSGuibenh?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_Date?: SortOrderInput | SortOrder
    Sync_To_All?: SortOrderInput | SortOrder
    Sync_By_Branch?: SortOrderInput | SortOrder
  }

  export type PC_HosoIVFWhereUniqueInput = Prisma.AtLeast<{
    id_HosoIVF?: number
    AND?: PC_HosoIVFWhereInput | PC_HosoIVFWhereInput[]
    OR?: PC_HosoIVFWhereInput[]
    NOT?: PC_HosoIVFWhereInput | PC_HosoIVFWhereInput[]
    MasoHS?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Namluutru?: IntNullableFilter<"PC_HosoIVF"> | number | null
    Sohientai?: IntNullableFilter<"PC_HosoIVF"> | number | null
    id_BN_Vo?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_BN_Chong?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Trangthai?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Ngaytao?: DateTimeNullableFilter<"PC_HosoIVF"> | Date | string | null
    id_nhanvien?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_Khoaphong?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Phanloai?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Ghichu?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_BSGuibenh?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Hoten_BSGuibenh?: StringNullableFilter<"PC_HosoIVF"> | string | null
    id_ChiNhanh?: StringNullableFilter<"PC_HosoIVF"> | string | null
    Sync_Version?: IntNullableFilter<"PC_HosoIVF"> | number | null
    Sync_Date?: DateTimeNullableFilter<"PC_HosoIVF"> | Date | string | null
    Sync_To_All?: BoolNullableFilter<"PC_HosoIVF"> | boolean | null
    Sync_By_Branch?: StringNullableFilter<"PC_HosoIVF"> | string | null
  }, "id_HosoIVF">

  export type PC_HosoIVFOrderByWithAggregationInput = {
    id_HosoIVF?: SortOrder
    MasoHS?: SortOrderInput | SortOrder
    Namluutru?: SortOrderInput | SortOrder
    Sohientai?: SortOrderInput | SortOrder
    id_BN_Vo?: SortOrderInput | SortOrder
    id_BN_Chong?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    Ngaytao?: SortOrderInput | SortOrder
    id_nhanvien?: SortOrderInput | SortOrder
    id_Khoaphong?: SortOrderInput | SortOrder
    Phanloai?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    id_BSGuibenh?: SortOrderInput | SortOrder
    Hoten_BSGuibenh?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_Date?: SortOrderInput | SortOrder
    Sync_To_All?: SortOrderInput | SortOrder
    Sync_By_Branch?: SortOrderInput | SortOrder
    _count?: PC_HosoIVFCountOrderByAggregateInput
    _avg?: PC_HosoIVFAvgOrderByAggregateInput
    _max?: PC_HosoIVFMaxOrderByAggregateInput
    _min?: PC_HosoIVFMinOrderByAggregateInput
    _sum?: PC_HosoIVFSumOrderByAggregateInput
  }

  export type PC_HosoIVFScalarWhereWithAggregatesInput = {
    AND?: PC_HosoIVFScalarWhereWithAggregatesInput | PC_HosoIVFScalarWhereWithAggregatesInput[]
    OR?: PC_HosoIVFScalarWhereWithAggregatesInput[]
    NOT?: PC_HosoIVFScalarWhereWithAggregatesInput | PC_HosoIVFScalarWhereWithAggregatesInput[]
    id_HosoIVF?: IntWithAggregatesFilter<"PC_HosoIVF"> | number
    MasoHS?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Namluutru?: IntNullableWithAggregatesFilter<"PC_HosoIVF"> | number | null
    Sohientai?: IntNullableWithAggregatesFilter<"PC_HosoIVF"> | number | null
    id_BN_Vo?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    id_BN_Chong?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Trangthai?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Ngaytao?: DateTimeNullableWithAggregatesFilter<"PC_HosoIVF"> | Date | string | null
    id_nhanvien?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    id_Khoaphong?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Phanloai?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Ghichu?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    id_BSGuibenh?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Hoten_BSGuibenh?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    id_ChiNhanh?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
    Sync_Version?: IntNullableWithAggregatesFilter<"PC_HosoIVF"> | number | null
    Sync_Date?: DateTimeNullableWithAggregatesFilter<"PC_HosoIVF"> | Date | string | null
    Sync_To_All?: BoolNullableWithAggregatesFilter<"PC_HosoIVF"> | boolean | null
    Sync_By_Branch?: StringNullableWithAggregatesFilter<"PC_HosoIVF"> | string | null
  }

  export type PC_ModuleWhereInput = {
    AND?: PC_ModuleWhereInput | PC_ModuleWhereInput[]
    OR?: PC_ModuleWhereInput[]
    NOT?: PC_ModuleWhereInput | PC_ModuleWhereInput[]
    id_Module?: IntFilter<"PC_Module"> | number
    enumModule?: StringNullableFilter<"PC_Module"> | string | null
    TenModule?: StringNullableFilter<"PC_Module"> | string | null
    Loai_Ungdung?: StringNullableFilter<"PC_Module"> | string | null
  }

  export type PC_ModuleOrderByWithRelationInput = {
    id_Module?: SortOrder
    enumModule?: SortOrderInput | SortOrder
    TenModule?: SortOrderInput | SortOrder
    Loai_Ungdung?: SortOrderInput | SortOrder
  }

  export type PC_ModuleWhereUniqueInput = Prisma.AtLeast<{
    id_Module?: number
    AND?: PC_ModuleWhereInput | PC_ModuleWhereInput[]
    OR?: PC_ModuleWhereInput[]
    NOT?: PC_ModuleWhereInput | PC_ModuleWhereInput[]
    enumModule?: StringNullableFilter<"PC_Module"> | string | null
    TenModule?: StringNullableFilter<"PC_Module"> | string | null
    Loai_Ungdung?: StringNullableFilter<"PC_Module"> | string | null
  }, "id_Module">

  export type PC_ModuleOrderByWithAggregationInput = {
    id_Module?: SortOrder
    enumModule?: SortOrderInput | SortOrder
    TenModule?: SortOrderInput | SortOrder
    Loai_Ungdung?: SortOrderInput | SortOrder
    _count?: PC_ModuleCountOrderByAggregateInput
    _avg?: PC_ModuleAvgOrderByAggregateInput
    _max?: PC_ModuleMaxOrderByAggregateInput
    _min?: PC_ModuleMinOrderByAggregateInput
    _sum?: PC_ModuleSumOrderByAggregateInput
  }

  export type PC_ModuleScalarWhereWithAggregatesInput = {
    AND?: PC_ModuleScalarWhereWithAggregatesInput | PC_ModuleScalarWhereWithAggregatesInput[]
    OR?: PC_ModuleScalarWhereWithAggregatesInput[]
    NOT?: PC_ModuleScalarWhereWithAggregatesInput | PC_ModuleScalarWhereWithAggregatesInput[]
    id_Module?: IntWithAggregatesFilter<"PC_Module"> | number
    enumModule?: StringNullableWithAggregatesFilter<"PC_Module"> | string | null
    TenModule?: StringNullableWithAggregatesFilter<"PC_Module"> | string | null
    Loai_Ungdung?: StringNullableWithAggregatesFilter<"PC_Module"> | string | null
  }

  export type PC_Module_NhomTKWhereInput = {
    AND?: PC_Module_NhomTKWhereInput | PC_Module_NhomTKWhereInput[]
    OR?: PC_Module_NhomTKWhereInput[]
    NOT?: PC_Module_NhomTKWhereInput | PC_Module_NhomTKWhereInput[]
    id_MDNhom?: IntFilter<"PC_Module_NhomTK"> | number
    enum_Module?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
    enum_NhomTK?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
    Mod_Xem?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Them?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Sua?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Xoa?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Xuat?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Ghichu?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
    Loai_Ungdung?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
  }

  export type PC_Module_NhomTKOrderByWithRelationInput = {
    id_MDNhom?: SortOrder
    enum_Module?: SortOrderInput | SortOrder
    enum_NhomTK?: SortOrderInput | SortOrder
    Mod_Xem?: SortOrderInput | SortOrder
    Mod_Them?: SortOrderInput | SortOrder
    Mod_Sua?: SortOrderInput | SortOrder
    Mod_Xoa?: SortOrderInput | SortOrder
    Mod_Xuat?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Loai_Ungdung?: SortOrderInput | SortOrder
  }

  export type PC_Module_NhomTKWhereUniqueInput = Prisma.AtLeast<{
    id_MDNhom?: number
    AND?: PC_Module_NhomTKWhereInput | PC_Module_NhomTKWhereInput[]
    OR?: PC_Module_NhomTKWhereInput[]
    NOT?: PC_Module_NhomTKWhereInput | PC_Module_NhomTKWhereInput[]
    enum_Module?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
    enum_NhomTK?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
    Mod_Xem?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Them?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Sua?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Xoa?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Xuat?: BoolNullableFilter<"PC_Module_NhomTK"> | boolean | null
    Ghichu?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
    Loai_Ungdung?: StringNullableFilter<"PC_Module_NhomTK"> | string | null
  }, "id_MDNhom">

  export type PC_Module_NhomTKOrderByWithAggregationInput = {
    id_MDNhom?: SortOrder
    enum_Module?: SortOrderInput | SortOrder
    enum_NhomTK?: SortOrderInput | SortOrder
    Mod_Xem?: SortOrderInput | SortOrder
    Mod_Them?: SortOrderInput | SortOrder
    Mod_Sua?: SortOrderInput | SortOrder
    Mod_Xoa?: SortOrderInput | SortOrder
    Mod_Xuat?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Loai_Ungdung?: SortOrderInput | SortOrder
    _count?: PC_Module_NhomTKCountOrderByAggregateInput
    _avg?: PC_Module_NhomTKAvgOrderByAggregateInput
    _max?: PC_Module_NhomTKMaxOrderByAggregateInput
    _min?: PC_Module_NhomTKMinOrderByAggregateInput
    _sum?: PC_Module_NhomTKSumOrderByAggregateInput
  }

  export type PC_Module_NhomTKScalarWhereWithAggregatesInput = {
    AND?: PC_Module_NhomTKScalarWhereWithAggregatesInput | PC_Module_NhomTKScalarWhereWithAggregatesInput[]
    OR?: PC_Module_NhomTKScalarWhereWithAggregatesInput[]
    NOT?: PC_Module_NhomTKScalarWhereWithAggregatesInput | PC_Module_NhomTKScalarWhereWithAggregatesInput[]
    id_MDNhom?: IntWithAggregatesFilter<"PC_Module_NhomTK"> | number
    enum_Module?: StringNullableWithAggregatesFilter<"PC_Module_NhomTK"> | string | null
    enum_NhomTK?: StringNullableWithAggregatesFilter<"PC_Module_NhomTK"> | string | null
    Mod_Xem?: BoolNullableWithAggregatesFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Them?: BoolNullableWithAggregatesFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Sua?: BoolNullableWithAggregatesFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Xoa?: BoolNullableWithAggregatesFilter<"PC_Module_NhomTK"> | boolean | null
    Mod_Xuat?: BoolNullableWithAggregatesFilter<"PC_Module_NhomTK"> | boolean | null
    Ghichu?: StringNullableWithAggregatesFilter<"PC_Module_NhomTK"> | string | null
    Loai_Ungdung?: StringNullableWithAggregatesFilter<"PC_Module_NhomTK"> | string | null
  }

  export type PC_NhanvienWhereInput = {
    AND?: PC_NhanvienWhereInput | PC_NhanvienWhereInput[]
    OR?: PC_NhanvienWhereInput[]
    NOT?: PC_NhanvienWhereInput | PC_NhanvienWhereInput[]
    ID_Nhanvien?: StringFilter<"PC_Nhanvien"> | string
    Hoten?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ten?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ngaysinh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Namsinh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Gioitinh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Dienthoai?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Email?: StringNullableFilter<"PC_Nhanvien"> | string | null
    ID_NhomNV?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ten_NhomNV?: StringNullableFilter<"PC_Nhanvien"> | string | null
    id_DMPhongban?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Phongban?: StringNullableFilter<"PC_Nhanvien"> | string | null
    id_DMTonhom?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Tonhom?: StringNullableFilter<"PC_Nhanvien"> | string | null
    ID_Chinhanh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Diachi?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Trangthai?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ngayvaolam?: DateTimeNullableFilter<"PC_Nhanvien"> | Date | string | null
    AnhProfile?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Sync_Version?: IntNullableFilter<"PC_Nhanvien"> | number | null
    Sync_End?: BoolNullableFilter<"PC_Nhanvien"> | boolean | null
  }

  export type PC_NhanvienOrderByWithRelationInput = {
    ID_Nhanvien?: SortOrder
    Hoten?: SortOrderInput | SortOrder
    Ten?: SortOrderInput | SortOrder
    Ngaysinh?: SortOrderInput | SortOrder
    Namsinh?: SortOrderInput | SortOrder
    Gioitinh?: SortOrderInput | SortOrder
    Dienthoai?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    ID_NhomNV?: SortOrderInput | SortOrder
    Ten_NhomNV?: SortOrderInput | SortOrder
    id_DMPhongban?: SortOrderInput | SortOrder
    Phongban?: SortOrderInput | SortOrder
    id_DMTonhom?: SortOrderInput | SortOrder
    Tonhom?: SortOrderInput | SortOrder
    ID_Chinhanh?: SortOrderInput | SortOrder
    Diachi?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    Ngayvaolam?: SortOrderInput | SortOrder
    AnhProfile?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_End?: SortOrderInput | SortOrder
  }

  export type PC_NhanvienWhereUniqueInput = Prisma.AtLeast<{
    ID_Nhanvien?: string
    AND?: PC_NhanvienWhereInput | PC_NhanvienWhereInput[]
    OR?: PC_NhanvienWhereInput[]
    NOT?: PC_NhanvienWhereInput | PC_NhanvienWhereInput[]
    Hoten?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ten?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ngaysinh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Namsinh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Gioitinh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Dienthoai?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Email?: StringNullableFilter<"PC_Nhanvien"> | string | null
    ID_NhomNV?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ten_NhomNV?: StringNullableFilter<"PC_Nhanvien"> | string | null
    id_DMPhongban?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Phongban?: StringNullableFilter<"PC_Nhanvien"> | string | null
    id_DMTonhom?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Tonhom?: StringNullableFilter<"PC_Nhanvien"> | string | null
    ID_Chinhanh?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Diachi?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Trangthai?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Ngayvaolam?: DateTimeNullableFilter<"PC_Nhanvien"> | Date | string | null
    AnhProfile?: StringNullableFilter<"PC_Nhanvien"> | string | null
    Sync_Version?: IntNullableFilter<"PC_Nhanvien"> | number | null
    Sync_End?: BoolNullableFilter<"PC_Nhanvien"> | boolean | null
  }, "ID_Nhanvien">

  export type PC_NhanvienOrderByWithAggregationInput = {
    ID_Nhanvien?: SortOrder
    Hoten?: SortOrderInput | SortOrder
    Ten?: SortOrderInput | SortOrder
    Ngaysinh?: SortOrderInput | SortOrder
    Namsinh?: SortOrderInput | SortOrder
    Gioitinh?: SortOrderInput | SortOrder
    Dienthoai?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    ID_NhomNV?: SortOrderInput | SortOrder
    Ten_NhomNV?: SortOrderInput | SortOrder
    id_DMPhongban?: SortOrderInput | SortOrder
    Phongban?: SortOrderInput | SortOrder
    id_DMTonhom?: SortOrderInput | SortOrder
    Tonhom?: SortOrderInput | SortOrder
    ID_Chinhanh?: SortOrderInput | SortOrder
    Diachi?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    Ngayvaolam?: SortOrderInput | SortOrder
    AnhProfile?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_End?: SortOrderInput | SortOrder
    _count?: PC_NhanvienCountOrderByAggregateInput
    _avg?: PC_NhanvienAvgOrderByAggregateInput
    _max?: PC_NhanvienMaxOrderByAggregateInput
    _min?: PC_NhanvienMinOrderByAggregateInput
    _sum?: PC_NhanvienSumOrderByAggregateInput
  }

  export type PC_NhanvienScalarWhereWithAggregatesInput = {
    AND?: PC_NhanvienScalarWhereWithAggregatesInput | PC_NhanvienScalarWhereWithAggregatesInput[]
    OR?: PC_NhanvienScalarWhereWithAggregatesInput[]
    NOT?: PC_NhanvienScalarWhereWithAggregatesInput | PC_NhanvienScalarWhereWithAggregatesInput[]
    ID_Nhanvien?: StringWithAggregatesFilter<"PC_Nhanvien"> | string
    Hoten?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Ten?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Ngaysinh?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Namsinh?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Gioitinh?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Dienthoai?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Email?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    ID_NhomNV?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Ten_NhomNV?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    id_DMPhongban?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Phongban?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    id_DMTonhom?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Tonhom?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    ID_Chinhanh?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Diachi?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Trangthai?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Ngayvaolam?: DateTimeNullableWithAggregatesFilter<"PC_Nhanvien"> | Date | string | null
    AnhProfile?: StringNullableWithAggregatesFilter<"PC_Nhanvien"> | string | null
    Sync_Version?: IntNullableWithAggregatesFilter<"PC_Nhanvien"> | number | null
    Sync_End?: BoolNullableWithAggregatesFilter<"PC_Nhanvien"> | boolean | null
  }

  export type PC_Nhanvien_MediaWhereInput = {
    AND?: PC_Nhanvien_MediaWhereInput | PC_Nhanvien_MediaWhereInput[]
    OR?: PC_Nhanvien_MediaWhereInput[]
    NOT?: PC_Nhanvien_MediaWhereInput | PC_Nhanvien_MediaWhereInput[]
    id_Nhanvien?: StringFilter<"PC_Nhanvien_Media"> | string
    AnhProfile?: BytesNullableFilter<"PC_Nhanvien_Media"> | Buffer | null
  }

  export type PC_Nhanvien_MediaOrderByWithRelationInput = {
    id_Nhanvien?: SortOrder
    AnhProfile?: SortOrderInput | SortOrder
  }

  export type PC_Nhanvien_MediaWhereUniqueInput = Prisma.AtLeast<{
    id_Nhanvien?: string
    AND?: PC_Nhanvien_MediaWhereInput | PC_Nhanvien_MediaWhereInput[]
    OR?: PC_Nhanvien_MediaWhereInput[]
    NOT?: PC_Nhanvien_MediaWhereInput | PC_Nhanvien_MediaWhereInput[]
    AnhProfile?: BytesNullableFilter<"PC_Nhanvien_Media"> | Buffer | null
  }, "id_Nhanvien">

  export type PC_Nhanvien_MediaOrderByWithAggregationInput = {
    id_Nhanvien?: SortOrder
    AnhProfile?: SortOrderInput | SortOrder
    _count?: PC_Nhanvien_MediaCountOrderByAggregateInput
    _max?: PC_Nhanvien_MediaMaxOrderByAggregateInput
    _min?: PC_Nhanvien_MediaMinOrderByAggregateInput
  }

  export type PC_Nhanvien_MediaScalarWhereWithAggregatesInput = {
    AND?: PC_Nhanvien_MediaScalarWhereWithAggregatesInput | PC_Nhanvien_MediaScalarWhereWithAggregatesInput[]
    OR?: PC_Nhanvien_MediaScalarWhereWithAggregatesInput[]
    NOT?: PC_Nhanvien_MediaScalarWhereWithAggregatesInput | PC_Nhanvien_MediaScalarWhereWithAggregatesInput[]
    id_Nhanvien?: StringWithAggregatesFilter<"PC_Nhanvien_Media"> | string
    AnhProfile?: BytesNullableWithAggregatesFilter<"PC_Nhanvien_Media"> | Buffer | null
  }

  export type PC_NhomTaikhoanWhereInput = {
    AND?: PC_NhomTaikhoanWhereInput | PC_NhomTaikhoanWhereInput[]
    OR?: PC_NhomTaikhoanWhereInput[]
    NOT?: PC_NhomTaikhoanWhereInput | PC_NhomTaikhoanWhereInput[]
    id_NhomTK?: IntFilter<"PC_NhomTaikhoan"> | number
    enumNhom?: StringNullableFilter<"PC_NhomTaikhoan"> | string | null
    TenNhom?: StringNullableFilter<"PC_NhomTaikhoan"> | string | null
    Sudung?: BoolNullableFilter<"PC_NhomTaikhoan"> | boolean | null
  }

  export type PC_NhomTaikhoanOrderByWithRelationInput = {
    id_NhomTK?: SortOrder
    enumNhom?: SortOrderInput | SortOrder
    TenNhom?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
  }

  export type PC_NhomTaikhoanWhereUniqueInput = Prisma.AtLeast<{
    id_NhomTK?: number
    AND?: PC_NhomTaikhoanWhereInput | PC_NhomTaikhoanWhereInput[]
    OR?: PC_NhomTaikhoanWhereInput[]
    NOT?: PC_NhomTaikhoanWhereInput | PC_NhomTaikhoanWhereInput[]
    enumNhom?: StringNullableFilter<"PC_NhomTaikhoan"> | string | null
    TenNhom?: StringNullableFilter<"PC_NhomTaikhoan"> | string | null
    Sudung?: BoolNullableFilter<"PC_NhomTaikhoan"> | boolean | null
  }, "id_NhomTK">

  export type PC_NhomTaikhoanOrderByWithAggregationInput = {
    id_NhomTK?: SortOrder
    enumNhom?: SortOrderInput | SortOrder
    TenNhom?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    _count?: PC_NhomTaikhoanCountOrderByAggregateInput
    _avg?: PC_NhomTaikhoanAvgOrderByAggregateInput
    _max?: PC_NhomTaikhoanMaxOrderByAggregateInput
    _min?: PC_NhomTaikhoanMinOrderByAggregateInput
    _sum?: PC_NhomTaikhoanSumOrderByAggregateInput
  }

  export type PC_NhomTaikhoanScalarWhereWithAggregatesInput = {
    AND?: PC_NhomTaikhoanScalarWhereWithAggregatesInput | PC_NhomTaikhoanScalarWhereWithAggregatesInput[]
    OR?: PC_NhomTaikhoanScalarWhereWithAggregatesInput[]
    NOT?: PC_NhomTaikhoanScalarWhereWithAggregatesInput | PC_NhomTaikhoanScalarWhereWithAggregatesInput[]
    id_NhomTK?: IntWithAggregatesFilter<"PC_NhomTaikhoan"> | number
    enumNhom?: StringNullableWithAggregatesFilter<"PC_NhomTaikhoan"> | string | null
    TenNhom?: StringNullableWithAggregatesFilter<"PC_NhomTaikhoan"> | string | null
    Sudung?: BoolNullableWithAggregatesFilter<"PC_NhomTaikhoan"> | boolean | null
  }

  export type PC_PhienbanWhereInput = {
    AND?: PC_PhienbanWhereInput | PC_PhienbanWhereInput[]
    OR?: PC_PhienbanWhereInput[]
    NOT?: PC_PhienbanWhereInput | PC_PhienbanWhereInput[]
    ID_Phienban?: StringFilter<"PC_Phienban"> | string
    Ten?: StringNullableFilter<"PC_Phienban"> | string | null
    Ngayphathanh?: DateTimeNullableFilter<"PC_Phienban"> | Date | string | null
    Duongdan?: StringNullableFilter<"PC_Phienban"> | string | null
    Kichhoat?: BoolNullableFilter<"PC_Phienban"> | boolean | null
    Ghichu?: StringNullableFilter<"PC_Phienban"> | string | null
  }

  export type PC_PhienbanOrderByWithRelationInput = {
    ID_Phienban?: SortOrder
    Ten?: SortOrderInput | SortOrder
    Ngayphathanh?: SortOrderInput | SortOrder
    Duongdan?: SortOrderInput | SortOrder
    Kichhoat?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
  }

  export type PC_PhienbanWhereUniqueInput = Prisma.AtLeast<{
    ID_Phienban?: string
    AND?: PC_PhienbanWhereInput | PC_PhienbanWhereInput[]
    OR?: PC_PhienbanWhereInput[]
    NOT?: PC_PhienbanWhereInput | PC_PhienbanWhereInput[]
    Ten?: StringNullableFilter<"PC_Phienban"> | string | null
    Ngayphathanh?: DateTimeNullableFilter<"PC_Phienban"> | Date | string | null
    Duongdan?: StringNullableFilter<"PC_Phienban"> | string | null
    Kichhoat?: BoolNullableFilter<"PC_Phienban"> | boolean | null
    Ghichu?: StringNullableFilter<"PC_Phienban"> | string | null
  }, "ID_Phienban">

  export type PC_PhienbanOrderByWithAggregationInput = {
    ID_Phienban?: SortOrder
    Ten?: SortOrderInput | SortOrder
    Ngayphathanh?: SortOrderInput | SortOrder
    Duongdan?: SortOrderInput | SortOrder
    Kichhoat?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    _count?: PC_PhienbanCountOrderByAggregateInput
    _max?: PC_PhienbanMaxOrderByAggregateInput
    _min?: PC_PhienbanMinOrderByAggregateInput
  }

  export type PC_PhienbanScalarWhereWithAggregatesInput = {
    AND?: PC_PhienbanScalarWhereWithAggregatesInput | PC_PhienbanScalarWhereWithAggregatesInput[]
    OR?: PC_PhienbanScalarWhereWithAggregatesInput[]
    NOT?: PC_PhienbanScalarWhereWithAggregatesInput | PC_PhienbanScalarWhereWithAggregatesInput[]
    ID_Phienban?: StringWithAggregatesFilter<"PC_Phienban"> | string
    Ten?: StringNullableWithAggregatesFilter<"PC_Phienban"> | string | null
    Ngayphathanh?: DateTimeNullableWithAggregatesFilter<"PC_Phienban"> | Date | string | null
    Duongdan?: StringNullableWithAggregatesFilter<"PC_Phienban"> | string | null
    Kichhoat?: BoolNullableWithAggregatesFilter<"PC_Phienban"> | boolean | null
    Ghichu?: StringNullableWithAggregatesFilter<"PC_Phienban"> | string | null
  }

  export type PC_TaikhoanWhereInput = {
    AND?: PC_TaikhoanWhereInput | PC_TaikhoanWhereInput[]
    OR?: PC_TaikhoanWhereInput[]
    NOT?: PC_TaikhoanWhereInput | PC_TaikhoanWhereInput[]
    id_User?: StringFilter<"PC_Taikhoan"> | string
    Password?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Name?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Email?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Device_IMEI?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Device_OS?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Device_Version?: StringNullableFilter<"PC_Taikhoan"> | string | null
    DateCreate?: DateTimeNullableFilter<"PC_Taikhoan"> | Date | string | null
    DaDoiPass?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Active?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Disable?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    LastLogin?: DateTimeNullableFilter<"PC_Taikhoan"> | Date | string | null
    LastLogin_Web?: DateTimeNullableFilter<"PC_Taikhoan"> | Date | string | null
    Login_App?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Login_Web?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Avatar?: StringNullableFilter<"PC_Taikhoan"> | string | null
    ID_ChiNhanh?: StringNullableFilter<"PC_Taikhoan"> | string | null
  }

  export type PC_TaikhoanOrderByWithRelationInput = {
    id_User?: SortOrder
    Password?: SortOrderInput | SortOrder
    Name?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Device_IMEI?: SortOrderInput | SortOrder
    Device_OS?: SortOrderInput | SortOrder
    Device_Version?: SortOrderInput | SortOrder
    DateCreate?: SortOrderInput | SortOrder
    DaDoiPass?: SortOrderInput | SortOrder
    Active?: SortOrderInput | SortOrder
    Disable?: SortOrderInput | SortOrder
    LastLogin?: SortOrderInput | SortOrder
    LastLogin_Web?: SortOrderInput | SortOrder
    Login_App?: SortOrderInput | SortOrder
    Login_Web?: SortOrderInput | SortOrder
    Avatar?: SortOrderInput | SortOrder
    ID_ChiNhanh?: SortOrderInput | SortOrder
  }

  export type PC_TaikhoanWhereUniqueInput = Prisma.AtLeast<{
    id_User?: string
    AND?: PC_TaikhoanWhereInput | PC_TaikhoanWhereInput[]
    OR?: PC_TaikhoanWhereInput[]
    NOT?: PC_TaikhoanWhereInput | PC_TaikhoanWhereInput[]
    Password?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Name?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Email?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Device_IMEI?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Device_OS?: StringNullableFilter<"PC_Taikhoan"> | string | null
    Device_Version?: StringNullableFilter<"PC_Taikhoan"> | string | null
    DateCreate?: DateTimeNullableFilter<"PC_Taikhoan"> | Date | string | null
    DaDoiPass?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Active?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Disable?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    LastLogin?: DateTimeNullableFilter<"PC_Taikhoan"> | Date | string | null
    LastLogin_Web?: DateTimeNullableFilter<"PC_Taikhoan"> | Date | string | null
    Login_App?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Login_Web?: BoolNullableFilter<"PC_Taikhoan"> | boolean | null
    Avatar?: StringNullableFilter<"PC_Taikhoan"> | string | null
    ID_ChiNhanh?: StringNullableFilter<"PC_Taikhoan"> | string | null
  }, "id_User">

  export type PC_TaikhoanOrderByWithAggregationInput = {
    id_User?: SortOrder
    Password?: SortOrderInput | SortOrder
    Name?: SortOrderInput | SortOrder
    Email?: SortOrderInput | SortOrder
    Device_IMEI?: SortOrderInput | SortOrder
    Device_OS?: SortOrderInput | SortOrder
    Device_Version?: SortOrderInput | SortOrder
    DateCreate?: SortOrderInput | SortOrder
    DaDoiPass?: SortOrderInput | SortOrder
    Active?: SortOrderInput | SortOrder
    Disable?: SortOrderInput | SortOrder
    LastLogin?: SortOrderInput | SortOrder
    LastLogin_Web?: SortOrderInput | SortOrder
    Login_App?: SortOrderInput | SortOrder
    Login_Web?: SortOrderInput | SortOrder
    Avatar?: SortOrderInput | SortOrder
    ID_ChiNhanh?: SortOrderInput | SortOrder
    _count?: PC_TaikhoanCountOrderByAggregateInput
    _max?: PC_TaikhoanMaxOrderByAggregateInput
    _min?: PC_TaikhoanMinOrderByAggregateInput
  }

  export type PC_TaikhoanScalarWhereWithAggregatesInput = {
    AND?: PC_TaikhoanScalarWhereWithAggregatesInput | PC_TaikhoanScalarWhereWithAggregatesInput[]
    OR?: PC_TaikhoanScalarWhereWithAggregatesInput[]
    NOT?: PC_TaikhoanScalarWhereWithAggregatesInput | PC_TaikhoanScalarWhereWithAggregatesInput[]
    id_User?: StringWithAggregatesFilter<"PC_Taikhoan"> | string
    Password?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    Name?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    Email?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    Device_IMEI?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    Device_OS?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    Device_Version?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    DateCreate?: DateTimeNullableWithAggregatesFilter<"PC_Taikhoan"> | Date | string | null
    DaDoiPass?: BoolNullableWithAggregatesFilter<"PC_Taikhoan"> | boolean | null
    Active?: BoolNullableWithAggregatesFilter<"PC_Taikhoan"> | boolean | null
    Disable?: BoolNullableWithAggregatesFilter<"PC_Taikhoan"> | boolean | null
    LastLogin?: DateTimeNullableWithAggregatesFilter<"PC_Taikhoan"> | Date | string | null
    LastLogin_Web?: DateTimeNullableWithAggregatesFilter<"PC_Taikhoan"> | Date | string | null
    Login_App?: BoolNullableWithAggregatesFilter<"PC_Taikhoan"> | boolean | null
    Login_Web?: BoolNullableWithAggregatesFilter<"PC_Taikhoan"> | boolean | null
    Avatar?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
    ID_ChiNhanh?: StringNullableWithAggregatesFilter<"PC_Taikhoan"> | string | null
  }

  export type PC_Taikhoan_BangluongWhereInput = {
    AND?: PC_Taikhoan_BangluongWhereInput | PC_Taikhoan_BangluongWhereInput[]
    OR?: PC_Taikhoan_BangluongWhereInput[]
    NOT?: PC_Taikhoan_BangluongWhereInput | PC_Taikhoan_BangluongWhereInput[]
    id?: IntFilter<"PC_Taikhoan_Bangluong"> | number
    id_taikhoan?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    HotenNV?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    id_nhanvien_cap?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    ngaycap?: DateTimeNullableFilter<"PC_Taikhoan_Bangluong"> | Date | string | null
    sdt_nhan_pass?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    da_gui_sms?: BoolNullableFilter<"PC_Taikhoan_Bangluong"> | boolean | null
    trangthai_sms?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    Pass_bill_luong?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
  }

  export type PC_Taikhoan_BangluongOrderByWithRelationInput = {
    id?: SortOrder
    id_taikhoan?: SortOrderInput | SortOrder
    HotenNV?: SortOrderInput | SortOrder
    id_nhanvien_cap?: SortOrderInput | SortOrder
    ngaycap?: SortOrderInput | SortOrder
    sdt_nhan_pass?: SortOrderInput | SortOrder
    da_gui_sms?: SortOrderInput | SortOrder
    trangthai_sms?: SortOrderInput | SortOrder
    Pass_bill_luong?: SortOrderInput | SortOrder
  }

  export type PC_Taikhoan_BangluongWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PC_Taikhoan_BangluongWhereInput | PC_Taikhoan_BangluongWhereInput[]
    OR?: PC_Taikhoan_BangluongWhereInput[]
    NOT?: PC_Taikhoan_BangluongWhereInput | PC_Taikhoan_BangluongWhereInput[]
    id_taikhoan?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    HotenNV?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    id_nhanvien_cap?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    ngaycap?: DateTimeNullableFilter<"PC_Taikhoan_Bangluong"> | Date | string | null
    sdt_nhan_pass?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    da_gui_sms?: BoolNullableFilter<"PC_Taikhoan_Bangluong"> | boolean | null
    trangthai_sms?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
    Pass_bill_luong?: StringNullableFilter<"PC_Taikhoan_Bangluong"> | string | null
  }, "id">

  export type PC_Taikhoan_BangluongOrderByWithAggregationInput = {
    id?: SortOrder
    id_taikhoan?: SortOrderInput | SortOrder
    HotenNV?: SortOrderInput | SortOrder
    id_nhanvien_cap?: SortOrderInput | SortOrder
    ngaycap?: SortOrderInput | SortOrder
    sdt_nhan_pass?: SortOrderInput | SortOrder
    da_gui_sms?: SortOrderInput | SortOrder
    trangthai_sms?: SortOrderInput | SortOrder
    Pass_bill_luong?: SortOrderInput | SortOrder
    _count?: PC_Taikhoan_BangluongCountOrderByAggregateInput
    _avg?: PC_Taikhoan_BangluongAvgOrderByAggregateInput
    _max?: PC_Taikhoan_BangluongMaxOrderByAggregateInput
    _min?: PC_Taikhoan_BangluongMinOrderByAggregateInput
    _sum?: PC_Taikhoan_BangluongSumOrderByAggregateInput
  }

  export type PC_Taikhoan_BangluongScalarWhereWithAggregatesInput = {
    AND?: PC_Taikhoan_BangluongScalarWhereWithAggregatesInput | PC_Taikhoan_BangluongScalarWhereWithAggregatesInput[]
    OR?: PC_Taikhoan_BangluongScalarWhereWithAggregatesInput[]
    NOT?: PC_Taikhoan_BangluongScalarWhereWithAggregatesInput | PC_Taikhoan_BangluongScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | number
    id_taikhoan?: StringNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | string | null
    HotenNV?: StringNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | string | null
    id_nhanvien_cap?: StringNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | string | null
    ngaycap?: DateTimeNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | Date | string | null
    sdt_nhan_pass?: StringNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | string | null
    da_gui_sms?: BoolNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | boolean | null
    trangthai_sms?: StringNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | string | null
    Pass_bill_luong?: StringNullableWithAggregatesFilter<"PC_Taikhoan_Bangluong"> | string | null
  }

  export type PC_ThanhvienWhereInput = {
    AND?: PC_ThanhvienWhereInput | PC_ThanhvienWhereInput[]
    OR?: PC_ThanhvienWhereInput[]
    NOT?: PC_ThanhvienWhereInput | PC_ThanhvienWhereInput[]
    id_TV?: IntFilter<"PC_Thanhvien"> | number
    enum_NhomTK?: StringNullableFilter<"PC_Thanhvien"> | string | null
    id_User?: StringNullableFilter<"PC_Thanhvien"> | string | null
  }

  export type PC_ThanhvienOrderByWithRelationInput = {
    id_TV?: SortOrder
    enum_NhomTK?: SortOrderInput | SortOrder
    id_User?: SortOrderInput | SortOrder
  }

  export type PC_ThanhvienWhereUniqueInput = Prisma.AtLeast<{
    id_TV?: number
    AND?: PC_ThanhvienWhereInput | PC_ThanhvienWhereInput[]
    OR?: PC_ThanhvienWhereInput[]
    NOT?: PC_ThanhvienWhereInput | PC_ThanhvienWhereInput[]
    enum_NhomTK?: StringNullableFilter<"PC_Thanhvien"> | string | null
    id_User?: StringNullableFilter<"PC_Thanhvien"> | string | null
  }, "id_TV">

  export type PC_ThanhvienOrderByWithAggregationInput = {
    id_TV?: SortOrder
    enum_NhomTK?: SortOrderInput | SortOrder
    id_User?: SortOrderInput | SortOrder
    _count?: PC_ThanhvienCountOrderByAggregateInput
    _avg?: PC_ThanhvienAvgOrderByAggregateInput
    _max?: PC_ThanhvienMaxOrderByAggregateInput
    _min?: PC_ThanhvienMinOrderByAggregateInput
    _sum?: PC_ThanhvienSumOrderByAggregateInput
  }

  export type PC_ThanhvienScalarWhereWithAggregatesInput = {
    AND?: PC_ThanhvienScalarWhereWithAggregatesInput | PC_ThanhvienScalarWhereWithAggregatesInput[]
    OR?: PC_ThanhvienScalarWhereWithAggregatesInput[]
    NOT?: PC_ThanhvienScalarWhereWithAggregatesInput | PC_ThanhvienScalarWhereWithAggregatesInput[]
    id_TV?: IntWithAggregatesFilter<"PC_Thanhvien"> | number
    enum_NhomTK?: StringNullableWithAggregatesFilter<"PC_Thanhvien"> | string | null
    id_User?: StringNullableWithAggregatesFilter<"PC_Thanhvien"> | string | null
  }

  export type PC_TheCapphatWhereInput = {
    AND?: PC_TheCapphatWhereInput | PC_TheCapphatWhereInput[]
    OR?: PC_TheCapphatWhereInput[]
    NOT?: PC_TheCapphatWhereInput | PC_TheCapphatWhereInput[]
    id_TheCapphat?: IntFilter<"PC_TheCapphat"> | number
    id_Benhnhan?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Hoten_Benhnhan?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Ngaysinh?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Ngaycapthe?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    id_NVCap?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Hoten_NVCap?: StringNullableFilter<"PC_TheCapphat"> | string | null
    id_Dauthe?: StringNullableFilter<"PC_TheCapphat"> | string | null
    MaThe?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Diem_Congthem?: IntNullableFilter<"PC_TheCapphat"> | number | null
    Lydo_Congdiem?: StringNullableFilter<"PC_TheCapphat"> | string | null
    id_NVCongdiem?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Trangthai?: StringNullableFilter<"PC_TheCapphat"> | string | null
    LydoKhoa?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Ngayhethan?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    DoituongSudung?: StringNullableFilter<"PC_TheCapphat"> | string | null
    TTNguoiNhanThe?: StringNullableFilter<"PC_TheCapphat"> | string | null
    CongdongBau?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Nangcap_PCCARE?: BoolNullableFilter<"PC_TheCapphat"> | boolean | null
    Ngaynang?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    id_ChiNhanh?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Sync_Version?: IntNullableFilter<"PC_TheCapphat"> | number | null
    Sync_Date?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    Sync_To_All?: BoolNullableFilter<"PC_TheCapphat"> | boolean | null
    Sync_By_Branch?: StringNullableFilter<"PC_TheCapphat"> | string | null
  }

  export type PC_TheCapphatOrderByWithRelationInput = {
    id_TheCapphat?: SortOrder
    id_Benhnhan?: SortOrderInput | SortOrder
    Hoten_Benhnhan?: SortOrderInput | SortOrder
    Ngaysinh?: SortOrderInput | SortOrder
    Ngaycapthe?: SortOrderInput | SortOrder
    id_NVCap?: SortOrderInput | SortOrder
    Hoten_NVCap?: SortOrderInput | SortOrder
    id_Dauthe?: SortOrderInput | SortOrder
    MaThe?: SortOrderInput | SortOrder
    Diem_Congthem?: SortOrderInput | SortOrder
    Lydo_Congdiem?: SortOrderInput | SortOrder
    id_NVCongdiem?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    LydoKhoa?: SortOrderInput | SortOrder
    Ngayhethan?: SortOrderInput | SortOrder
    DoituongSudung?: SortOrderInput | SortOrder
    TTNguoiNhanThe?: SortOrderInput | SortOrder
    CongdongBau?: SortOrderInput | SortOrder
    Nangcap_PCCARE?: SortOrderInput | SortOrder
    Ngaynang?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_Date?: SortOrderInput | SortOrder
    Sync_To_All?: SortOrderInput | SortOrder
    Sync_By_Branch?: SortOrderInput | SortOrder
  }

  export type PC_TheCapphatWhereUniqueInput = Prisma.AtLeast<{
    id_TheCapphat?: number
    AND?: PC_TheCapphatWhereInput | PC_TheCapphatWhereInput[]
    OR?: PC_TheCapphatWhereInput[]
    NOT?: PC_TheCapphatWhereInput | PC_TheCapphatWhereInput[]
    id_Benhnhan?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Hoten_Benhnhan?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Ngaysinh?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Ngaycapthe?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    id_NVCap?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Hoten_NVCap?: StringNullableFilter<"PC_TheCapphat"> | string | null
    id_Dauthe?: StringNullableFilter<"PC_TheCapphat"> | string | null
    MaThe?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Diem_Congthem?: IntNullableFilter<"PC_TheCapphat"> | number | null
    Lydo_Congdiem?: StringNullableFilter<"PC_TheCapphat"> | string | null
    id_NVCongdiem?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Trangthai?: StringNullableFilter<"PC_TheCapphat"> | string | null
    LydoKhoa?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Ngayhethan?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    DoituongSudung?: StringNullableFilter<"PC_TheCapphat"> | string | null
    TTNguoiNhanThe?: StringNullableFilter<"PC_TheCapphat"> | string | null
    CongdongBau?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Nangcap_PCCARE?: BoolNullableFilter<"PC_TheCapphat"> | boolean | null
    Ngaynang?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    id_ChiNhanh?: StringNullableFilter<"PC_TheCapphat"> | string | null
    Sync_Version?: IntNullableFilter<"PC_TheCapphat"> | number | null
    Sync_Date?: DateTimeNullableFilter<"PC_TheCapphat"> | Date | string | null
    Sync_To_All?: BoolNullableFilter<"PC_TheCapphat"> | boolean | null
    Sync_By_Branch?: StringNullableFilter<"PC_TheCapphat"> | string | null
  }, "id_TheCapphat">

  export type PC_TheCapphatOrderByWithAggregationInput = {
    id_TheCapphat?: SortOrder
    id_Benhnhan?: SortOrderInput | SortOrder
    Hoten_Benhnhan?: SortOrderInput | SortOrder
    Ngaysinh?: SortOrderInput | SortOrder
    Ngaycapthe?: SortOrderInput | SortOrder
    id_NVCap?: SortOrderInput | SortOrder
    Hoten_NVCap?: SortOrderInput | SortOrder
    id_Dauthe?: SortOrderInput | SortOrder
    MaThe?: SortOrderInput | SortOrder
    Diem_Congthem?: SortOrderInput | SortOrder
    Lydo_Congdiem?: SortOrderInput | SortOrder
    id_NVCongdiem?: SortOrderInput | SortOrder
    Trangthai?: SortOrderInput | SortOrder
    LydoKhoa?: SortOrderInput | SortOrder
    Ngayhethan?: SortOrderInput | SortOrder
    DoituongSudung?: SortOrderInput | SortOrder
    TTNguoiNhanThe?: SortOrderInput | SortOrder
    CongdongBau?: SortOrderInput | SortOrder
    Nangcap_PCCARE?: SortOrderInput | SortOrder
    Ngaynang?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    Sync_Version?: SortOrderInput | SortOrder
    Sync_Date?: SortOrderInput | SortOrder
    Sync_To_All?: SortOrderInput | SortOrder
    Sync_By_Branch?: SortOrderInput | SortOrder
    _count?: PC_TheCapphatCountOrderByAggregateInput
    _avg?: PC_TheCapphatAvgOrderByAggregateInput
    _max?: PC_TheCapphatMaxOrderByAggregateInput
    _min?: PC_TheCapphatMinOrderByAggregateInput
    _sum?: PC_TheCapphatSumOrderByAggregateInput
  }

  export type PC_TheCapphatScalarWhereWithAggregatesInput = {
    AND?: PC_TheCapphatScalarWhereWithAggregatesInput | PC_TheCapphatScalarWhereWithAggregatesInput[]
    OR?: PC_TheCapphatScalarWhereWithAggregatesInput[]
    NOT?: PC_TheCapphatScalarWhereWithAggregatesInput | PC_TheCapphatScalarWhereWithAggregatesInput[]
    id_TheCapphat?: IntWithAggregatesFilter<"PC_TheCapphat"> | number
    id_Benhnhan?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Hoten_Benhnhan?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Ngaysinh?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Ngaycapthe?: DateTimeNullableWithAggregatesFilter<"PC_TheCapphat"> | Date | string | null
    id_NVCap?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Hoten_NVCap?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    id_Dauthe?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    MaThe?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Diem_Congthem?: IntNullableWithAggregatesFilter<"PC_TheCapphat"> | number | null
    Lydo_Congdiem?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    id_NVCongdiem?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Trangthai?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    LydoKhoa?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Ngayhethan?: DateTimeNullableWithAggregatesFilter<"PC_TheCapphat"> | Date | string | null
    DoituongSudung?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    TTNguoiNhanThe?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    CongdongBau?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Nangcap_PCCARE?: BoolNullableWithAggregatesFilter<"PC_TheCapphat"> | boolean | null
    Ngaynang?: DateTimeNullableWithAggregatesFilter<"PC_TheCapphat"> | Date | string | null
    id_ChiNhanh?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
    Sync_Version?: IntNullableWithAggregatesFilter<"PC_TheCapphat"> | number | null
    Sync_Date?: DateTimeNullableWithAggregatesFilter<"PC_TheCapphat"> | Date | string | null
    Sync_To_All?: BoolNullableWithAggregatesFilter<"PC_TheCapphat"> | boolean | null
    Sync_By_Branch?: StringNullableWithAggregatesFilter<"PC_TheCapphat"> | string | null
  }

  export type tbl_PhishingWhereInput = {
    AND?: tbl_PhishingWhereInput | tbl_PhishingWhereInput[]
    OR?: tbl_PhishingWhereInput[]
    NOT?: tbl_PhishingWhereInput | tbl_PhishingWhereInput[]
    id?: IntFilter<"tbl_Phishing"> | number
    userid?: StringNullableFilter<"tbl_Phishing"> | string | null
    username?: StringNullableFilter<"tbl_Phishing"> | string | null
    phone?: StringNullableFilter<"tbl_Phishing"> | string | null
    email?: StringNullableFilter<"tbl_Phishing"> | string | null
    description?: StringNullableFilter<"tbl_Phishing"> | string | null
    branchID?: StringNullableFilter<"tbl_Phishing"> | string | null
    branchName?: StringNullableFilter<"tbl_Phishing"> | string | null
    deptID?: StringNullableFilter<"tbl_Phishing"> | string | null
    deptName?: StringNullableFilter<"tbl_Phishing"> | string | null
  }

  export type tbl_PhishingOrderByWithRelationInput = {
    id?: SortOrder
    userid?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    branchID?: SortOrderInput | SortOrder
    branchName?: SortOrderInput | SortOrder
    deptID?: SortOrderInput | SortOrder
    deptName?: SortOrderInput | SortOrder
  }

  export type tbl_PhishingWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: tbl_PhishingWhereInput | tbl_PhishingWhereInput[]
    OR?: tbl_PhishingWhereInput[]
    NOT?: tbl_PhishingWhereInput | tbl_PhishingWhereInput[]
    userid?: StringNullableFilter<"tbl_Phishing"> | string | null
    username?: StringNullableFilter<"tbl_Phishing"> | string | null
    phone?: StringNullableFilter<"tbl_Phishing"> | string | null
    email?: StringNullableFilter<"tbl_Phishing"> | string | null
    description?: StringNullableFilter<"tbl_Phishing"> | string | null
    branchID?: StringNullableFilter<"tbl_Phishing"> | string | null
    branchName?: StringNullableFilter<"tbl_Phishing"> | string | null
    deptID?: StringNullableFilter<"tbl_Phishing"> | string | null
    deptName?: StringNullableFilter<"tbl_Phishing"> | string | null
  }, "id">

  export type tbl_PhishingOrderByWithAggregationInput = {
    id?: SortOrder
    userid?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    branchID?: SortOrderInput | SortOrder
    branchName?: SortOrderInput | SortOrder
    deptID?: SortOrderInput | SortOrder
    deptName?: SortOrderInput | SortOrder
    _count?: tbl_PhishingCountOrderByAggregateInput
    _avg?: tbl_PhishingAvgOrderByAggregateInput
    _max?: tbl_PhishingMaxOrderByAggregateInput
    _min?: tbl_PhishingMinOrderByAggregateInput
    _sum?: tbl_PhishingSumOrderByAggregateInput
  }

  export type tbl_PhishingScalarWhereWithAggregatesInput = {
    AND?: tbl_PhishingScalarWhereWithAggregatesInput | tbl_PhishingScalarWhereWithAggregatesInput[]
    OR?: tbl_PhishingScalarWhereWithAggregatesInput[]
    NOT?: tbl_PhishingScalarWhereWithAggregatesInput | tbl_PhishingScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tbl_Phishing"> | number
    userid?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    username?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    phone?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    email?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    description?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    branchID?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    branchName?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    deptID?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
    deptName?: StringNullableWithAggregatesFilter<"tbl_Phishing"> | string | null
  }

  export type USER_PORTALWhereInput = {
    AND?: USER_PORTALWhereInput | USER_PORTALWhereInput[]
    OR?: USER_PORTALWhereInput[]
    NOT?: USER_PORTALWhereInput | USER_PORTALWhereInput[]
    PID?: StringFilter<"USER_PORTAL"> | string
    Name?: StringNullableFilter<"USER_PORTAL"> | string | null
  }

  export type USER_PORTALOrderByWithRelationInput = {
    PID?: SortOrder
    Name?: SortOrderInput | SortOrder
  }

  export type USER_PORTALWhereUniqueInput = Prisma.AtLeast<{
    PID?: string
    AND?: USER_PORTALWhereInput | USER_PORTALWhereInput[]
    OR?: USER_PORTALWhereInput[]
    NOT?: USER_PORTALWhereInput | USER_PORTALWhereInput[]
    Name?: StringNullableFilter<"USER_PORTAL"> | string | null
  }, "PID">

  export type USER_PORTALOrderByWithAggregationInput = {
    PID?: SortOrder
    Name?: SortOrderInput | SortOrder
    _count?: USER_PORTALCountOrderByAggregateInput
    _max?: USER_PORTALMaxOrderByAggregateInput
    _min?: USER_PORTALMinOrderByAggregateInput
  }

  export type USER_PORTALScalarWhereWithAggregatesInput = {
    AND?: USER_PORTALScalarWhereWithAggregatesInput | USER_PORTALScalarWhereWithAggregatesInput[]
    OR?: USER_PORTALScalarWhereWithAggregatesInput[]
    NOT?: USER_PORTALScalarWhereWithAggregatesInput | USER_PORTALScalarWhereWithAggregatesInput[]
    PID?: StringWithAggregatesFilter<"USER_PORTAL"> | string
    Name?: StringNullableWithAggregatesFilter<"USER_PORTAL"> | string | null
  }

  export type WS_DMChinhanhWhereInput = {
    AND?: WS_DMChinhanhWhereInput | WS_DMChinhanhWhereInput[]
    OR?: WS_DMChinhanhWhereInput[]
    NOT?: WS_DMChinhanhWhereInput | WS_DMChinhanhWhereInput[]
    ID_ChiNhanh?: StringFilter<"WS_DMChinhanh"> | string
    RSA_Public_Key?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Url_WS?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Ten_ChiNhanh?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMChinhanh"> | boolean | null
    Ghichu?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Url_Webnoibo?: StringNullableFilter<"WS_DMChinhanh"> | string | null
  }

  export type WS_DMChinhanhOrderByWithRelationInput = {
    ID_ChiNhanh?: SortOrder
    RSA_Public_Key?: SortOrderInput | SortOrder
    Url_WS?: SortOrderInput | SortOrder
    Ten_ChiNhanh?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Url_Webnoibo?: SortOrderInput | SortOrder
  }

  export type WS_DMChinhanhWhereUniqueInput = Prisma.AtLeast<{
    ID_ChiNhanh?: string
    AND?: WS_DMChinhanhWhereInput | WS_DMChinhanhWhereInput[]
    OR?: WS_DMChinhanhWhereInput[]
    NOT?: WS_DMChinhanhWhereInput | WS_DMChinhanhWhereInput[]
    RSA_Public_Key?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Url_WS?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Ten_ChiNhanh?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMChinhanh"> | boolean | null
    Ghichu?: StringNullableFilter<"WS_DMChinhanh"> | string | null
    Url_Webnoibo?: StringNullableFilter<"WS_DMChinhanh"> | string | null
  }, "ID_ChiNhanh">

  export type WS_DMChinhanhOrderByWithAggregationInput = {
    ID_ChiNhanh?: SortOrder
    RSA_Public_Key?: SortOrderInput | SortOrder
    Url_WS?: SortOrderInput | SortOrder
    Ten_ChiNhanh?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Url_Webnoibo?: SortOrderInput | SortOrder
    _count?: WS_DMChinhanhCountOrderByAggregateInput
    _max?: WS_DMChinhanhMaxOrderByAggregateInput
    _min?: WS_DMChinhanhMinOrderByAggregateInput
  }

  export type WS_DMChinhanhScalarWhereWithAggregatesInput = {
    AND?: WS_DMChinhanhScalarWhereWithAggregatesInput | WS_DMChinhanhScalarWhereWithAggregatesInput[]
    OR?: WS_DMChinhanhScalarWhereWithAggregatesInput[]
    NOT?: WS_DMChinhanhScalarWhereWithAggregatesInput | WS_DMChinhanhScalarWhereWithAggregatesInput[]
    ID_ChiNhanh?: StringWithAggregatesFilter<"WS_DMChinhanh"> | string
    RSA_Public_Key?: StringNullableWithAggregatesFilter<"WS_DMChinhanh"> | string | null
    Url_WS?: StringNullableWithAggregatesFilter<"WS_DMChinhanh"> | string | null
    Ten_ChiNhanh?: StringNullableWithAggregatesFilter<"WS_DMChinhanh"> | string | null
    Sudung?: BoolNullableWithAggregatesFilter<"WS_DMChinhanh"> | boolean | null
    Ghichu?: StringNullableWithAggregatesFilter<"WS_DMChinhanh"> | string | null
    Url_Webnoibo?: StringNullableWithAggregatesFilter<"WS_DMChinhanh"> | string | null
  }

  export type WS_DMDonviWhereInput = {
    AND?: WS_DMDonviWhereInput | WS_DMDonviWhereInput[]
    OR?: WS_DMDonviWhereInput[]
    NOT?: WS_DMDonviWhereInput | WS_DMDonviWhereInput[]
    id_DMDonvi?: StringFilter<"WS_DMDonvi"> | string
    Ten_Donvi?: StringNullableFilter<"WS_DMDonvi"> | string | null
    id_Khoaphong?: StringNullableFilter<"WS_DMDonvi"> | string | null
    id_ChiNhanh?: StringNullableFilter<"WS_DMDonvi"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMDonvi"> | boolean | null
  }

  export type WS_DMDonviOrderByWithRelationInput = {
    id_DMDonvi?: SortOrder
    Ten_Donvi?: SortOrderInput | SortOrder
    id_Khoaphong?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
  }

  export type WS_DMDonviWhereUniqueInput = Prisma.AtLeast<{
    id_DMDonvi?: string
    AND?: WS_DMDonviWhereInput | WS_DMDonviWhereInput[]
    OR?: WS_DMDonviWhereInput[]
    NOT?: WS_DMDonviWhereInput | WS_DMDonviWhereInput[]
    Ten_Donvi?: StringNullableFilter<"WS_DMDonvi"> | string | null
    id_Khoaphong?: StringNullableFilter<"WS_DMDonvi"> | string | null
    id_ChiNhanh?: StringNullableFilter<"WS_DMDonvi"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMDonvi"> | boolean | null
  }, "id_DMDonvi">

  export type WS_DMDonviOrderByWithAggregationInput = {
    id_DMDonvi?: SortOrder
    Ten_Donvi?: SortOrderInput | SortOrder
    id_Khoaphong?: SortOrderInput | SortOrder
    id_ChiNhanh?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    _count?: WS_DMDonviCountOrderByAggregateInput
    _max?: WS_DMDonviMaxOrderByAggregateInput
    _min?: WS_DMDonviMinOrderByAggregateInput
  }

  export type WS_DMDonviScalarWhereWithAggregatesInput = {
    AND?: WS_DMDonviScalarWhereWithAggregatesInput | WS_DMDonviScalarWhereWithAggregatesInput[]
    OR?: WS_DMDonviScalarWhereWithAggregatesInput[]
    NOT?: WS_DMDonviScalarWhereWithAggregatesInput | WS_DMDonviScalarWhereWithAggregatesInput[]
    id_DMDonvi?: StringWithAggregatesFilter<"WS_DMDonvi"> | string
    Ten_Donvi?: StringNullableWithAggregatesFilter<"WS_DMDonvi"> | string | null
    id_Khoaphong?: StringNullableWithAggregatesFilter<"WS_DMDonvi"> | string | null
    id_ChiNhanh?: StringNullableWithAggregatesFilter<"WS_DMDonvi"> | string | null
    Sudung?: BoolNullableWithAggregatesFilter<"WS_DMDonvi"> | boolean | null
  }

  export type WS_DMKhoaPhongWhereInput = {
    AND?: WS_DMKhoaPhongWhereInput | WS_DMKhoaPhongWhereInput[]
    OR?: WS_DMKhoaPhongWhereInput[]
    NOT?: WS_DMKhoaPhongWhereInput | WS_DMKhoaPhongWhereInput[]
    id_Khoaphong?: StringFilter<"WS_DMKhoaPhong"> | string
    Ten?: StringNullableFilter<"WS_DMKhoaPhong"> | string | null
    id_KPCha?: StringNullableFilter<"WS_DMKhoaPhong"> | string | null
    ID_ChiNhanh?: StringFilter<"WS_DMKhoaPhong"> | string
    Ghichu?: StringNullableFilter<"WS_DMKhoaPhong"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMKhoaPhong"> | boolean | null
    VanHanh?: BoolNullableFilter<"WS_DMKhoaPhong"> | boolean | null
  }

  export type WS_DMKhoaPhongOrderByWithRelationInput = {
    id_Khoaphong?: SortOrder
    Ten?: SortOrderInput | SortOrder
    id_KPCha?: SortOrderInput | SortOrder
    ID_ChiNhanh?: SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    VanHanh?: SortOrderInput | SortOrder
  }

  export type WS_DMKhoaPhongWhereUniqueInput = Prisma.AtLeast<{
    id_Khoaphong_ID_ChiNhanh?: WS_DMKhoaPhongId_KhoaphongID_ChiNhanhCompoundUniqueInput
    AND?: WS_DMKhoaPhongWhereInput | WS_DMKhoaPhongWhereInput[]
    OR?: WS_DMKhoaPhongWhereInput[]
    NOT?: WS_DMKhoaPhongWhereInput | WS_DMKhoaPhongWhereInput[]
    id_Khoaphong?: StringFilter<"WS_DMKhoaPhong"> | string
    Ten?: StringNullableFilter<"WS_DMKhoaPhong"> | string | null
    id_KPCha?: StringNullableFilter<"WS_DMKhoaPhong"> | string | null
    ID_ChiNhanh?: StringFilter<"WS_DMKhoaPhong"> | string
    Ghichu?: StringNullableFilter<"WS_DMKhoaPhong"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMKhoaPhong"> | boolean | null
    VanHanh?: BoolNullableFilter<"WS_DMKhoaPhong"> | boolean | null
  }, "id_Khoaphong_ID_ChiNhanh">

  export type WS_DMKhoaPhongOrderByWithAggregationInput = {
    id_Khoaphong?: SortOrder
    Ten?: SortOrderInput | SortOrder
    id_KPCha?: SortOrderInput | SortOrder
    ID_ChiNhanh?: SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    VanHanh?: SortOrderInput | SortOrder
    _count?: WS_DMKhoaPhongCountOrderByAggregateInput
    _max?: WS_DMKhoaPhongMaxOrderByAggregateInput
    _min?: WS_DMKhoaPhongMinOrderByAggregateInput
  }

  export type WS_DMKhoaPhongScalarWhereWithAggregatesInput = {
    AND?: WS_DMKhoaPhongScalarWhereWithAggregatesInput | WS_DMKhoaPhongScalarWhereWithAggregatesInput[]
    OR?: WS_DMKhoaPhongScalarWhereWithAggregatesInput[]
    NOT?: WS_DMKhoaPhongScalarWhereWithAggregatesInput | WS_DMKhoaPhongScalarWhereWithAggregatesInput[]
    id_Khoaphong?: StringWithAggregatesFilter<"WS_DMKhoaPhong"> | string
    Ten?: StringNullableWithAggregatesFilter<"WS_DMKhoaPhong"> | string | null
    id_KPCha?: StringNullableWithAggregatesFilter<"WS_DMKhoaPhong"> | string | null
    ID_ChiNhanh?: StringWithAggregatesFilter<"WS_DMKhoaPhong"> | string
    Ghichu?: StringNullableWithAggregatesFilter<"WS_DMKhoaPhong"> | string | null
    Sudung?: BoolNullableWithAggregatesFilter<"WS_DMKhoaPhong"> | boolean | null
    VanHanh?: BoolNullableWithAggregatesFilter<"WS_DMKhoaPhong"> | boolean | null
  }

  export type WS_DMNhomTochucWhereInput = {
    AND?: WS_DMNhomTochucWhereInput | WS_DMNhomTochucWhereInput[]
    OR?: WS_DMNhomTochucWhereInput[]
    NOT?: WS_DMNhomTochucWhereInput | WS_DMNhomTochucWhereInput[]
    id_DMNhomTochuc?: StringFilter<"WS_DMNhomTochuc"> | string
    id_DMChinhanh?: StringFilter<"WS_DMNhomTochuc"> | string
    Ten?: StringNullableFilter<"WS_DMNhomTochuc"> | string | null
    Ghichu?: StringNullableFilter<"WS_DMNhomTochuc"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMNhomTochuc"> | boolean | null
  }

  export type WS_DMNhomTochucOrderByWithRelationInput = {
    id_DMNhomTochuc?: SortOrder
    id_DMChinhanh?: SortOrder
    Ten?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
  }

  export type WS_DMNhomTochucWhereUniqueInput = Prisma.AtLeast<{
    id_DMNhomTochuc_id_DMChinhanh?: WS_DMNhomTochucId_DMNhomTochucId_DMChinhanhCompoundUniqueInput
    AND?: WS_DMNhomTochucWhereInput | WS_DMNhomTochucWhereInput[]
    OR?: WS_DMNhomTochucWhereInput[]
    NOT?: WS_DMNhomTochucWhereInput | WS_DMNhomTochucWhereInput[]
    id_DMNhomTochuc?: StringFilter<"WS_DMNhomTochuc"> | string
    id_DMChinhanh?: StringFilter<"WS_DMNhomTochuc"> | string
    Ten?: StringNullableFilter<"WS_DMNhomTochuc"> | string | null
    Ghichu?: StringNullableFilter<"WS_DMNhomTochuc"> | string | null
    Sudung?: BoolNullableFilter<"WS_DMNhomTochuc"> | boolean | null
  }, "id_DMNhomTochuc_id_DMChinhanh">

  export type WS_DMNhomTochucOrderByWithAggregationInput = {
    id_DMNhomTochuc?: SortOrder
    id_DMChinhanh?: SortOrder
    Ten?: SortOrderInput | SortOrder
    Ghichu?: SortOrderInput | SortOrder
    Sudung?: SortOrderInput | SortOrder
    _count?: WS_DMNhomTochucCountOrderByAggregateInput
    _max?: WS_DMNhomTochucMaxOrderByAggregateInput
    _min?: WS_DMNhomTochucMinOrderByAggregateInput
  }

  export type WS_DMNhomTochucScalarWhereWithAggregatesInput = {
    AND?: WS_DMNhomTochucScalarWhereWithAggregatesInput | WS_DMNhomTochucScalarWhereWithAggregatesInput[]
    OR?: WS_DMNhomTochucScalarWhereWithAggregatesInput[]
    NOT?: WS_DMNhomTochucScalarWhereWithAggregatesInput | WS_DMNhomTochucScalarWhereWithAggregatesInput[]
    id_DMNhomTochuc?: StringWithAggregatesFilter<"WS_DMNhomTochuc"> | string
    id_DMChinhanh?: StringWithAggregatesFilter<"WS_DMNhomTochuc"> | string
    Ten?: StringNullableWithAggregatesFilter<"WS_DMNhomTochuc"> | string | null
    Ghichu?: StringNullableWithAggregatesFilter<"WS_DMNhomTochuc"> | string | null
    Sudung?: BoolNullableWithAggregatesFilter<"WS_DMNhomTochuc"> | boolean | null
  }

  export type WS_LogWhereInput = {
    AND?: WS_LogWhereInput | WS_LogWhereInput[]
    OR?: WS_LogWhereInput[]
    NOT?: WS_LogWhereInput | WS_LogWhereInput[]
    id_Log?: IntFilter<"WS_Log"> | number
    id_TaiKhoan?: IntNullableFilter<"WS_Log"> | number | null
    Taikhoan?: StringNullableFilter<"WS_Log"> | string | null
    Ngaygio?: DateTimeNullableFilter<"WS_Log"> | Date | string | null
    ResponseCode?: StringNullableFilter<"WS_Log"> | string | null
    UserHostName?: StringNullableFilter<"WS_Log"> | string | null
    UserHostAddress?: StringNullableFilter<"WS_Log"> | string | null
    QueryString?: StringNullableFilter<"WS_Log"> | string | null
    HttpMethod?: StringNullableFilter<"WS_Log"> | string | null
    ClientBrowser?: StringNullableFilter<"WS_Log"> | string | null
  }

  export type WS_LogOrderByWithRelationInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrderInput | SortOrder
    Taikhoan?: SortOrderInput | SortOrder
    Ngaygio?: SortOrderInput | SortOrder
    ResponseCode?: SortOrderInput | SortOrder
    UserHostName?: SortOrderInput | SortOrder
    UserHostAddress?: SortOrderInput | SortOrder
    QueryString?: SortOrderInput | SortOrder
    HttpMethod?: SortOrderInput | SortOrder
    ClientBrowser?: SortOrderInput | SortOrder
  }

  export type WS_LogWhereUniqueInput = Prisma.AtLeast<{
    id_Log?: number
    AND?: WS_LogWhereInput | WS_LogWhereInput[]
    OR?: WS_LogWhereInput[]
    NOT?: WS_LogWhereInput | WS_LogWhereInput[]
    id_TaiKhoan?: IntNullableFilter<"WS_Log"> | number | null
    Taikhoan?: StringNullableFilter<"WS_Log"> | string | null
    Ngaygio?: DateTimeNullableFilter<"WS_Log"> | Date | string | null
    ResponseCode?: StringNullableFilter<"WS_Log"> | string | null
    UserHostName?: StringNullableFilter<"WS_Log"> | string | null
    UserHostAddress?: StringNullableFilter<"WS_Log"> | string | null
    QueryString?: StringNullableFilter<"WS_Log"> | string | null
    HttpMethod?: StringNullableFilter<"WS_Log"> | string | null
    ClientBrowser?: StringNullableFilter<"WS_Log"> | string | null
  }, "id_Log">

  export type WS_LogOrderByWithAggregationInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrderInput | SortOrder
    Taikhoan?: SortOrderInput | SortOrder
    Ngaygio?: SortOrderInput | SortOrder
    ResponseCode?: SortOrderInput | SortOrder
    UserHostName?: SortOrderInput | SortOrder
    UserHostAddress?: SortOrderInput | SortOrder
    QueryString?: SortOrderInput | SortOrder
    HttpMethod?: SortOrderInput | SortOrder
    ClientBrowser?: SortOrderInput | SortOrder
    _count?: WS_LogCountOrderByAggregateInput
    _avg?: WS_LogAvgOrderByAggregateInput
    _max?: WS_LogMaxOrderByAggregateInput
    _min?: WS_LogMinOrderByAggregateInput
    _sum?: WS_LogSumOrderByAggregateInput
  }

  export type WS_LogScalarWhereWithAggregatesInput = {
    AND?: WS_LogScalarWhereWithAggregatesInput | WS_LogScalarWhereWithAggregatesInput[]
    OR?: WS_LogScalarWhereWithAggregatesInput[]
    NOT?: WS_LogScalarWhereWithAggregatesInput | WS_LogScalarWhereWithAggregatesInput[]
    id_Log?: IntWithAggregatesFilter<"WS_Log"> | number
    id_TaiKhoan?: IntNullableWithAggregatesFilter<"WS_Log"> | number | null
    Taikhoan?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
    Ngaygio?: DateTimeNullableWithAggregatesFilter<"WS_Log"> | Date | string | null
    ResponseCode?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
    UserHostName?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
    UserHostAddress?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
    QueryString?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
    HttpMethod?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
    ClientBrowser?: StringNullableWithAggregatesFilter<"WS_Log"> | string | null
  }

  export type WS_TaikhoanWhereInput = {
    AND?: WS_TaikhoanWhereInput | WS_TaikhoanWhereInput[]
    OR?: WS_TaikhoanWhereInput[]
    NOT?: WS_TaikhoanWhereInput | WS_TaikhoanWhereInput[]
    id_TaiKhoan?: IntFilter<"WS_Taikhoan"> | number
    Taikhoan?: StringNullableFilter<"WS_Taikhoan"> | string | null
    Matkhau?: StringNullableFilter<"WS_Taikhoan"> | string | null
    ID_ChiNhanh?: StringNullableFilter<"WS_Taikhoan"> | string | null
    NgaygioTao?: DateTimeNullableFilter<"WS_Taikhoan"> | Date | string | null
    NgaygioHetHan?: DateTimeNullableFilter<"WS_Taikhoan"> | Date | string | null
    SuDung?: BoolNullableFilter<"WS_Taikhoan"> | boolean | null
    GhiChu?: StringNullableFilter<"WS_Taikhoan"> | string | null
  }

  export type WS_TaikhoanOrderByWithRelationInput = {
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrderInput | SortOrder
    Matkhau?: SortOrderInput | SortOrder
    ID_ChiNhanh?: SortOrderInput | SortOrder
    NgaygioTao?: SortOrderInput | SortOrder
    NgaygioHetHan?: SortOrderInput | SortOrder
    SuDung?: SortOrderInput | SortOrder
    GhiChu?: SortOrderInput | SortOrder
  }

  export type WS_TaikhoanWhereUniqueInput = Prisma.AtLeast<{
    id_TaiKhoan?: number
    AND?: WS_TaikhoanWhereInput | WS_TaikhoanWhereInput[]
    OR?: WS_TaikhoanWhereInput[]
    NOT?: WS_TaikhoanWhereInput | WS_TaikhoanWhereInput[]
    Taikhoan?: StringNullableFilter<"WS_Taikhoan"> | string | null
    Matkhau?: StringNullableFilter<"WS_Taikhoan"> | string | null
    ID_ChiNhanh?: StringNullableFilter<"WS_Taikhoan"> | string | null
    NgaygioTao?: DateTimeNullableFilter<"WS_Taikhoan"> | Date | string | null
    NgaygioHetHan?: DateTimeNullableFilter<"WS_Taikhoan"> | Date | string | null
    SuDung?: BoolNullableFilter<"WS_Taikhoan"> | boolean | null
    GhiChu?: StringNullableFilter<"WS_Taikhoan"> | string | null
  }, "id_TaiKhoan">

  export type WS_TaikhoanOrderByWithAggregationInput = {
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrderInput | SortOrder
    Matkhau?: SortOrderInput | SortOrder
    ID_ChiNhanh?: SortOrderInput | SortOrder
    NgaygioTao?: SortOrderInput | SortOrder
    NgaygioHetHan?: SortOrderInput | SortOrder
    SuDung?: SortOrderInput | SortOrder
    GhiChu?: SortOrderInput | SortOrder
    _count?: WS_TaikhoanCountOrderByAggregateInput
    _avg?: WS_TaikhoanAvgOrderByAggregateInput
    _max?: WS_TaikhoanMaxOrderByAggregateInput
    _min?: WS_TaikhoanMinOrderByAggregateInput
    _sum?: WS_TaikhoanSumOrderByAggregateInput
  }

  export type WS_TaikhoanScalarWhereWithAggregatesInput = {
    AND?: WS_TaikhoanScalarWhereWithAggregatesInput | WS_TaikhoanScalarWhereWithAggregatesInput[]
    OR?: WS_TaikhoanScalarWhereWithAggregatesInput[]
    NOT?: WS_TaikhoanScalarWhereWithAggregatesInput | WS_TaikhoanScalarWhereWithAggregatesInput[]
    id_TaiKhoan?: IntWithAggregatesFilter<"WS_Taikhoan"> | number
    Taikhoan?: StringNullableWithAggregatesFilter<"WS_Taikhoan"> | string | null
    Matkhau?: StringNullableWithAggregatesFilter<"WS_Taikhoan"> | string | null
    ID_ChiNhanh?: StringNullableWithAggregatesFilter<"WS_Taikhoan"> | string | null
    NgaygioTao?: DateTimeNullableWithAggregatesFilter<"WS_Taikhoan"> | Date | string | null
    NgaygioHetHan?: DateTimeNullableWithAggregatesFilter<"WS_Taikhoan"> | Date | string | null
    SuDung?: BoolNullableWithAggregatesFilter<"WS_Taikhoan"> | boolean | null
    GhiChu?: StringNullableWithAggregatesFilter<"WS_Taikhoan"> | string | null
  }

  export type CashierDataCreateInput = {
    Id: string
    IdChiNhanh?: string | null
    ChiNhanh?: string | null
    IdPhieuThu?: string | null
    IdNhanVien?: string | null
    HoTenNhanVien?: string | null
    NgayThu?: Date | string | null
    IdBenhNhan?: string | null
    HoTenBenhNhan?: string | null
    NamSinh?: string | null
    TinhThanh?: string | null
    IdTiepNhan?: number | null
    DoiTuong?: string | null
    LoaiTiepNhan?: string | null
    KhamBenhVe?: boolean | null
    LoaiPhieu?: string | null
    IdPCD?: string | null
    TienTamUng?: number | null
    TUConLai?: number | null
    DenTu?: string | null
    ChuyenKhoa?: string | null
    IdChiTiet?: number | null
    IdDichVu?: string | null
    TenDichVu?: string | null
    PhanLoai?: string | null
    LoaiHang?: string | null
    CoBHYT?: boolean | null
    SoLuong?: number | null
    DonVi?: string | null
    DonGia?: number | null
    GiaBHYT?: number | null
    ThanhTien?: number | null
    BHYTChi?: number | null
    ThanhTienBHYT?: number | null
    TongTien?: number | null
    ChenhLech?: number | null
    GiamGia?: number | null
    TienGiam?: number | null
    ThanhToan?: number | null
    TienGuiMau?: number | null
  }

  export type CashierDataUncheckedCreateInput = {
    Id: string
    IdChiNhanh?: string | null
    ChiNhanh?: string | null
    IdPhieuThu?: string | null
    IdNhanVien?: string | null
    HoTenNhanVien?: string | null
    NgayThu?: Date | string | null
    IdBenhNhan?: string | null
    HoTenBenhNhan?: string | null
    NamSinh?: string | null
    TinhThanh?: string | null
    IdTiepNhan?: number | null
    DoiTuong?: string | null
    LoaiTiepNhan?: string | null
    KhamBenhVe?: boolean | null
    LoaiPhieu?: string | null
    IdPCD?: string | null
    TienTamUng?: number | null
    TUConLai?: number | null
    DenTu?: string | null
    ChuyenKhoa?: string | null
    IdChiTiet?: number | null
    IdDichVu?: string | null
    TenDichVu?: string | null
    PhanLoai?: string | null
    LoaiHang?: string | null
    CoBHYT?: boolean | null
    SoLuong?: number | null
    DonVi?: string | null
    DonGia?: number | null
    GiaBHYT?: number | null
    ThanhTien?: number | null
    BHYTChi?: number | null
    ThanhTienBHYT?: number | null
    TongTien?: number | null
    ChenhLech?: number | null
    GiamGia?: number | null
    TienGiam?: number | null
    ThanhToan?: number | null
    TienGuiMau?: number | null
  }

  export type CashierDataUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhieuThu?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    NgayThu?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    NamSinh?: NullableStringFieldUpdateOperationsInput | string | null
    TinhThanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdTiepNhan?: NullableIntFieldUpdateOperationsInput | number | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiTiepNhan?: NullableStringFieldUpdateOperationsInput | string | null
    KhamBenhVe?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    IdPCD?: NullableStringFieldUpdateOperationsInput | string | null
    TienTamUng?: NullableFloatFieldUpdateOperationsInput | number | null
    TUConLai?: NullableFloatFieldUpdateOperationsInput | number | null
    DenTu?: NullableStringFieldUpdateOperationsInput | string | null
    ChuyenKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    IdChiTiet?: NullableIntFieldUpdateOperationsInput | number | null
    IdDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    TenDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    PhanLoai?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiHang?: NullableStringFieldUpdateOperationsInput | string | null
    CoBHYT?: NullableBoolFieldUpdateOperationsInput | boolean | null
    SoLuong?: NullableFloatFieldUpdateOperationsInput | number | null
    DonVi?: NullableStringFieldUpdateOperationsInput | string | null
    DonGia?: NullableFloatFieldUpdateOperationsInput | number | null
    GiaBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
    BHYTChi?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTienBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChenhLech?: NullableFloatFieldUpdateOperationsInput | number | null
    GiamGia?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGiam?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhToan?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGuiMau?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CashierDataUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhieuThu?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    NgayThu?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    NamSinh?: NullableStringFieldUpdateOperationsInput | string | null
    TinhThanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdTiepNhan?: NullableIntFieldUpdateOperationsInput | number | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiTiepNhan?: NullableStringFieldUpdateOperationsInput | string | null
    KhamBenhVe?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    IdPCD?: NullableStringFieldUpdateOperationsInput | string | null
    TienTamUng?: NullableFloatFieldUpdateOperationsInput | number | null
    TUConLai?: NullableFloatFieldUpdateOperationsInput | number | null
    DenTu?: NullableStringFieldUpdateOperationsInput | string | null
    ChuyenKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    IdChiTiet?: NullableIntFieldUpdateOperationsInput | number | null
    IdDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    TenDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    PhanLoai?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiHang?: NullableStringFieldUpdateOperationsInput | string | null
    CoBHYT?: NullableBoolFieldUpdateOperationsInput | boolean | null
    SoLuong?: NullableFloatFieldUpdateOperationsInput | number | null
    DonVi?: NullableStringFieldUpdateOperationsInput | string | null
    DonGia?: NullableFloatFieldUpdateOperationsInput | number | null
    GiaBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
    BHYTChi?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTienBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChenhLech?: NullableFloatFieldUpdateOperationsInput | number | null
    GiamGia?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGiam?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhToan?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGuiMau?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CashierDataCreateManyInput = {
    Id: string
    IdChiNhanh?: string | null
    ChiNhanh?: string | null
    IdPhieuThu?: string | null
    IdNhanVien?: string | null
    HoTenNhanVien?: string | null
    NgayThu?: Date | string | null
    IdBenhNhan?: string | null
    HoTenBenhNhan?: string | null
    NamSinh?: string | null
    TinhThanh?: string | null
    IdTiepNhan?: number | null
    DoiTuong?: string | null
    LoaiTiepNhan?: string | null
    KhamBenhVe?: boolean | null
    LoaiPhieu?: string | null
    IdPCD?: string | null
    TienTamUng?: number | null
    TUConLai?: number | null
    DenTu?: string | null
    ChuyenKhoa?: string | null
    IdChiTiet?: number | null
    IdDichVu?: string | null
    TenDichVu?: string | null
    PhanLoai?: string | null
    LoaiHang?: string | null
    CoBHYT?: boolean | null
    SoLuong?: number | null
    DonVi?: string | null
    DonGia?: number | null
    GiaBHYT?: number | null
    ThanhTien?: number | null
    BHYTChi?: number | null
    ThanhTienBHYT?: number | null
    TongTien?: number | null
    ChenhLech?: number | null
    GiamGia?: number | null
    TienGiam?: number | null
    ThanhToan?: number | null
    TienGuiMau?: number | null
  }

  export type CashierDataUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhieuThu?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    NgayThu?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    NamSinh?: NullableStringFieldUpdateOperationsInput | string | null
    TinhThanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdTiepNhan?: NullableIntFieldUpdateOperationsInput | number | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiTiepNhan?: NullableStringFieldUpdateOperationsInput | string | null
    KhamBenhVe?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    IdPCD?: NullableStringFieldUpdateOperationsInput | string | null
    TienTamUng?: NullableFloatFieldUpdateOperationsInput | number | null
    TUConLai?: NullableFloatFieldUpdateOperationsInput | number | null
    DenTu?: NullableStringFieldUpdateOperationsInput | string | null
    ChuyenKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    IdChiTiet?: NullableIntFieldUpdateOperationsInput | number | null
    IdDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    TenDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    PhanLoai?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiHang?: NullableStringFieldUpdateOperationsInput | string | null
    CoBHYT?: NullableBoolFieldUpdateOperationsInput | boolean | null
    SoLuong?: NullableFloatFieldUpdateOperationsInput | number | null
    DonVi?: NullableStringFieldUpdateOperationsInput | string | null
    DonGia?: NullableFloatFieldUpdateOperationsInput | number | null
    GiaBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
    BHYTChi?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTienBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChenhLech?: NullableFloatFieldUpdateOperationsInput | number | null
    GiamGia?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGiam?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhToan?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGuiMau?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type CashierDataUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhieuThu?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    NgayThu?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    NamSinh?: NullableStringFieldUpdateOperationsInput | string | null
    TinhThanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdTiepNhan?: NullableIntFieldUpdateOperationsInput | number | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiTiepNhan?: NullableStringFieldUpdateOperationsInput | string | null
    KhamBenhVe?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    IdPCD?: NullableStringFieldUpdateOperationsInput | string | null
    TienTamUng?: NullableFloatFieldUpdateOperationsInput | number | null
    TUConLai?: NullableFloatFieldUpdateOperationsInput | number | null
    DenTu?: NullableStringFieldUpdateOperationsInput | string | null
    ChuyenKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    IdChiTiet?: NullableIntFieldUpdateOperationsInput | number | null
    IdDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    TenDichVu?: NullableStringFieldUpdateOperationsInput | string | null
    PhanLoai?: NullableStringFieldUpdateOperationsInput | string | null
    LoaiHang?: NullableStringFieldUpdateOperationsInput | string | null
    CoBHYT?: NullableBoolFieldUpdateOperationsInput | boolean | null
    SoLuong?: NullableFloatFieldUpdateOperationsInput | number | null
    DonVi?: NullableStringFieldUpdateOperationsInput | string | null
    DonGia?: NullableFloatFieldUpdateOperationsInput | number | null
    GiaBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
    BHYTChi?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTienBHYT?: NullableFloatFieldUpdateOperationsInput | number | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChenhLech?: NullableFloatFieldUpdateOperationsInput | number | null
    GiamGia?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGiam?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhToan?: NullableFloatFieldUpdateOperationsInput | number | null
    TienGuiMau?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type DrugRevenueDataCreateInput = {
    Id: string
    IdChiNhanh?: string | null
    ChiNhanh?: string | null
    IdXuatKho?: string | null
    IdToaThuoc?: string | null
    IdNhanVien?: string | null
    HoTenNhanVien?: string | null
    IdPhongKham?: string | null
    TenPhongKham?: string | null
    IdBenhNhan?: string | null
    HoTenBenhNhan?: string | null
    DoiTuong?: string | null
    NgayXuat?: Date | string | null
    LoaiPhieu?: string | null
    MaNghiepVu?: string | null
    IdKho?: string | null
    TenKho?: string | null
    TongTien?: number | null
    ChietKhau?: number | null
    TienTruocThue?: number | null
    ThanhTien?: number | null
  }

  export type DrugRevenueDataUncheckedCreateInput = {
    Id: string
    IdChiNhanh?: string | null
    ChiNhanh?: string | null
    IdXuatKho?: string | null
    IdToaThuoc?: string | null
    IdNhanVien?: string | null
    HoTenNhanVien?: string | null
    IdPhongKham?: string | null
    TenPhongKham?: string | null
    IdBenhNhan?: string | null
    HoTenBenhNhan?: string | null
    DoiTuong?: string | null
    NgayXuat?: Date | string | null
    LoaiPhieu?: string | null
    MaNghiepVu?: string | null
    IdKho?: string | null
    TenKho?: string | null
    TongTien?: number | null
    ChietKhau?: number | null
    TienTruocThue?: number | null
    ThanhTien?: number | null
  }

  export type DrugRevenueDataUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdXuatKho?: NullableStringFieldUpdateOperationsInput | string | null
    IdToaThuoc?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    TenPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    NgayXuat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    MaNghiepVu?: NullableStringFieldUpdateOperationsInput | string | null
    IdKho?: NullableStringFieldUpdateOperationsInput | string | null
    TenKho?: NullableStringFieldUpdateOperationsInput | string | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChietKhau?: NullableFloatFieldUpdateOperationsInput | number | null
    TienTruocThue?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type DrugRevenueDataUncheckedUpdateInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdXuatKho?: NullableStringFieldUpdateOperationsInput | string | null
    IdToaThuoc?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    TenPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    NgayXuat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    MaNghiepVu?: NullableStringFieldUpdateOperationsInput | string | null
    IdKho?: NullableStringFieldUpdateOperationsInput | string | null
    TenKho?: NullableStringFieldUpdateOperationsInput | string | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChietKhau?: NullableFloatFieldUpdateOperationsInput | number | null
    TienTruocThue?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type DrugRevenueDataCreateManyInput = {
    Id: string
    IdChiNhanh?: string | null
    ChiNhanh?: string | null
    IdXuatKho?: string | null
    IdToaThuoc?: string | null
    IdNhanVien?: string | null
    HoTenNhanVien?: string | null
    IdPhongKham?: string | null
    TenPhongKham?: string | null
    IdBenhNhan?: string | null
    HoTenBenhNhan?: string | null
    DoiTuong?: string | null
    NgayXuat?: Date | string | null
    LoaiPhieu?: string | null
    MaNghiepVu?: string | null
    IdKho?: string | null
    TenKho?: string | null
    TongTien?: number | null
    ChietKhau?: number | null
    TienTruocThue?: number | null
    ThanhTien?: number | null
  }

  export type DrugRevenueDataUpdateManyMutationInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdXuatKho?: NullableStringFieldUpdateOperationsInput | string | null
    IdToaThuoc?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    TenPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    NgayXuat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    MaNghiepVu?: NullableStringFieldUpdateOperationsInput | string | null
    IdKho?: NullableStringFieldUpdateOperationsInput | string | null
    TenKho?: NullableStringFieldUpdateOperationsInput | string | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChietKhau?: NullableFloatFieldUpdateOperationsInput | number | null
    TienTruocThue?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type DrugRevenueDataUncheckedUpdateManyInput = {
    Id?: StringFieldUpdateOperationsInput | string
    IdChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    IdXuatKho?: NullableStringFieldUpdateOperationsInput | string | null
    IdToaThuoc?: NullableStringFieldUpdateOperationsInput | string | null
    IdNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenNhanVien?: NullableStringFieldUpdateOperationsInput | string | null
    IdPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    TenPhongKham?: NullableStringFieldUpdateOperationsInput | string | null
    IdBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    HoTenBenhNhan?: NullableStringFieldUpdateOperationsInput | string | null
    DoiTuong?: NullableStringFieldUpdateOperationsInput | string | null
    NgayXuat?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LoaiPhieu?: NullableStringFieldUpdateOperationsInput | string | null
    MaNghiepVu?: NullableStringFieldUpdateOperationsInput | string | null
    IdKho?: NullableStringFieldUpdateOperationsInput | string | null
    TenKho?: NullableStringFieldUpdateOperationsInput | string | null
    TongTien?: NullableFloatFieldUpdateOperationsInput | number | null
    ChietKhau?: NullableFloatFieldUpdateOperationsInput | number | null
    TienTruocThue?: NullableFloatFieldUpdateOperationsInput | number | null
    ThanhTien?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type PC_BangluongCreateInput = {
    id_chinhanh?: string | null
    id_nhanvien?: string | null
    nam_luong?: number | null
    thang_luong?: number | null
    chitiet_luong?: Buffer | null
    luong_sanpham?: Buffer | null
    id_nhanvien_upload?: string | null
    ngay_upload?: Date | string | null
  }

  export type PC_BangluongUncheckedCreateInput = {
    id_bangluong?: number
    id_chinhanh?: string | null
    id_nhanvien?: string | null
    nam_luong?: number | null
    thang_luong?: number | null
    chitiet_luong?: Buffer | null
    luong_sanpham?: Buffer | null
    id_nhanvien_upload?: string | null
    ngay_upload?: Date | string | null
  }

  export type PC_BangluongUpdateInput = {
    id_chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    nam_luong?: NullableIntFieldUpdateOperationsInput | number | null
    thang_luong?: NullableIntFieldUpdateOperationsInput | number | null
    chitiet_luong?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    luong_sanpham?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    id_nhanvien_upload?: NullableStringFieldUpdateOperationsInput | string | null
    ngay_upload?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_BangluongUncheckedUpdateInput = {
    id_bangluong?: IntFieldUpdateOperationsInput | number
    id_chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    nam_luong?: NullableIntFieldUpdateOperationsInput | number | null
    thang_luong?: NullableIntFieldUpdateOperationsInput | number | null
    chitiet_luong?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    luong_sanpham?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    id_nhanvien_upload?: NullableStringFieldUpdateOperationsInput | string | null
    ngay_upload?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_BangluongCreateManyInput = {
    id_chinhanh?: string | null
    id_nhanvien?: string | null
    nam_luong?: number | null
    thang_luong?: number | null
    chitiet_luong?: Buffer | null
    luong_sanpham?: Buffer | null
    id_nhanvien_upload?: string | null
    ngay_upload?: Date | string | null
  }

  export type PC_BangluongUpdateManyMutationInput = {
    id_chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    nam_luong?: NullableIntFieldUpdateOperationsInput | number | null
    thang_luong?: NullableIntFieldUpdateOperationsInput | number | null
    chitiet_luong?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    luong_sanpham?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    id_nhanvien_upload?: NullableStringFieldUpdateOperationsInput | string | null
    ngay_upload?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_BangluongUncheckedUpdateManyInput = {
    id_bangluong?: IntFieldUpdateOperationsInput | number
    id_chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    nam_luong?: NullableIntFieldUpdateOperationsInput | number | null
    thang_luong?: NullableIntFieldUpdateOperationsInput | number | null
    chitiet_luong?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    luong_sanpham?: NullableBytesFieldUpdateOperationsInput | Buffer | null
    id_nhanvien_upload?: NullableStringFieldUpdateOperationsInput | string | null
    ngay_upload?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_BantinCreateInput = {
    Tieude?: string | null
    Tomtat?: string | null
    Noidung?: string | null
    Url_Images?: string | null
    id_Chinhanh?: string | null
    id_KP_Banhanh?: string | null
    Ten_KP_Banhanh?: string | null
    id_To_Banhanh?: string | null
    Ten_To_Banhanh?: string | null
    id_NV_Them?: string | null
    Ngaydang?: Date | string | null
    Ngay_Hethan?: Date | string | null
    Hienthi_Home?: boolean | null
    Sudung?: boolean | null
    Luotxem?: number | null
    Ghim_Bantin?: boolean | null
    Bantin_Tapdoan?: boolean | null
    id_DMPhanloai?: number | null
    TenPhanloai?: string | null
    id_DMPhanloaiCT?: number | null
    TenChitiet?: string | null
    Url_Video?: string | null
  }

  export type PC_BantinUncheckedCreateInput = {
    id_Bantin?: number
    Tieude?: string | null
    Tomtat?: string | null
    Noidung?: string | null
    Url_Images?: string | null
    id_Chinhanh?: string | null
    id_KP_Banhanh?: string | null
    Ten_KP_Banhanh?: string | null
    id_To_Banhanh?: string | null
    Ten_To_Banhanh?: string | null
    id_NV_Them?: string | null
    Ngaydang?: Date | string | null
    Ngay_Hethan?: Date | string | null
    Hienthi_Home?: boolean | null
    Sudung?: boolean | null
    Luotxem?: number | null
    Ghim_Bantin?: boolean | null
    Bantin_Tapdoan?: boolean | null
    id_DMPhanloai?: number | null
    TenPhanloai?: string | null
    id_DMPhanloaiCT?: number | null
    TenChitiet?: string | null
    Url_Video?: string | null
  }

  export type PC_BantinUpdateInput = {
    Tieude?: NullableStringFieldUpdateOperationsInput | string | null
    Tomtat?: NullableStringFieldUpdateOperationsInput | string | null
    Noidung?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Images?: NullableStringFieldUpdateOperationsInput | string | null
    id_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_NV_Them?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaydang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Ngay_Hethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hienthi_Home?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Luotxem?: NullableIntFieldUpdateOperationsInput | number | null
    Ghim_Bantin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Bantin_Tapdoan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_DMPhanloai?: NullableIntFieldUpdateOperationsInput | number | null
    TenPhanloai?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhanloaiCT?: NullableIntFieldUpdateOperationsInput | number | null
    TenChitiet?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Video?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BantinUncheckedUpdateInput = {
    id_Bantin?: IntFieldUpdateOperationsInput | number
    Tieude?: NullableStringFieldUpdateOperationsInput | string | null
    Tomtat?: NullableStringFieldUpdateOperationsInput | string | null
    Noidung?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Images?: NullableStringFieldUpdateOperationsInput | string | null
    id_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_NV_Them?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaydang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Ngay_Hethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hienthi_Home?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Luotxem?: NullableIntFieldUpdateOperationsInput | number | null
    Ghim_Bantin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Bantin_Tapdoan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_DMPhanloai?: NullableIntFieldUpdateOperationsInput | number | null
    TenPhanloai?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhanloaiCT?: NullableIntFieldUpdateOperationsInput | number | null
    TenChitiet?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Video?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BantinCreateManyInput = {
    Tieude?: string | null
    Tomtat?: string | null
    Noidung?: string | null
    Url_Images?: string | null
    id_Chinhanh?: string | null
    id_KP_Banhanh?: string | null
    Ten_KP_Banhanh?: string | null
    id_To_Banhanh?: string | null
    Ten_To_Banhanh?: string | null
    id_NV_Them?: string | null
    Ngaydang?: Date | string | null
    Ngay_Hethan?: Date | string | null
    Hienthi_Home?: boolean | null
    Sudung?: boolean | null
    Luotxem?: number | null
    Ghim_Bantin?: boolean | null
    Bantin_Tapdoan?: boolean | null
    id_DMPhanloai?: number | null
    TenPhanloai?: string | null
    id_DMPhanloaiCT?: number | null
    TenChitiet?: string | null
    Url_Video?: string | null
  }

  export type PC_BantinUpdateManyMutationInput = {
    Tieude?: NullableStringFieldUpdateOperationsInput | string | null
    Tomtat?: NullableStringFieldUpdateOperationsInput | string | null
    Noidung?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Images?: NullableStringFieldUpdateOperationsInput | string | null
    id_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_NV_Them?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaydang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Ngay_Hethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hienthi_Home?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Luotxem?: NullableIntFieldUpdateOperationsInput | number | null
    Ghim_Bantin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Bantin_Tapdoan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_DMPhanloai?: NullableIntFieldUpdateOperationsInput | number | null
    TenPhanloai?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhanloaiCT?: NullableIntFieldUpdateOperationsInput | number | null
    TenChitiet?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Video?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BantinUncheckedUpdateManyInput = {
    id_Bantin?: IntFieldUpdateOperationsInput | number
    Tieude?: NullableStringFieldUpdateOperationsInput | string | null
    Tomtat?: NullableStringFieldUpdateOperationsInput | string | null
    Noidung?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Images?: NullableStringFieldUpdateOperationsInput | string | null
    id_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_KP_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_To_Banhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_NV_Them?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaydang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Ngay_Hethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Hienthi_Home?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Luotxem?: NullableIntFieldUpdateOperationsInput | number | null
    Ghim_Bantin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Bantin_Tapdoan?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_DMPhanloai?: NullableIntFieldUpdateOperationsInput | number | null
    TenPhanloai?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhanloaiCT?: NullableIntFieldUpdateOperationsInput | number | null
    TenChitiet?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Video?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BenhnhanCreateInput = {
    id_Benhnhan: string
    Hoten?: string | null
    Ten?: string | null
    Hotenkhongdau?: string | null
    Ngaythangnamsinh?: string | null
    Namsinh?: string | null
    Gioitinh?: string | null
    Noilamviec?: string | null
    SoCMND?: string | null
    Email?: string | null
    Dienthoai_didong?: string | null
    Tamtru_diachi?: string | null
    Tamtru_xaphuong?: string | null
    Tamtru_idXaphuong?: string | null
    Tamtru_quanhuyen?: string | null
    Tamtru_idQuanhuyen?: string | null
    Tamtru_tinhthanh?: string | null
    Tamtru_idTinhthanh?: string | null
    id_DMQuoctich?: string | null
    Quoctich?: string | null
    id_DMNghenghiep?: string | null
    Nghenghiep?: string | null
    id_DMDantoc?: string | null
    Dantoc?: string | null
    id_DMTongiao?: string | null
    Tongiao?: string | null
    Trangthai?: string | null
    Cogiadinh?: boolean | null
    Ngaygiotaohoso?: Date | string | null
    id_Nhanvien?: string | null
    DCNuocngoai?: boolean | null
    id_ChiNhanh?: string | null
    id_BenhnhanMoi?: string | null
    id_BenhnhanMe?: string | null
    MahosoIVF?: string | null
    BNLH_Ten?: string | null
    BNLH_DiaChi?: string | null
    BNLH_SoDienThoai?: string | null
    BNLH_QuanHe?: string | null
    BNTT_Para?: string | null
    BNTT_TienSuBanThan?: string | null
    BNTT_TienSuGD?: string | null
    BNTT_SanhTaiBV?: boolean | null
    BNTT_DuocSinhTaiBV?: boolean | null
    BNTT_MaTiemngua?: string | null
    BNTT_ChoTrung?: boolean | null
    BNTT_NhanTrung_TenVo?: string | null
    BNTT_NhanTrung_NamsinhVo?: string | null
    BNTT_NhanTrung_TenChong?: string | null
    BNTT_NhanTrung_NamsinhChong?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_BenhnhanUncheckedCreateInput = {
    id_Benhnhan: string
    Hoten?: string | null
    Ten?: string | null
    Hotenkhongdau?: string | null
    Ngaythangnamsinh?: string | null
    Namsinh?: string | null
    Gioitinh?: string | null
    Noilamviec?: string | null
    SoCMND?: string | null
    Email?: string | null
    Dienthoai_didong?: string | null
    Tamtru_diachi?: string | null
    Tamtru_xaphuong?: string | null
    Tamtru_idXaphuong?: string | null
    Tamtru_quanhuyen?: string | null
    Tamtru_idQuanhuyen?: string | null
    Tamtru_tinhthanh?: string | null
    Tamtru_idTinhthanh?: string | null
    id_DMQuoctich?: string | null
    Quoctich?: string | null
    id_DMNghenghiep?: string | null
    Nghenghiep?: string | null
    id_DMDantoc?: string | null
    Dantoc?: string | null
    id_DMTongiao?: string | null
    Tongiao?: string | null
    Trangthai?: string | null
    Cogiadinh?: boolean | null
    Ngaygiotaohoso?: Date | string | null
    id_Nhanvien?: string | null
    DCNuocngoai?: boolean | null
    id_ChiNhanh?: string | null
    id_BenhnhanMoi?: string | null
    id_BenhnhanMe?: string | null
    MahosoIVF?: string | null
    BNLH_Ten?: string | null
    BNLH_DiaChi?: string | null
    BNLH_SoDienThoai?: string | null
    BNLH_QuanHe?: string | null
    BNTT_Para?: string | null
    BNTT_TienSuBanThan?: string | null
    BNTT_TienSuGD?: string | null
    BNTT_SanhTaiBV?: boolean | null
    BNTT_DuocSinhTaiBV?: boolean | null
    BNTT_MaTiemngua?: string | null
    BNTT_ChoTrung?: boolean | null
    BNTT_NhanTrung_TenVo?: string | null
    BNTT_NhanTrung_NamsinhVo?: string | null
    BNTT_NhanTrung_TenChong?: string | null
    BNTT_NhanTrung_NamsinhChong?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_BenhnhanUpdateInput = {
    id_Benhnhan?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Hotenkhongdau?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaythangnamsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Noilamviec?: NullableStringFieldUpdateOperationsInput | string | null
    SoCMND?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai_didong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_xaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idXaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_quanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idQuanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_tinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idTinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMQuoctich?: NullableStringFieldUpdateOperationsInput | string | null
    Quoctich?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMNghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    Nghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMDantoc?: NullableStringFieldUpdateOperationsInput | string | null
    Dantoc?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Tongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Cogiadinh?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaygiotaohoso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_Nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    DCNuocngoai?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMoi?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMe?: NullableStringFieldUpdateOperationsInput | string | null
    MahosoIVF?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_Ten?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_DiaChi?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_SoDienThoai?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_QuanHe?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_Para?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuBanThan?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuGD?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_SanhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_DuocSinhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_MaTiemngua?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_ChoTrung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_NhanTrung_TenVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_TenChong?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhChong?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BenhnhanUncheckedUpdateInput = {
    id_Benhnhan?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Hotenkhongdau?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaythangnamsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Noilamviec?: NullableStringFieldUpdateOperationsInput | string | null
    SoCMND?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai_didong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_xaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idXaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_quanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idQuanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_tinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idTinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMQuoctich?: NullableStringFieldUpdateOperationsInput | string | null
    Quoctich?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMNghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    Nghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMDantoc?: NullableStringFieldUpdateOperationsInput | string | null
    Dantoc?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Tongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Cogiadinh?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaygiotaohoso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_Nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    DCNuocngoai?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMoi?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMe?: NullableStringFieldUpdateOperationsInput | string | null
    MahosoIVF?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_Ten?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_DiaChi?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_SoDienThoai?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_QuanHe?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_Para?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuBanThan?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuGD?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_SanhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_DuocSinhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_MaTiemngua?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_ChoTrung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_NhanTrung_TenVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_TenChong?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhChong?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BenhnhanCreateManyInput = {
    id_Benhnhan: string
    Hoten?: string | null
    Ten?: string | null
    Hotenkhongdau?: string | null
    Ngaythangnamsinh?: string | null
    Namsinh?: string | null
    Gioitinh?: string | null
    Noilamviec?: string | null
    SoCMND?: string | null
    Email?: string | null
    Dienthoai_didong?: string | null
    Tamtru_diachi?: string | null
    Tamtru_xaphuong?: string | null
    Tamtru_idXaphuong?: string | null
    Tamtru_quanhuyen?: string | null
    Tamtru_idQuanhuyen?: string | null
    Tamtru_tinhthanh?: string | null
    Tamtru_idTinhthanh?: string | null
    id_DMQuoctich?: string | null
    Quoctich?: string | null
    id_DMNghenghiep?: string | null
    Nghenghiep?: string | null
    id_DMDantoc?: string | null
    Dantoc?: string | null
    id_DMTongiao?: string | null
    Tongiao?: string | null
    Trangthai?: string | null
    Cogiadinh?: boolean | null
    Ngaygiotaohoso?: Date | string | null
    id_Nhanvien?: string | null
    DCNuocngoai?: boolean | null
    id_ChiNhanh?: string | null
    id_BenhnhanMoi?: string | null
    id_BenhnhanMe?: string | null
    MahosoIVF?: string | null
    BNLH_Ten?: string | null
    BNLH_DiaChi?: string | null
    BNLH_SoDienThoai?: string | null
    BNLH_QuanHe?: string | null
    BNTT_Para?: string | null
    BNTT_TienSuBanThan?: string | null
    BNTT_TienSuGD?: string | null
    BNTT_SanhTaiBV?: boolean | null
    BNTT_DuocSinhTaiBV?: boolean | null
    BNTT_MaTiemngua?: string | null
    BNTT_ChoTrung?: boolean | null
    BNTT_NhanTrung_TenVo?: string | null
    BNTT_NhanTrung_NamsinhVo?: string | null
    BNTT_NhanTrung_TenChong?: string | null
    BNTT_NhanTrung_NamsinhChong?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_BenhnhanUpdateManyMutationInput = {
    id_Benhnhan?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Hotenkhongdau?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaythangnamsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Noilamviec?: NullableStringFieldUpdateOperationsInput | string | null
    SoCMND?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai_didong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_xaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idXaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_quanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idQuanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_tinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idTinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMQuoctich?: NullableStringFieldUpdateOperationsInput | string | null
    Quoctich?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMNghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    Nghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMDantoc?: NullableStringFieldUpdateOperationsInput | string | null
    Dantoc?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Tongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Cogiadinh?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaygiotaohoso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_Nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    DCNuocngoai?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMoi?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMe?: NullableStringFieldUpdateOperationsInput | string | null
    MahosoIVF?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_Ten?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_DiaChi?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_SoDienThoai?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_QuanHe?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_Para?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuBanThan?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuGD?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_SanhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_DuocSinhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_MaTiemngua?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_ChoTrung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_NhanTrung_TenVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_TenChong?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhChong?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_BenhnhanUncheckedUpdateManyInput = {
    id_Benhnhan?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Hotenkhongdau?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaythangnamsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Noilamviec?: NullableStringFieldUpdateOperationsInput | string | null
    SoCMND?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai_didong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_xaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idXaphuong?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_quanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idQuanhuyen?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_tinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    Tamtru_idTinhthanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMQuoctich?: NullableStringFieldUpdateOperationsInput | string | null
    Quoctich?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMNghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    Nghenghiep?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMDantoc?: NullableStringFieldUpdateOperationsInput | string | null
    Dantoc?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Tongiao?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Cogiadinh?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaygiotaohoso?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_Nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    DCNuocngoai?: NullableBoolFieldUpdateOperationsInput | boolean | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMoi?: NullableStringFieldUpdateOperationsInput | string | null
    id_BenhnhanMe?: NullableStringFieldUpdateOperationsInput | string | null
    MahosoIVF?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_Ten?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_DiaChi?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_SoDienThoai?: NullableStringFieldUpdateOperationsInput | string | null
    BNLH_QuanHe?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_Para?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuBanThan?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_TienSuGD?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_SanhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_DuocSinhTaiBV?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_MaTiemngua?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_ChoTrung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    BNTT_NhanTrung_TenVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhVo?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_TenChong?: NullableStringFieldUpdateOperationsInput | string | null
    BNTT_NhanTrung_NamsinhChong?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_CustomerCreateInput = {
    pcId: string
    name?: string | null
    birthday?: string | null
    phoneNumber?: string | null
    gender?: string | null
    idCardNo?: string | null
    email?: string | null
    careerCode?: string | null
    nationalityCode?: string | null
    ethnicCode?: string | null
    countryCode?: string | null
    cityCode?: string | null
    districtCode?: string | null
    wardCode?: string | null
    homeAddress?: string | null
    managerId?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PC_CustomerUncheckedCreateInput = {
    pcId: string
    name?: string | null
    birthday?: string | null
    phoneNumber?: string | null
    gender?: string | null
    idCardNo?: string | null
    email?: string | null
    careerCode?: string | null
    nationalityCode?: string | null
    ethnicCode?: string | null
    countryCode?: string | null
    cityCode?: string | null
    districtCode?: string | null
    wardCode?: string | null
    homeAddress?: string | null
    managerId?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PC_CustomerUpdateInput = {
    pcId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    idCardNo?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    careerCode?: NullableStringFieldUpdateOperationsInput | string | null
    nationalityCode?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicCode?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    cityCode?: NullableStringFieldUpdateOperationsInput | string | null
    districtCode?: NullableStringFieldUpdateOperationsInput | string | null
    wardCode?: NullableStringFieldUpdateOperationsInput | string | null
    homeAddress?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_CustomerUncheckedUpdateInput = {
    pcId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    idCardNo?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    careerCode?: NullableStringFieldUpdateOperationsInput | string | null
    nationalityCode?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicCode?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    cityCode?: NullableStringFieldUpdateOperationsInput | string | null
    districtCode?: NullableStringFieldUpdateOperationsInput | string | null
    wardCode?: NullableStringFieldUpdateOperationsInput | string | null
    homeAddress?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_CustomerCreateManyInput = {
    pcId: string
    name?: string | null
    birthday?: string | null
    phoneNumber?: string | null
    gender?: string | null
    idCardNo?: string | null
    email?: string | null
    careerCode?: string | null
    nationalityCode?: string | null
    ethnicCode?: string | null
    countryCode?: string | null
    cityCode?: string | null
    districtCode?: string | null
    wardCode?: string | null
    homeAddress?: string | null
    managerId?: string | null
    status?: string | null
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type PC_CustomerUpdateManyMutationInput = {
    pcId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    idCardNo?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    careerCode?: NullableStringFieldUpdateOperationsInput | string | null
    nationalityCode?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicCode?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    cityCode?: NullableStringFieldUpdateOperationsInput | string | null
    districtCode?: NullableStringFieldUpdateOperationsInput | string | null
    wardCode?: NullableStringFieldUpdateOperationsInput | string | null
    homeAddress?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_CustomerUncheckedUpdateManyInput = {
    pcId?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    birthday?: NullableStringFieldUpdateOperationsInput | string | null
    phoneNumber?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    idCardNo?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    careerCode?: NullableStringFieldUpdateOperationsInput | string | null
    nationalityCode?: NullableStringFieldUpdateOperationsInput | string | null
    ethnicCode?: NullableStringFieldUpdateOperationsInput | string | null
    countryCode?: NullableStringFieldUpdateOperationsInput | string | null
    cityCode?: NullableStringFieldUpdateOperationsInput | string | null
    districtCode?: NullableStringFieldUpdateOperationsInput | string | null
    wardCode?: NullableStringFieldUpdateOperationsInput | string | null
    homeAddress?: NullableStringFieldUpdateOperationsInput | string | null
    managerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type PC_HosoIVFCreateInput = {
    MasoHS?: string | null
    Namluutru?: number | null
    Sohientai?: number | null
    id_BN_Vo?: string | null
    id_BN_Chong?: string | null
    Trangthai?: string | null
    Ngaytao?: Date | string | null
    id_nhanvien?: string | null
    id_Khoaphong?: string | null
    Phanloai?: string | null
    Ghichu?: string | null
    id_BSGuibenh?: string | null
    Hoten_BSGuibenh?: string | null
    id_ChiNhanh?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_HosoIVFUncheckedCreateInput = {
    id_HosoIVF?: number
    MasoHS?: string | null
    Namluutru?: number | null
    Sohientai?: number | null
    id_BN_Vo?: string | null
    id_BN_Chong?: string | null
    Trangthai?: string | null
    Ngaytao?: Date | string | null
    id_nhanvien?: string | null
    id_Khoaphong?: string | null
    Phanloai?: string | null
    Ghichu?: string | null
    id_BSGuibenh?: string | null
    Hoten_BSGuibenh?: string | null
    id_ChiNhanh?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_HosoIVFUpdateInput = {
    MasoHS?: NullableStringFieldUpdateOperationsInput | string | null
    Namluutru?: NullableIntFieldUpdateOperationsInput | number | null
    Sohientai?: NullableIntFieldUpdateOperationsInput | number | null
    id_BN_Vo?: NullableStringFieldUpdateOperationsInput | string | null
    id_BN_Chong?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaytao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    Phanloai?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    id_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_HosoIVFUncheckedUpdateInput = {
    id_HosoIVF?: IntFieldUpdateOperationsInput | number
    MasoHS?: NullableStringFieldUpdateOperationsInput | string | null
    Namluutru?: NullableIntFieldUpdateOperationsInput | number | null
    Sohientai?: NullableIntFieldUpdateOperationsInput | number | null
    id_BN_Vo?: NullableStringFieldUpdateOperationsInput | string | null
    id_BN_Chong?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaytao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    Phanloai?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    id_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_HosoIVFCreateManyInput = {
    MasoHS?: string | null
    Namluutru?: number | null
    Sohientai?: number | null
    id_BN_Vo?: string | null
    id_BN_Chong?: string | null
    Trangthai?: string | null
    Ngaytao?: Date | string | null
    id_nhanvien?: string | null
    id_Khoaphong?: string | null
    Phanloai?: string | null
    Ghichu?: string | null
    id_BSGuibenh?: string | null
    Hoten_BSGuibenh?: string | null
    id_ChiNhanh?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_HosoIVFUpdateManyMutationInput = {
    MasoHS?: NullableStringFieldUpdateOperationsInput | string | null
    Namluutru?: NullableIntFieldUpdateOperationsInput | number | null
    Sohientai?: NullableIntFieldUpdateOperationsInput | number | null
    id_BN_Vo?: NullableStringFieldUpdateOperationsInput | string | null
    id_BN_Chong?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaytao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    Phanloai?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    id_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_HosoIVFUncheckedUpdateManyInput = {
    id_HosoIVF?: IntFieldUpdateOperationsInput | number
    MasoHS?: NullableStringFieldUpdateOperationsInput | string | null
    Namluutru?: NullableIntFieldUpdateOperationsInput | number | null
    Sohientai?: NullableIntFieldUpdateOperationsInput | number | null
    id_BN_Vo?: NullableStringFieldUpdateOperationsInput | string | null
    id_BN_Chong?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaytao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_nhanvien?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    Phanloai?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    id_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_BSGuibenh?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ModuleCreateInput = {
    enumModule?: string | null
    TenModule?: string | null
    Loai_Ungdung?: string | null
  }

  export type PC_ModuleUncheckedCreateInput = {
    id_Module?: number
    enumModule?: string | null
    TenModule?: string | null
    Loai_Ungdung?: string | null
  }

  export type PC_ModuleUpdateInput = {
    enumModule?: NullableStringFieldUpdateOperationsInput | string | null
    TenModule?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ModuleUncheckedUpdateInput = {
    id_Module?: IntFieldUpdateOperationsInput | number
    enumModule?: NullableStringFieldUpdateOperationsInput | string | null
    TenModule?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ModuleCreateManyInput = {
    enumModule?: string | null
    TenModule?: string | null
    Loai_Ungdung?: string | null
  }

  export type PC_ModuleUpdateManyMutationInput = {
    enumModule?: NullableStringFieldUpdateOperationsInput | string | null
    TenModule?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ModuleUncheckedUpdateManyInput = {
    id_Module?: IntFieldUpdateOperationsInput | number
    enumModule?: NullableStringFieldUpdateOperationsInput | string | null
    TenModule?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Module_NhomTKCreateInput = {
    enum_Module?: string | null
    enum_NhomTK?: string | null
    Mod_Xem?: boolean | null
    Mod_Them?: boolean | null
    Mod_Sua?: boolean | null
    Mod_Xoa?: boolean | null
    Mod_Xuat?: boolean | null
    Ghichu?: string | null
    Loai_Ungdung?: string | null
  }

  export type PC_Module_NhomTKUncheckedCreateInput = {
    id_MDNhom?: number
    enum_Module?: string | null
    enum_NhomTK?: string | null
    Mod_Xem?: boolean | null
    Mod_Them?: boolean | null
    Mod_Sua?: boolean | null
    Mod_Xoa?: boolean | null
    Mod_Xuat?: boolean | null
    Ghichu?: string | null
    Loai_Ungdung?: string | null
  }

  export type PC_Module_NhomTKUpdateInput = {
    enum_Module?: NullableStringFieldUpdateOperationsInput | string | null
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    Mod_Xem?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Them?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Sua?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xoa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xuat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Module_NhomTKUncheckedUpdateInput = {
    id_MDNhom?: IntFieldUpdateOperationsInput | number
    enum_Module?: NullableStringFieldUpdateOperationsInput | string | null
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    Mod_Xem?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Them?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Sua?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xoa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xuat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Module_NhomTKCreateManyInput = {
    enum_Module?: string | null
    enum_NhomTK?: string | null
    Mod_Xem?: boolean | null
    Mod_Them?: boolean | null
    Mod_Sua?: boolean | null
    Mod_Xoa?: boolean | null
    Mod_Xuat?: boolean | null
    Ghichu?: string | null
    Loai_Ungdung?: string | null
  }

  export type PC_Module_NhomTKUpdateManyMutationInput = {
    enum_Module?: NullableStringFieldUpdateOperationsInput | string | null
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    Mod_Xem?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Them?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Sua?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xoa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xuat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Module_NhomTKUncheckedUpdateManyInput = {
    id_MDNhom?: IntFieldUpdateOperationsInput | number
    enum_Module?: NullableStringFieldUpdateOperationsInput | string | null
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    Mod_Xem?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Them?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Sua?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xoa?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Mod_Xuat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Loai_Ungdung?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_NhanvienCreateInput = {
    ID_Nhanvien: string
    Hoten?: string | null
    Ten?: string | null
    Ngaysinh?: string | null
    Namsinh?: string | null
    Gioitinh?: string | null
    Dienthoai?: string | null
    Email?: string | null
    ID_NhomNV?: string | null
    Ten_NhomNV?: string | null
    id_DMPhongban?: string | null
    Phongban?: string | null
    id_DMTonhom?: string | null
    Tonhom?: string | null
    ID_Chinhanh?: string | null
    Diachi?: string | null
    Trangthai?: string | null
    Ngayvaolam?: Date | string | null
    AnhProfile?: string | null
    Sync_Version?: number | null
    Sync_End?: boolean | null
  }

  export type PC_NhanvienUncheckedCreateInput = {
    ID_Nhanvien: string
    Hoten?: string | null
    Ten?: string | null
    Ngaysinh?: string | null
    Namsinh?: string | null
    Gioitinh?: string | null
    Dienthoai?: string | null
    Email?: string | null
    ID_NhomNV?: string | null
    Ten_NhomNV?: string | null
    id_DMPhongban?: string | null
    Phongban?: string | null
    id_DMTonhom?: string | null
    Tonhom?: string | null
    ID_Chinhanh?: string | null
    Diachi?: string | null
    Trangthai?: string | null
    Ngayvaolam?: Date | string | null
    AnhProfile?: string | null
    Sync_Version?: number | null
    Sync_End?: boolean | null
  }

  export type PC_NhanvienUpdateInput = {
    ID_Nhanvien?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    ID_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhongban?: NullableStringFieldUpdateOperationsInput | string | null
    Phongban?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTonhom?: NullableStringFieldUpdateOperationsInput | string | null
    Tonhom?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayvaolam?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AnhProfile?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_End?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_NhanvienUncheckedUpdateInput = {
    ID_Nhanvien?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    ID_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhongban?: NullableStringFieldUpdateOperationsInput | string | null
    Phongban?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTonhom?: NullableStringFieldUpdateOperationsInput | string | null
    Tonhom?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayvaolam?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AnhProfile?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_End?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_NhanvienCreateManyInput = {
    ID_Nhanvien: string
    Hoten?: string | null
    Ten?: string | null
    Ngaysinh?: string | null
    Namsinh?: string | null
    Gioitinh?: string | null
    Dienthoai?: string | null
    Email?: string | null
    ID_NhomNV?: string | null
    Ten_NhomNV?: string | null
    id_DMPhongban?: string | null
    Phongban?: string | null
    id_DMTonhom?: string | null
    Tonhom?: string | null
    ID_Chinhanh?: string | null
    Diachi?: string | null
    Trangthai?: string | null
    Ngayvaolam?: Date | string | null
    AnhProfile?: string | null
    Sync_Version?: number | null
    Sync_End?: boolean | null
  }

  export type PC_NhanvienUpdateManyMutationInput = {
    ID_Nhanvien?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    ID_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhongban?: NullableStringFieldUpdateOperationsInput | string | null
    Phongban?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTonhom?: NullableStringFieldUpdateOperationsInput | string | null
    Tonhom?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayvaolam?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AnhProfile?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_End?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_NhanvienUncheckedUpdateManyInput = {
    ID_Nhanvien?: StringFieldUpdateOperationsInput | string
    Hoten?: NullableStringFieldUpdateOperationsInput | string | null
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Namsinh?: NullableStringFieldUpdateOperationsInput | string | null
    Gioitinh?: NullableStringFieldUpdateOperationsInput | string | null
    Dienthoai?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    ID_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_NhomNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMPhongban?: NullableStringFieldUpdateOperationsInput | string | null
    Phongban?: NullableStringFieldUpdateOperationsInput | string | null
    id_DMTonhom?: NullableStringFieldUpdateOperationsInput | string | null
    Tonhom?: NullableStringFieldUpdateOperationsInput | string | null
    ID_Chinhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Diachi?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayvaolam?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    AnhProfile?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_End?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_Nhanvien_MediaCreateInput = {
    id_Nhanvien: string
    AnhProfile?: Buffer | null
  }

  export type PC_Nhanvien_MediaUncheckedCreateInput = {
    id_Nhanvien: string
    AnhProfile?: Buffer | null
  }

  export type PC_Nhanvien_MediaUpdateInput = {
    id_Nhanvien?: StringFieldUpdateOperationsInput | string
    AnhProfile?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type PC_Nhanvien_MediaUncheckedUpdateInput = {
    id_Nhanvien?: StringFieldUpdateOperationsInput | string
    AnhProfile?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type PC_Nhanvien_MediaCreateManyInput = {
    id_Nhanvien: string
    AnhProfile?: Buffer | null
  }

  export type PC_Nhanvien_MediaUpdateManyMutationInput = {
    id_Nhanvien?: StringFieldUpdateOperationsInput | string
    AnhProfile?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type PC_Nhanvien_MediaUncheckedUpdateManyInput = {
    id_Nhanvien?: StringFieldUpdateOperationsInput | string
    AnhProfile?: NullableBytesFieldUpdateOperationsInput | Buffer | null
  }

  export type PC_NhomTaikhoanCreateInput = {
    enumNhom?: string | null
    TenNhom?: string | null
    Sudung?: boolean | null
  }

  export type PC_NhomTaikhoanUncheckedCreateInput = {
    id_NhomTK?: number
    enumNhom?: string | null
    TenNhom?: string | null
    Sudung?: boolean | null
  }

  export type PC_NhomTaikhoanUpdateInput = {
    enumNhom?: NullableStringFieldUpdateOperationsInput | string | null
    TenNhom?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_NhomTaikhoanUncheckedUpdateInput = {
    id_NhomTK?: IntFieldUpdateOperationsInput | number
    enumNhom?: NullableStringFieldUpdateOperationsInput | string | null
    TenNhom?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_NhomTaikhoanCreateManyInput = {
    enumNhom?: string | null
    TenNhom?: string | null
    Sudung?: boolean | null
  }

  export type PC_NhomTaikhoanUpdateManyMutationInput = {
    enumNhom?: NullableStringFieldUpdateOperationsInput | string | null
    TenNhom?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_NhomTaikhoanUncheckedUpdateManyInput = {
    id_NhomTK?: IntFieldUpdateOperationsInput | number
    enumNhom?: NullableStringFieldUpdateOperationsInput | string | null
    TenNhom?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type PC_PhienbanCreateInput = {
    ID_Phienban: string
    Ten?: string | null
    Ngayphathanh?: Date | string | null
    Duongdan?: string | null
    Kichhoat?: boolean | null
    Ghichu?: string | null
  }

  export type PC_PhienbanUncheckedCreateInput = {
    ID_Phienban: string
    Ten?: string | null
    Ngayphathanh?: Date | string | null
    Duongdan?: string | null
    Kichhoat?: boolean | null
    Ghichu?: string | null
  }

  export type PC_PhienbanUpdateInput = {
    ID_Phienban?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayphathanh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Duongdan?: NullableStringFieldUpdateOperationsInput | string | null
    Kichhoat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_PhienbanUncheckedUpdateInput = {
    ID_Phienban?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayphathanh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Duongdan?: NullableStringFieldUpdateOperationsInput | string | null
    Kichhoat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_PhienbanCreateManyInput = {
    ID_Phienban: string
    Ten?: string | null
    Ngayphathanh?: Date | string | null
    Duongdan?: string | null
    Kichhoat?: boolean | null
    Ghichu?: string | null
  }

  export type PC_PhienbanUpdateManyMutationInput = {
    ID_Phienban?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayphathanh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Duongdan?: NullableStringFieldUpdateOperationsInput | string | null
    Kichhoat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_PhienbanUncheckedUpdateManyInput = {
    ID_Phienban?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayphathanh?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Duongdan?: NullableStringFieldUpdateOperationsInput | string | null
    Kichhoat?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TaikhoanCreateInput = {
    id_User: string
    Password?: string | null
    Name?: string | null
    Email?: string | null
    Device_IMEI?: string | null
    Device_OS?: string | null
    Device_Version?: string | null
    DateCreate?: Date | string | null
    DaDoiPass?: boolean | null
    Active?: boolean | null
    Disable?: boolean | null
    LastLogin?: Date | string | null
    LastLogin_Web?: Date | string | null
    Login_App?: boolean | null
    Login_Web?: boolean | null
    Avatar?: string | null
    ID_ChiNhanh?: string | null
  }

  export type PC_TaikhoanUncheckedCreateInput = {
    id_User: string
    Password?: string | null
    Name?: string | null
    Email?: string | null
    Device_IMEI?: string | null
    Device_OS?: string | null
    Device_Version?: string | null
    DateCreate?: Date | string | null
    DaDoiPass?: boolean | null
    Active?: boolean | null
    Disable?: boolean | null
    LastLogin?: Date | string | null
    LastLogin_Web?: Date | string | null
    Login_App?: boolean | null
    Login_Web?: boolean | null
    Avatar?: string | null
    ID_ChiNhanh?: string | null
  }

  export type PC_TaikhoanUpdateInput = {
    id_User?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Device_IMEI?: NullableStringFieldUpdateOperationsInput | string | null
    Device_OS?: NullableStringFieldUpdateOperationsInput | string | null
    Device_Version?: NullableStringFieldUpdateOperationsInput | string | null
    DateCreate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaDoiPass?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Disable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastLogin_Web?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Login_App?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Login_Web?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TaikhoanUncheckedUpdateInput = {
    id_User?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Device_IMEI?: NullableStringFieldUpdateOperationsInput | string | null
    Device_OS?: NullableStringFieldUpdateOperationsInput | string | null
    Device_Version?: NullableStringFieldUpdateOperationsInput | string | null
    DateCreate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaDoiPass?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Disable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastLogin_Web?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Login_App?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Login_Web?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TaikhoanCreateManyInput = {
    id_User: string
    Password?: string | null
    Name?: string | null
    Email?: string | null
    Device_IMEI?: string | null
    Device_OS?: string | null
    Device_Version?: string | null
    DateCreate?: Date | string | null
    DaDoiPass?: boolean | null
    Active?: boolean | null
    Disable?: boolean | null
    LastLogin?: Date | string | null
    LastLogin_Web?: Date | string | null
    Login_App?: boolean | null
    Login_Web?: boolean | null
    Avatar?: string | null
    ID_ChiNhanh?: string | null
  }

  export type PC_TaikhoanUpdateManyMutationInput = {
    id_User?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Device_IMEI?: NullableStringFieldUpdateOperationsInput | string | null
    Device_OS?: NullableStringFieldUpdateOperationsInput | string | null
    Device_Version?: NullableStringFieldUpdateOperationsInput | string | null
    DateCreate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaDoiPass?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Disable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastLogin_Web?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Login_App?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Login_Web?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TaikhoanUncheckedUpdateManyInput = {
    id_User?: StringFieldUpdateOperationsInput | string
    Password?: NullableStringFieldUpdateOperationsInput | string | null
    Name?: NullableStringFieldUpdateOperationsInput | string | null
    Email?: NullableStringFieldUpdateOperationsInput | string | null
    Device_IMEI?: NullableStringFieldUpdateOperationsInput | string | null
    Device_OS?: NullableStringFieldUpdateOperationsInput | string | null
    Device_Version?: NullableStringFieldUpdateOperationsInput | string | null
    DateCreate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DaDoiPass?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Disable?: NullableBoolFieldUpdateOperationsInput | boolean | null
    LastLogin?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    LastLogin_Web?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Login_App?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Login_Web?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Avatar?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Taikhoan_BangluongCreateInput = {
    id_taikhoan?: string | null
    HotenNV?: string | null
    id_nhanvien_cap?: string | null
    ngaycap?: Date | string | null
    sdt_nhan_pass?: string | null
    da_gui_sms?: boolean | null
    trangthai_sms?: string | null
    Pass_bill_luong?: string | null
  }

  export type PC_Taikhoan_BangluongUncheckedCreateInput = {
    id?: number
    id_taikhoan?: string | null
    HotenNV?: string | null
    id_nhanvien_cap?: string | null
    ngaycap?: Date | string | null
    sdt_nhan_pass?: string | null
    da_gui_sms?: boolean | null
    trangthai_sms?: string | null
    Pass_bill_luong?: string | null
  }

  export type PC_Taikhoan_BangluongUpdateInput = {
    id_taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    HotenNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien_cap?: NullableStringFieldUpdateOperationsInput | string | null
    ngaycap?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sdt_nhan_pass?: NullableStringFieldUpdateOperationsInput | string | null
    da_gui_sms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trangthai_sms?: NullableStringFieldUpdateOperationsInput | string | null
    Pass_bill_luong?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Taikhoan_BangluongUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    HotenNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien_cap?: NullableStringFieldUpdateOperationsInput | string | null
    ngaycap?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sdt_nhan_pass?: NullableStringFieldUpdateOperationsInput | string | null
    da_gui_sms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trangthai_sms?: NullableStringFieldUpdateOperationsInput | string | null
    Pass_bill_luong?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Taikhoan_BangluongCreateManyInput = {
    id_taikhoan?: string | null
    HotenNV?: string | null
    id_nhanvien_cap?: string | null
    ngaycap?: Date | string | null
    sdt_nhan_pass?: string | null
    da_gui_sms?: boolean | null
    trangthai_sms?: string | null
    Pass_bill_luong?: string | null
  }

  export type PC_Taikhoan_BangluongUpdateManyMutationInput = {
    id_taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    HotenNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien_cap?: NullableStringFieldUpdateOperationsInput | string | null
    ngaycap?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sdt_nhan_pass?: NullableStringFieldUpdateOperationsInput | string | null
    da_gui_sms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trangthai_sms?: NullableStringFieldUpdateOperationsInput | string | null
    Pass_bill_luong?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_Taikhoan_BangluongUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    HotenNV?: NullableStringFieldUpdateOperationsInput | string | null
    id_nhanvien_cap?: NullableStringFieldUpdateOperationsInput | string | null
    ngaycap?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sdt_nhan_pass?: NullableStringFieldUpdateOperationsInput | string | null
    da_gui_sms?: NullableBoolFieldUpdateOperationsInput | boolean | null
    trangthai_sms?: NullableStringFieldUpdateOperationsInput | string | null
    Pass_bill_luong?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ThanhvienCreateInput = {
    enum_NhomTK?: string | null
    id_User?: string | null
  }

  export type PC_ThanhvienUncheckedCreateInput = {
    id_TV?: number
    enum_NhomTK?: string | null
    id_User?: string | null
  }

  export type PC_ThanhvienUpdateInput = {
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    id_User?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ThanhvienUncheckedUpdateInput = {
    id_TV?: IntFieldUpdateOperationsInput | number
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    id_User?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ThanhvienCreateManyInput = {
    enum_NhomTK?: string | null
    id_User?: string | null
  }

  export type PC_ThanhvienUpdateManyMutationInput = {
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    id_User?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_ThanhvienUncheckedUpdateManyInput = {
    id_TV?: IntFieldUpdateOperationsInput | number
    enum_NhomTK?: NullableStringFieldUpdateOperationsInput | string | null
    id_User?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TheCapphatCreateInput = {
    id_Benhnhan?: string | null
    Hoten_Benhnhan?: string | null
    Ngaysinh?: string | null
    Ngaycapthe?: Date | string | null
    id_NVCap?: string | null
    Hoten_NVCap?: string | null
    id_Dauthe?: string | null
    MaThe?: string | null
    Diem_Congthem?: number | null
    Lydo_Congdiem?: string | null
    id_NVCongdiem?: string | null
    Trangthai?: string | null
    LydoKhoa?: string | null
    Ngayhethan?: Date | string | null
    DoituongSudung?: string | null
    TTNguoiNhanThe?: string | null
    CongdongBau?: string | null
    Nangcap_PCCARE?: boolean | null
    Ngaynang?: Date | string | null
    id_ChiNhanh?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_TheCapphatUncheckedCreateInput = {
    id_TheCapphat?: number
    id_Benhnhan?: string | null
    Hoten_Benhnhan?: string | null
    Ngaysinh?: string | null
    Ngaycapthe?: Date | string | null
    id_NVCap?: string | null
    Hoten_NVCap?: string | null
    id_Dauthe?: string | null
    MaThe?: string | null
    Diem_Congthem?: number | null
    Lydo_Congdiem?: string | null
    id_NVCongdiem?: string | null
    Trangthai?: string | null
    LydoKhoa?: string | null
    Ngayhethan?: Date | string | null
    DoituongSudung?: string | null
    TTNguoiNhanThe?: string | null
    CongdongBau?: string | null
    Nangcap_PCCARE?: boolean | null
    Ngaynang?: Date | string | null
    id_ChiNhanh?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_TheCapphatUpdateInput = {
    id_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaycapthe?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    id_Dauthe?: NullableStringFieldUpdateOperationsInput | string | null
    MaThe?: NullableStringFieldUpdateOperationsInput | string | null
    Diem_Congthem?: NullableIntFieldUpdateOperationsInput | number | null
    Lydo_Congdiem?: NullableStringFieldUpdateOperationsInput | string | null
    id_NVCongdiem?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    LydoKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayhethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DoituongSudung?: NullableStringFieldUpdateOperationsInput | string | null
    TTNguoiNhanThe?: NullableStringFieldUpdateOperationsInput | string | null
    CongdongBau?: NullableStringFieldUpdateOperationsInput | string | null
    Nangcap_PCCARE?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaynang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TheCapphatUncheckedUpdateInput = {
    id_TheCapphat?: IntFieldUpdateOperationsInput | number
    id_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaycapthe?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    id_Dauthe?: NullableStringFieldUpdateOperationsInput | string | null
    MaThe?: NullableStringFieldUpdateOperationsInput | string | null
    Diem_Congthem?: NullableIntFieldUpdateOperationsInput | number | null
    Lydo_Congdiem?: NullableStringFieldUpdateOperationsInput | string | null
    id_NVCongdiem?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    LydoKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayhethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DoituongSudung?: NullableStringFieldUpdateOperationsInput | string | null
    TTNguoiNhanThe?: NullableStringFieldUpdateOperationsInput | string | null
    CongdongBau?: NullableStringFieldUpdateOperationsInput | string | null
    Nangcap_PCCARE?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaynang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TheCapphatCreateManyInput = {
    id_Benhnhan?: string | null
    Hoten_Benhnhan?: string | null
    Ngaysinh?: string | null
    Ngaycapthe?: Date | string | null
    id_NVCap?: string | null
    Hoten_NVCap?: string | null
    id_Dauthe?: string | null
    MaThe?: string | null
    Diem_Congthem?: number | null
    Lydo_Congdiem?: string | null
    id_NVCongdiem?: string | null
    Trangthai?: string | null
    LydoKhoa?: string | null
    Ngayhethan?: Date | string | null
    DoituongSudung?: string | null
    TTNguoiNhanThe?: string | null
    CongdongBau?: string | null
    Nangcap_PCCARE?: boolean | null
    Ngaynang?: Date | string | null
    id_ChiNhanh?: string | null
    Sync_Version?: number | null
    Sync_Date?: Date | string | null
    Sync_To_All?: boolean | null
    Sync_By_Branch?: string | null
  }

  export type PC_TheCapphatUpdateManyMutationInput = {
    id_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaycapthe?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    id_Dauthe?: NullableStringFieldUpdateOperationsInput | string | null
    MaThe?: NullableStringFieldUpdateOperationsInput | string | null
    Diem_Congthem?: NullableIntFieldUpdateOperationsInput | number | null
    Lydo_Congdiem?: NullableStringFieldUpdateOperationsInput | string | null
    id_NVCongdiem?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    LydoKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayhethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DoituongSudung?: NullableStringFieldUpdateOperationsInput | string | null
    TTNguoiNhanThe?: NullableStringFieldUpdateOperationsInput | string | null
    CongdongBau?: NullableStringFieldUpdateOperationsInput | string | null
    Nangcap_PCCARE?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaynang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PC_TheCapphatUncheckedUpdateManyInput = {
    id_TheCapphat?: IntFieldUpdateOperationsInput | number
    id_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_Benhnhan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaysinh?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaycapthe?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    Hoten_NVCap?: NullableStringFieldUpdateOperationsInput | string | null
    id_Dauthe?: NullableStringFieldUpdateOperationsInput | string | null
    MaThe?: NullableStringFieldUpdateOperationsInput | string | null
    Diem_Congthem?: NullableIntFieldUpdateOperationsInput | number | null
    Lydo_Congdiem?: NullableStringFieldUpdateOperationsInput | string | null
    id_NVCongdiem?: NullableStringFieldUpdateOperationsInput | string | null
    Trangthai?: NullableStringFieldUpdateOperationsInput | string | null
    LydoKhoa?: NullableStringFieldUpdateOperationsInput | string | null
    Ngayhethan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    DoituongSudung?: NullableStringFieldUpdateOperationsInput | string | null
    TTNguoiNhanThe?: NullableStringFieldUpdateOperationsInput | string | null
    CongdongBau?: NullableStringFieldUpdateOperationsInput | string | null
    Nangcap_PCCARE?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ngaynang?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sync_Version?: NullableIntFieldUpdateOperationsInput | number | null
    Sync_Date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    Sync_To_All?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Sync_By_Branch?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_PhishingCreateInput = {
    userid?: string | null
    username?: string | null
    phone?: string | null
    email?: string | null
    description?: string | null
    branchID?: string | null
    branchName?: string | null
    deptID?: string | null
    deptName?: string | null
  }

  export type tbl_PhishingUncheckedCreateInput = {
    id?: number
    userid?: string | null
    username?: string | null
    phone?: string | null
    email?: string | null
    description?: string | null
    branchID?: string | null
    branchName?: string | null
    deptID?: string | null
    deptName?: string | null
  }

  export type tbl_PhishingUpdateInput = {
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    branchID?: NullableStringFieldUpdateOperationsInput | string | null
    branchName?: NullableStringFieldUpdateOperationsInput | string | null
    deptID?: NullableStringFieldUpdateOperationsInput | string | null
    deptName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_PhishingUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    branchID?: NullableStringFieldUpdateOperationsInput | string | null
    branchName?: NullableStringFieldUpdateOperationsInput | string | null
    deptID?: NullableStringFieldUpdateOperationsInput | string | null
    deptName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_PhishingCreateManyInput = {
    userid?: string | null
    username?: string | null
    phone?: string | null
    email?: string | null
    description?: string | null
    branchID?: string | null
    branchName?: string | null
    deptID?: string | null
    deptName?: string | null
  }

  export type tbl_PhishingUpdateManyMutationInput = {
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    branchID?: NullableStringFieldUpdateOperationsInput | string | null
    branchName?: NullableStringFieldUpdateOperationsInput | string | null
    deptID?: NullableStringFieldUpdateOperationsInput | string | null
    deptName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tbl_PhishingUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    branchID?: NullableStringFieldUpdateOperationsInput | string | null
    branchName?: NullableStringFieldUpdateOperationsInput | string | null
    deptID?: NullableStringFieldUpdateOperationsInput | string | null
    deptName?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type USER_PORTALCreateInput = {
    PID: string
    Name?: string | null
  }

  export type USER_PORTALUncheckedCreateInput = {
    PID: string
    Name?: string | null
  }

  export type USER_PORTALUpdateInput = {
    PID?: StringFieldUpdateOperationsInput | string
    Name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type USER_PORTALUncheckedUpdateInput = {
    PID?: StringFieldUpdateOperationsInput | string
    Name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type USER_PORTALCreateManyInput = {
    PID: string
    Name?: string | null
  }

  export type USER_PORTALUpdateManyMutationInput = {
    PID?: StringFieldUpdateOperationsInput | string
    Name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type USER_PORTALUncheckedUpdateManyInput = {
    PID?: StringFieldUpdateOperationsInput | string
    Name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_DMChinhanhCreateInput = {
    ID_ChiNhanh: string
    RSA_Public_Key?: string | null
    Url_WS?: string | null
    Ten_ChiNhanh?: string | null
    Sudung?: boolean | null
    Ghichu?: string | null
    Url_Webnoibo?: string | null
  }

  export type WS_DMChinhanhUncheckedCreateInput = {
    ID_ChiNhanh: string
    RSA_Public_Key?: string | null
    Url_WS?: string | null
    Ten_ChiNhanh?: string | null
    Sudung?: boolean | null
    Ghichu?: string | null
    Url_Webnoibo?: string | null
  }

  export type WS_DMChinhanhUpdateInput = {
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    RSA_Public_Key?: NullableStringFieldUpdateOperationsInput | string | null
    Url_WS?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Webnoibo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_DMChinhanhUncheckedUpdateInput = {
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    RSA_Public_Key?: NullableStringFieldUpdateOperationsInput | string | null
    Url_WS?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Webnoibo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_DMChinhanhCreateManyInput = {
    ID_ChiNhanh: string
    RSA_Public_Key?: string | null
    Url_WS?: string | null
    Ten_ChiNhanh?: string | null
    Sudung?: boolean | null
    Ghichu?: string | null
    Url_Webnoibo?: string | null
  }

  export type WS_DMChinhanhUpdateManyMutationInput = {
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    RSA_Public_Key?: NullableStringFieldUpdateOperationsInput | string | null
    Url_WS?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Webnoibo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_DMChinhanhUncheckedUpdateManyInput = {
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    RSA_Public_Key?: NullableStringFieldUpdateOperationsInput | string | null
    Url_WS?: NullableStringFieldUpdateOperationsInput | string | null
    Ten_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Url_Webnoibo?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_DMDonviCreateInput = {
    id_DMDonvi: string
    Ten_Donvi?: string | null
    id_Khoaphong?: string | null
    id_ChiNhanh?: string | null
    Sudung?: boolean | null
  }

  export type WS_DMDonviUncheckedCreateInput = {
    id_DMDonvi: string
    Ten_Donvi?: string | null
    id_Khoaphong?: string | null
    id_ChiNhanh?: string | null
    Sudung?: boolean | null
  }

  export type WS_DMDonviUpdateInput = {
    id_DMDonvi?: StringFieldUpdateOperationsInput | string
    Ten_Donvi?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMDonviUncheckedUpdateInput = {
    id_DMDonvi?: StringFieldUpdateOperationsInput | string
    Ten_Donvi?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMDonviCreateManyInput = {
    id_DMDonvi: string
    Ten_Donvi?: string | null
    id_Khoaphong?: string | null
    id_ChiNhanh?: string | null
    Sudung?: boolean | null
  }

  export type WS_DMDonviUpdateManyMutationInput = {
    id_DMDonvi?: StringFieldUpdateOperationsInput | string
    Ten_Donvi?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMDonviUncheckedUpdateManyInput = {
    id_DMDonvi?: StringFieldUpdateOperationsInput | string
    Ten_Donvi?: NullableStringFieldUpdateOperationsInput | string | null
    id_Khoaphong?: NullableStringFieldUpdateOperationsInput | string | null
    id_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMKhoaPhongCreateInput = {
    id_Khoaphong: string
    Ten?: string | null
    id_KPCha?: string | null
    ID_ChiNhanh: string
    Ghichu?: string | null
    Sudung?: boolean | null
    VanHanh?: boolean | null
  }

  export type WS_DMKhoaPhongUncheckedCreateInput = {
    id_Khoaphong: string
    Ten?: string | null
    id_KPCha?: string | null
    ID_ChiNhanh: string
    Ghichu?: string | null
    Sudung?: boolean | null
    VanHanh?: boolean | null
  }

  export type WS_DMKhoaPhongUpdateInput = {
    id_Khoaphong?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    id_KPCha?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    VanHanh?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMKhoaPhongUncheckedUpdateInput = {
    id_Khoaphong?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    id_KPCha?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    VanHanh?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMKhoaPhongCreateManyInput = {
    id_Khoaphong: string
    Ten?: string | null
    id_KPCha?: string | null
    ID_ChiNhanh: string
    Ghichu?: string | null
    Sudung?: boolean | null
    VanHanh?: boolean | null
  }

  export type WS_DMKhoaPhongUpdateManyMutationInput = {
    id_Khoaphong?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    id_KPCha?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    VanHanh?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMKhoaPhongUncheckedUpdateManyInput = {
    id_Khoaphong?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    id_KPCha?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: StringFieldUpdateOperationsInput | string
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    VanHanh?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMNhomTochucCreateInput = {
    id_DMNhomTochuc: string
    id_DMChinhanh: string
    Ten?: string | null
    Ghichu?: string | null
    Sudung?: boolean | null
  }

  export type WS_DMNhomTochucUncheckedCreateInput = {
    id_DMNhomTochuc: string
    id_DMChinhanh: string
    Ten?: string | null
    Ghichu?: string | null
    Sudung?: boolean | null
  }

  export type WS_DMNhomTochucUpdateInput = {
    id_DMNhomTochuc?: StringFieldUpdateOperationsInput | string
    id_DMChinhanh?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMNhomTochucUncheckedUpdateInput = {
    id_DMNhomTochuc?: StringFieldUpdateOperationsInput | string
    id_DMChinhanh?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMNhomTochucCreateManyInput = {
    id_DMNhomTochuc: string
    id_DMChinhanh: string
    Ten?: string | null
    Ghichu?: string | null
    Sudung?: boolean | null
  }

  export type WS_DMNhomTochucUpdateManyMutationInput = {
    id_DMNhomTochuc?: StringFieldUpdateOperationsInput | string
    id_DMChinhanh?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_DMNhomTochucUncheckedUpdateManyInput = {
    id_DMNhomTochuc?: StringFieldUpdateOperationsInput | string
    id_DMChinhanh?: StringFieldUpdateOperationsInput | string
    Ten?: NullableStringFieldUpdateOperationsInput | string | null
    Ghichu?: NullableStringFieldUpdateOperationsInput | string | null
    Sudung?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type WS_LogCreateInput = {
    id_TaiKhoan?: number | null
    Taikhoan?: string | null
    Ngaygio?: Date | string | null
    ResponseCode?: string | null
    UserHostName?: string | null
    UserHostAddress?: string | null
    QueryString?: string | null
    HttpMethod?: string | null
    ClientBrowser?: string | null
  }

  export type WS_LogUncheckedCreateInput = {
    id_Log?: number
    id_TaiKhoan?: number | null
    Taikhoan?: string | null
    Ngaygio?: Date | string | null
    ResponseCode?: string | null
    UserHostName?: string | null
    UserHostAddress?: string | null
    QueryString?: string | null
    HttpMethod?: string | null
    ClientBrowser?: string | null
  }

  export type WS_LogUpdateInput = {
    id_TaiKhoan?: NullableIntFieldUpdateOperationsInput | number | null
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaygio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ResponseCode?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostName?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostAddress?: NullableStringFieldUpdateOperationsInput | string | null
    QueryString?: NullableStringFieldUpdateOperationsInput | string | null
    HttpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    ClientBrowser?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_LogUncheckedUpdateInput = {
    id_Log?: IntFieldUpdateOperationsInput | number
    id_TaiKhoan?: NullableIntFieldUpdateOperationsInput | number | null
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaygio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ResponseCode?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostName?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostAddress?: NullableStringFieldUpdateOperationsInput | string | null
    QueryString?: NullableStringFieldUpdateOperationsInput | string | null
    HttpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    ClientBrowser?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_LogCreateManyInput = {
    id_TaiKhoan?: number | null
    Taikhoan?: string | null
    Ngaygio?: Date | string | null
    ResponseCode?: string | null
    UserHostName?: string | null
    UserHostAddress?: string | null
    QueryString?: string | null
    HttpMethod?: string | null
    ClientBrowser?: string | null
  }

  export type WS_LogUpdateManyMutationInput = {
    id_TaiKhoan?: NullableIntFieldUpdateOperationsInput | number | null
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaygio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ResponseCode?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostName?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostAddress?: NullableStringFieldUpdateOperationsInput | string | null
    QueryString?: NullableStringFieldUpdateOperationsInput | string | null
    HttpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    ClientBrowser?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_LogUncheckedUpdateManyInput = {
    id_Log?: IntFieldUpdateOperationsInput | number
    id_TaiKhoan?: NullableIntFieldUpdateOperationsInput | number | null
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Ngaygio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ResponseCode?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostName?: NullableStringFieldUpdateOperationsInput | string | null
    UserHostAddress?: NullableStringFieldUpdateOperationsInput | string | null
    QueryString?: NullableStringFieldUpdateOperationsInput | string | null
    HttpMethod?: NullableStringFieldUpdateOperationsInput | string | null
    ClientBrowser?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_TaikhoanCreateInput = {
    Taikhoan?: string | null
    Matkhau?: string | null
    ID_ChiNhanh?: string | null
    NgaygioTao?: Date | string | null
    NgaygioHetHan?: Date | string | null
    SuDung?: boolean | null
    GhiChu?: string | null
  }

  export type WS_TaikhoanUncheckedCreateInput = {
    id_TaiKhoan?: number
    Taikhoan?: string | null
    Matkhau?: string | null
    ID_ChiNhanh?: string | null
    NgaygioTao?: Date | string | null
    NgaygioHetHan?: Date | string | null
    SuDung?: boolean | null
    GhiChu?: string | null
  }

  export type WS_TaikhoanUpdateInput = {
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Matkhau?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    NgaygioTao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NgaygioHetHan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SuDung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_TaikhoanUncheckedUpdateInput = {
    id_TaiKhoan?: IntFieldUpdateOperationsInput | number
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Matkhau?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    NgaygioTao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NgaygioHetHan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SuDung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_TaikhoanCreateManyInput = {
    Taikhoan?: string | null
    Matkhau?: string | null
    ID_ChiNhanh?: string | null
    NgaygioTao?: Date | string | null
    NgaygioHetHan?: Date | string | null
    SuDung?: boolean | null
    GhiChu?: string | null
  }

  export type WS_TaikhoanUpdateManyMutationInput = {
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Matkhau?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    NgaygioTao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NgaygioHetHan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SuDung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WS_TaikhoanUncheckedUpdateManyInput = {
    id_TaiKhoan?: IntFieldUpdateOperationsInput | number
    Taikhoan?: NullableStringFieldUpdateOperationsInput | string | null
    Matkhau?: NullableStringFieldUpdateOperationsInput | string | null
    ID_ChiNhanh?: NullableStringFieldUpdateOperationsInput | string | null
    NgaygioTao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    NgaygioHetHan?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    SuDung?: NullableBoolFieldUpdateOperationsInput | boolean | null
    GhiChu?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CashierDataCountOrderByAggregateInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrder
    ChiNhanh?: SortOrder
    IdPhieuThu?: SortOrder
    IdNhanVien?: SortOrder
    HoTenNhanVien?: SortOrder
    NgayThu?: SortOrder
    IdBenhNhan?: SortOrder
    HoTenBenhNhan?: SortOrder
    NamSinh?: SortOrder
    TinhThanh?: SortOrder
    IdTiepNhan?: SortOrder
    DoiTuong?: SortOrder
    LoaiTiepNhan?: SortOrder
    KhamBenhVe?: SortOrder
    LoaiPhieu?: SortOrder
    IdPCD?: SortOrder
    TienTamUng?: SortOrder
    TUConLai?: SortOrder
    DenTu?: SortOrder
    ChuyenKhoa?: SortOrder
    IdChiTiet?: SortOrder
    IdDichVu?: SortOrder
    TenDichVu?: SortOrder
    PhanLoai?: SortOrder
    LoaiHang?: SortOrder
    CoBHYT?: SortOrder
    SoLuong?: SortOrder
    DonVi?: SortOrder
    DonGia?: SortOrder
    GiaBHYT?: SortOrder
    ThanhTien?: SortOrder
    BHYTChi?: SortOrder
    ThanhTienBHYT?: SortOrder
    TongTien?: SortOrder
    ChenhLech?: SortOrder
    GiamGia?: SortOrder
    TienGiam?: SortOrder
    ThanhToan?: SortOrder
    TienGuiMau?: SortOrder
  }

  export type CashierDataAvgOrderByAggregateInput = {
    IdTiepNhan?: SortOrder
    TienTamUng?: SortOrder
    TUConLai?: SortOrder
    IdChiTiet?: SortOrder
    SoLuong?: SortOrder
    DonGia?: SortOrder
    GiaBHYT?: SortOrder
    ThanhTien?: SortOrder
    BHYTChi?: SortOrder
    ThanhTienBHYT?: SortOrder
    TongTien?: SortOrder
    ChenhLech?: SortOrder
    GiamGia?: SortOrder
    TienGiam?: SortOrder
    ThanhToan?: SortOrder
    TienGuiMau?: SortOrder
  }

  export type CashierDataMaxOrderByAggregateInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrder
    ChiNhanh?: SortOrder
    IdPhieuThu?: SortOrder
    IdNhanVien?: SortOrder
    HoTenNhanVien?: SortOrder
    NgayThu?: SortOrder
    IdBenhNhan?: SortOrder
    HoTenBenhNhan?: SortOrder
    NamSinh?: SortOrder
    TinhThanh?: SortOrder
    IdTiepNhan?: SortOrder
    DoiTuong?: SortOrder
    LoaiTiepNhan?: SortOrder
    KhamBenhVe?: SortOrder
    LoaiPhieu?: SortOrder
    IdPCD?: SortOrder
    TienTamUng?: SortOrder
    TUConLai?: SortOrder
    DenTu?: SortOrder
    ChuyenKhoa?: SortOrder
    IdChiTiet?: SortOrder
    IdDichVu?: SortOrder
    TenDichVu?: SortOrder
    PhanLoai?: SortOrder
    LoaiHang?: SortOrder
    CoBHYT?: SortOrder
    SoLuong?: SortOrder
    DonVi?: SortOrder
    DonGia?: SortOrder
    GiaBHYT?: SortOrder
    ThanhTien?: SortOrder
    BHYTChi?: SortOrder
    ThanhTienBHYT?: SortOrder
    TongTien?: SortOrder
    ChenhLech?: SortOrder
    GiamGia?: SortOrder
    TienGiam?: SortOrder
    ThanhToan?: SortOrder
    TienGuiMau?: SortOrder
  }

  export type CashierDataMinOrderByAggregateInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrder
    ChiNhanh?: SortOrder
    IdPhieuThu?: SortOrder
    IdNhanVien?: SortOrder
    HoTenNhanVien?: SortOrder
    NgayThu?: SortOrder
    IdBenhNhan?: SortOrder
    HoTenBenhNhan?: SortOrder
    NamSinh?: SortOrder
    TinhThanh?: SortOrder
    IdTiepNhan?: SortOrder
    DoiTuong?: SortOrder
    LoaiTiepNhan?: SortOrder
    KhamBenhVe?: SortOrder
    LoaiPhieu?: SortOrder
    IdPCD?: SortOrder
    TienTamUng?: SortOrder
    TUConLai?: SortOrder
    DenTu?: SortOrder
    ChuyenKhoa?: SortOrder
    IdChiTiet?: SortOrder
    IdDichVu?: SortOrder
    TenDichVu?: SortOrder
    PhanLoai?: SortOrder
    LoaiHang?: SortOrder
    CoBHYT?: SortOrder
    SoLuong?: SortOrder
    DonVi?: SortOrder
    DonGia?: SortOrder
    GiaBHYT?: SortOrder
    ThanhTien?: SortOrder
    BHYTChi?: SortOrder
    ThanhTienBHYT?: SortOrder
    TongTien?: SortOrder
    ChenhLech?: SortOrder
    GiamGia?: SortOrder
    TienGiam?: SortOrder
    ThanhToan?: SortOrder
    TienGuiMau?: SortOrder
  }

  export type CashierDataSumOrderByAggregateInput = {
    IdTiepNhan?: SortOrder
    TienTamUng?: SortOrder
    TUConLai?: SortOrder
    IdChiTiet?: SortOrder
    SoLuong?: SortOrder
    DonGia?: SortOrder
    GiaBHYT?: SortOrder
    ThanhTien?: SortOrder
    BHYTChi?: SortOrder
    ThanhTienBHYT?: SortOrder
    TongTien?: SortOrder
    ChenhLech?: SortOrder
    GiamGia?: SortOrder
    TienGiam?: SortOrder
    ThanhToan?: SortOrder
    TienGuiMau?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type DrugRevenueDataCountOrderByAggregateInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrder
    ChiNhanh?: SortOrder
    IdXuatKho?: SortOrder
    IdToaThuoc?: SortOrder
    IdNhanVien?: SortOrder
    HoTenNhanVien?: SortOrder
    IdPhongKham?: SortOrder
    TenPhongKham?: SortOrder
    IdBenhNhan?: SortOrder
    HoTenBenhNhan?: SortOrder
    DoiTuong?: SortOrder
    NgayXuat?: SortOrder
    LoaiPhieu?: SortOrder
    MaNghiepVu?: SortOrder
    IdKho?: SortOrder
    TenKho?: SortOrder
    TongTien?: SortOrder
    ChietKhau?: SortOrder
    TienTruocThue?: SortOrder
    ThanhTien?: SortOrder
  }

  export type DrugRevenueDataAvgOrderByAggregateInput = {
    TongTien?: SortOrder
    ChietKhau?: SortOrder
    TienTruocThue?: SortOrder
    ThanhTien?: SortOrder
  }

  export type DrugRevenueDataMaxOrderByAggregateInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrder
    ChiNhanh?: SortOrder
    IdXuatKho?: SortOrder
    IdToaThuoc?: SortOrder
    IdNhanVien?: SortOrder
    HoTenNhanVien?: SortOrder
    IdPhongKham?: SortOrder
    TenPhongKham?: SortOrder
    IdBenhNhan?: SortOrder
    HoTenBenhNhan?: SortOrder
    DoiTuong?: SortOrder
    NgayXuat?: SortOrder
    LoaiPhieu?: SortOrder
    MaNghiepVu?: SortOrder
    IdKho?: SortOrder
    TenKho?: SortOrder
    TongTien?: SortOrder
    ChietKhau?: SortOrder
    TienTruocThue?: SortOrder
    ThanhTien?: SortOrder
  }

  export type DrugRevenueDataMinOrderByAggregateInput = {
    Id?: SortOrder
    IdChiNhanh?: SortOrder
    ChiNhanh?: SortOrder
    IdXuatKho?: SortOrder
    IdToaThuoc?: SortOrder
    IdNhanVien?: SortOrder
    HoTenNhanVien?: SortOrder
    IdPhongKham?: SortOrder
    TenPhongKham?: SortOrder
    IdBenhNhan?: SortOrder
    HoTenBenhNhan?: SortOrder
    DoiTuong?: SortOrder
    NgayXuat?: SortOrder
    LoaiPhieu?: SortOrder
    MaNghiepVu?: SortOrder
    IdKho?: SortOrder
    TenKho?: SortOrder
    TongTien?: SortOrder
    ChietKhau?: SortOrder
    TienTruocThue?: SortOrder
    ThanhTien?: SortOrder
  }

  export type DrugRevenueDataSumOrderByAggregateInput = {
    TongTien?: SortOrder
    ChietKhau?: SortOrder
    TienTruocThue?: SortOrder
    ThanhTien?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | null
    notIn?: Buffer[] | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type PC_BangluongCountOrderByAggregateInput = {
    id_bangluong?: SortOrder
    id_chinhanh?: SortOrder
    id_nhanvien?: SortOrder
    nam_luong?: SortOrder
    thang_luong?: SortOrder
    chitiet_luong?: SortOrder
    luong_sanpham?: SortOrder
    id_nhanvien_upload?: SortOrder
    ngay_upload?: SortOrder
  }

  export type PC_BangluongAvgOrderByAggregateInput = {
    id_bangluong?: SortOrder
    nam_luong?: SortOrder
    thang_luong?: SortOrder
  }

  export type PC_BangluongMaxOrderByAggregateInput = {
    id_bangluong?: SortOrder
    id_chinhanh?: SortOrder
    id_nhanvien?: SortOrder
    nam_luong?: SortOrder
    thang_luong?: SortOrder
    chitiet_luong?: SortOrder
    luong_sanpham?: SortOrder
    id_nhanvien_upload?: SortOrder
    ngay_upload?: SortOrder
  }

  export type PC_BangluongMinOrderByAggregateInput = {
    id_bangluong?: SortOrder
    id_chinhanh?: SortOrder
    id_nhanvien?: SortOrder
    nam_luong?: SortOrder
    thang_luong?: SortOrder
    chitiet_luong?: SortOrder
    luong_sanpham?: SortOrder
    id_nhanvien_upload?: SortOrder
    ngay_upload?: SortOrder
  }

  export type PC_BangluongSumOrderByAggregateInput = {
    id_bangluong?: SortOrder
    nam_luong?: SortOrder
    thang_luong?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type BytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | null
    notIn?: Buffer[] | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }

  export type PC_BantinCountOrderByAggregateInput = {
    id_Bantin?: SortOrder
    Tieude?: SortOrder
    Tomtat?: SortOrder
    Noidung?: SortOrder
    Url_Images?: SortOrder
    id_Chinhanh?: SortOrder
    id_KP_Banhanh?: SortOrder
    Ten_KP_Banhanh?: SortOrder
    id_To_Banhanh?: SortOrder
    Ten_To_Banhanh?: SortOrder
    id_NV_Them?: SortOrder
    Ngaydang?: SortOrder
    Ngay_Hethan?: SortOrder
    Hienthi_Home?: SortOrder
    Sudung?: SortOrder
    Luotxem?: SortOrder
    Ghim_Bantin?: SortOrder
    Bantin_Tapdoan?: SortOrder
    id_DMPhanloai?: SortOrder
    TenPhanloai?: SortOrder
    id_DMPhanloaiCT?: SortOrder
    TenChitiet?: SortOrder
    Url_Video?: SortOrder
  }

  export type PC_BantinAvgOrderByAggregateInput = {
    id_Bantin?: SortOrder
    Luotxem?: SortOrder
    id_DMPhanloai?: SortOrder
    id_DMPhanloaiCT?: SortOrder
  }

  export type PC_BantinMaxOrderByAggregateInput = {
    id_Bantin?: SortOrder
    Tieude?: SortOrder
    Tomtat?: SortOrder
    Noidung?: SortOrder
    Url_Images?: SortOrder
    id_Chinhanh?: SortOrder
    id_KP_Banhanh?: SortOrder
    Ten_KP_Banhanh?: SortOrder
    id_To_Banhanh?: SortOrder
    Ten_To_Banhanh?: SortOrder
    id_NV_Them?: SortOrder
    Ngaydang?: SortOrder
    Ngay_Hethan?: SortOrder
    Hienthi_Home?: SortOrder
    Sudung?: SortOrder
    Luotxem?: SortOrder
    Ghim_Bantin?: SortOrder
    Bantin_Tapdoan?: SortOrder
    id_DMPhanloai?: SortOrder
    TenPhanloai?: SortOrder
    id_DMPhanloaiCT?: SortOrder
    TenChitiet?: SortOrder
    Url_Video?: SortOrder
  }

  export type PC_BantinMinOrderByAggregateInput = {
    id_Bantin?: SortOrder
    Tieude?: SortOrder
    Tomtat?: SortOrder
    Noidung?: SortOrder
    Url_Images?: SortOrder
    id_Chinhanh?: SortOrder
    id_KP_Banhanh?: SortOrder
    Ten_KP_Banhanh?: SortOrder
    id_To_Banhanh?: SortOrder
    Ten_To_Banhanh?: SortOrder
    id_NV_Them?: SortOrder
    Ngaydang?: SortOrder
    Ngay_Hethan?: SortOrder
    Hienthi_Home?: SortOrder
    Sudung?: SortOrder
    Luotxem?: SortOrder
    Ghim_Bantin?: SortOrder
    Bantin_Tapdoan?: SortOrder
    id_DMPhanloai?: SortOrder
    TenPhanloai?: SortOrder
    id_DMPhanloaiCT?: SortOrder
    TenChitiet?: SortOrder
    Url_Video?: SortOrder
  }

  export type PC_BantinSumOrderByAggregateInput = {
    id_Bantin?: SortOrder
    Luotxem?: SortOrder
    id_DMPhanloai?: SortOrder
    id_DMPhanloaiCT?: SortOrder
  }

  export type PC_BenhnhanCountOrderByAggregateInput = {
    id_Benhnhan?: SortOrder
    Hoten?: SortOrder
    Ten?: SortOrder
    Hotenkhongdau?: SortOrder
    Ngaythangnamsinh?: SortOrder
    Namsinh?: SortOrder
    Gioitinh?: SortOrder
    Noilamviec?: SortOrder
    SoCMND?: SortOrder
    Email?: SortOrder
    Dienthoai_didong?: SortOrder
    Tamtru_diachi?: SortOrder
    Tamtru_xaphuong?: SortOrder
    Tamtru_idXaphuong?: SortOrder
    Tamtru_quanhuyen?: SortOrder
    Tamtru_idQuanhuyen?: SortOrder
    Tamtru_tinhthanh?: SortOrder
    Tamtru_idTinhthanh?: SortOrder
    id_DMQuoctich?: SortOrder
    Quoctich?: SortOrder
    id_DMNghenghiep?: SortOrder
    Nghenghiep?: SortOrder
    id_DMDantoc?: SortOrder
    Dantoc?: SortOrder
    id_DMTongiao?: SortOrder
    Tongiao?: SortOrder
    Trangthai?: SortOrder
    Cogiadinh?: SortOrder
    Ngaygiotaohoso?: SortOrder
    id_Nhanvien?: SortOrder
    DCNuocngoai?: SortOrder
    id_ChiNhanh?: SortOrder
    id_BenhnhanMoi?: SortOrder
    id_BenhnhanMe?: SortOrder
    MahosoIVF?: SortOrder
    BNLH_Ten?: SortOrder
    BNLH_DiaChi?: SortOrder
    BNLH_SoDienThoai?: SortOrder
    BNLH_QuanHe?: SortOrder
    BNTT_Para?: SortOrder
    BNTT_TienSuBanThan?: SortOrder
    BNTT_TienSuGD?: SortOrder
    BNTT_SanhTaiBV?: SortOrder
    BNTT_DuocSinhTaiBV?: SortOrder
    BNTT_MaTiemngua?: SortOrder
    BNTT_ChoTrung?: SortOrder
    BNTT_NhanTrung_TenVo?: SortOrder
    BNTT_NhanTrung_NamsinhVo?: SortOrder
    BNTT_NhanTrung_TenChong?: SortOrder
    BNTT_NhanTrung_NamsinhChong?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_BenhnhanAvgOrderByAggregateInput = {
    Sync_Version?: SortOrder
  }

  export type PC_BenhnhanMaxOrderByAggregateInput = {
    id_Benhnhan?: SortOrder
    Hoten?: SortOrder
    Ten?: SortOrder
    Hotenkhongdau?: SortOrder
    Ngaythangnamsinh?: SortOrder
    Namsinh?: SortOrder
    Gioitinh?: SortOrder
    Noilamviec?: SortOrder
    SoCMND?: SortOrder
    Email?: SortOrder
    Dienthoai_didong?: SortOrder
    Tamtru_diachi?: SortOrder
    Tamtru_xaphuong?: SortOrder
    Tamtru_idXaphuong?: SortOrder
    Tamtru_quanhuyen?: SortOrder
    Tamtru_idQuanhuyen?: SortOrder
    Tamtru_tinhthanh?: SortOrder
    Tamtru_idTinhthanh?: SortOrder
    id_DMQuoctich?: SortOrder
    Quoctich?: SortOrder
    id_DMNghenghiep?: SortOrder
    Nghenghiep?: SortOrder
    id_DMDantoc?: SortOrder
    Dantoc?: SortOrder
    id_DMTongiao?: SortOrder
    Tongiao?: SortOrder
    Trangthai?: SortOrder
    Cogiadinh?: SortOrder
    Ngaygiotaohoso?: SortOrder
    id_Nhanvien?: SortOrder
    DCNuocngoai?: SortOrder
    id_ChiNhanh?: SortOrder
    id_BenhnhanMoi?: SortOrder
    id_BenhnhanMe?: SortOrder
    MahosoIVF?: SortOrder
    BNLH_Ten?: SortOrder
    BNLH_DiaChi?: SortOrder
    BNLH_SoDienThoai?: SortOrder
    BNLH_QuanHe?: SortOrder
    BNTT_Para?: SortOrder
    BNTT_TienSuBanThan?: SortOrder
    BNTT_TienSuGD?: SortOrder
    BNTT_SanhTaiBV?: SortOrder
    BNTT_DuocSinhTaiBV?: SortOrder
    BNTT_MaTiemngua?: SortOrder
    BNTT_ChoTrung?: SortOrder
    BNTT_NhanTrung_TenVo?: SortOrder
    BNTT_NhanTrung_NamsinhVo?: SortOrder
    BNTT_NhanTrung_TenChong?: SortOrder
    BNTT_NhanTrung_NamsinhChong?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_BenhnhanMinOrderByAggregateInput = {
    id_Benhnhan?: SortOrder
    Hoten?: SortOrder
    Ten?: SortOrder
    Hotenkhongdau?: SortOrder
    Ngaythangnamsinh?: SortOrder
    Namsinh?: SortOrder
    Gioitinh?: SortOrder
    Noilamviec?: SortOrder
    SoCMND?: SortOrder
    Email?: SortOrder
    Dienthoai_didong?: SortOrder
    Tamtru_diachi?: SortOrder
    Tamtru_xaphuong?: SortOrder
    Tamtru_idXaphuong?: SortOrder
    Tamtru_quanhuyen?: SortOrder
    Tamtru_idQuanhuyen?: SortOrder
    Tamtru_tinhthanh?: SortOrder
    Tamtru_idTinhthanh?: SortOrder
    id_DMQuoctich?: SortOrder
    Quoctich?: SortOrder
    id_DMNghenghiep?: SortOrder
    Nghenghiep?: SortOrder
    id_DMDantoc?: SortOrder
    Dantoc?: SortOrder
    id_DMTongiao?: SortOrder
    Tongiao?: SortOrder
    Trangthai?: SortOrder
    Cogiadinh?: SortOrder
    Ngaygiotaohoso?: SortOrder
    id_Nhanvien?: SortOrder
    DCNuocngoai?: SortOrder
    id_ChiNhanh?: SortOrder
    id_BenhnhanMoi?: SortOrder
    id_BenhnhanMe?: SortOrder
    MahosoIVF?: SortOrder
    BNLH_Ten?: SortOrder
    BNLH_DiaChi?: SortOrder
    BNLH_SoDienThoai?: SortOrder
    BNLH_QuanHe?: SortOrder
    BNTT_Para?: SortOrder
    BNTT_TienSuBanThan?: SortOrder
    BNTT_TienSuGD?: SortOrder
    BNTT_SanhTaiBV?: SortOrder
    BNTT_DuocSinhTaiBV?: SortOrder
    BNTT_MaTiemngua?: SortOrder
    BNTT_ChoTrung?: SortOrder
    BNTT_NhanTrung_TenVo?: SortOrder
    BNTT_NhanTrung_NamsinhVo?: SortOrder
    BNTT_NhanTrung_TenChong?: SortOrder
    BNTT_NhanTrung_NamsinhChong?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_BenhnhanSumOrderByAggregateInput = {
    Sync_Version?: SortOrder
  }

  export type PC_CustomerCountOrderByAggregateInput = {
    pcId?: SortOrder
    name?: SortOrder
    birthday?: SortOrder
    phoneNumber?: SortOrder
    gender?: SortOrder
    idCardNo?: SortOrder
    email?: SortOrder
    careerCode?: SortOrder
    nationalityCode?: SortOrder
    ethnicCode?: SortOrder
    countryCode?: SortOrder
    cityCode?: SortOrder
    districtCode?: SortOrder
    wardCode?: SortOrder
    homeAddress?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type PC_CustomerMaxOrderByAggregateInput = {
    pcId?: SortOrder
    name?: SortOrder
    birthday?: SortOrder
    phoneNumber?: SortOrder
    gender?: SortOrder
    idCardNo?: SortOrder
    email?: SortOrder
    careerCode?: SortOrder
    nationalityCode?: SortOrder
    ethnicCode?: SortOrder
    countryCode?: SortOrder
    cityCode?: SortOrder
    districtCode?: SortOrder
    wardCode?: SortOrder
    homeAddress?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type PC_CustomerMinOrderByAggregateInput = {
    pcId?: SortOrder
    name?: SortOrder
    birthday?: SortOrder
    phoneNumber?: SortOrder
    gender?: SortOrder
    idCardNo?: SortOrder
    email?: SortOrder
    careerCode?: SortOrder
    nationalityCode?: SortOrder
    ethnicCode?: SortOrder
    countryCode?: SortOrder
    cityCode?: SortOrder
    districtCode?: SortOrder
    wardCode?: SortOrder
    homeAddress?: SortOrder
    managerId?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type PC_HosoIVFCountOrderByAggregateInput = {
    id_HosoIVF?: SortOrder
    MasoHS?: SortOrder
    Namluutru?: SortOrder
    Sohientai?: SortOrder
    id_BN_Vo?: SortOrder
    id_BN_Chong?: SortOrder
    Trangthai?: SortOrder
    Ngaytao?: SortOrder
    id_nhanvien?: SortOrder
    id_Khoaphong?: SortOrder
    Phanloai?: SortOrder
    Ghichu?: SortOrder
    id_BSGuibenh?: SortOrder
    Hoten_BSGuibenh?: SortOrder
    id_ChiNhanh?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_HosoIVFAvgOrderByAggregateInput = {
    id_HosoIVF?: SortOrder
    Namluutru?: SortOrder
    Sohientai?: SortOrder
    Sync_Version?: SortOrder
  }

  export type PC_HosoIVFMaxOrderByAggregateInput = {
    id_HosoIVF?: SortOrder
    MasoHS?: SortOrder
    Namluutru?: SortOrder
    Sohientai?: SortOrder
    id_BN_Vo?: SortOrder
    id_BN_Chong?: SortOrder
    Trangthai?: SortOrder
    Ngaytao?: SortOrder
    id_nhanvien?: SortOrder
    id_Khoaphong?: SortOrder
    Phanloai?: SortOrder
    Ghichu?: SortOrder
    id_BSGuibenh?: SortOrder
    Hoten_BSGuibenh?: SortOrder
    id_ChiNhanh?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_HosoIVFMinOrderByAggregateInput = {
    id_HosoIVF?: SortOrder
    MasoHS?: SortOrder
    Namluutru?: SortOrder
    Sohientai?: SortOrder
    id_BN_Vo?: SortOrder
    id_BN_Chong?: SortOrder
    Trangthai?: SortOrder
    Ngaytao?: SortOrder
    id_nhanvien?: SortOrder
    id_Khoaphong?: SortOrder
    Phanloai?: SortOrder
    Ghichu?: SortOrder
    id_BSGuibenh?: SortOrder
    Hoten_BSGuibenh?: SortOrder
    id_ChiNhanh?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_HosoIVFSumOrderByAggregateInput = {
    id_HosoIVF?: SortOrder
    Namluutru?: SortOrder
    Sohientai?: SortOrder
    Sync_Version?: SortOrder
  }

  export type PC_ModuleCountOrderByAggregateInput = {
    id_Module?: SortOrder
    enumModule?: SortOrder
    TenModule?: SortOrder
    Loai_Ungdung?: SortOrder
  }

  export type PC_ModuleAvgOrderByAggregateInput = {
    id_Module?: SortOrder
  }

  export type PC_ModuleMaxOrderByAggregateInput = {
    id_Module?: SortOrder
    enumModule?: SortOrder
    TenModule?: SortOrder
    Loai_Ungdung?: SortOrder
  }

  export type PC_ModuleMinOrderByAggregateInput = {
    id_Module?: SortOrder
    enumModule?: SortOrder
    TenModule?: SortOrder
    Loai_Ungdung?: SortOrder
  }

  export type PC_ModuleSumOrderByAggregateInput = {
    id_Module?: SortOrder
  }

  export type PC_Module_NhomTKCountOrderByAggregateInput = {
    id_MDNhom?: SortOrder
    enum_Module?: SortOrder
    enum_NhomTK?: SortOrder
    Mod_Xem?: SortOrder
    Mod_Them?: SortOrder
    Mod_Sua?: SortOrder
    Mod_Xoa?: SortOrder
    Mod_Xuat?: SortOrder
    Ghichu?: SortOrder
    Loai_Ungdung?: SortOrder
  }

  export type PC_Module_NhomTKAvgOrderByAggregateInput = {
    id_MDNhom?: SortOrder
  }

  export type PC_Module_NhomTKMaxOrderByAggregateInput = {
    id_MDNhom?: SortOrder
    enum_Module?: SortOrder
    enum_NhomTK?: SortOrder
    Mod_Xem?: SortOrder
    Mod_Them?: SortOrder
    Mod_Sua?: SortOrder
    Mod_Xoa?: SortOrder
    Mod_Xuat?: SortOrder
    Ghichu?: SortOrder
    Loai_Ungdung?: SortOrder
  }

  export type PC_Module_NhomTKMinOrderByAggregateInput = {
    id_MDNhom?: SortOrder
    enum_Module?: SortOrder
    enum_NhomTK?: SortOrder
    Mod_Xem?: SortOrder
    Mod_Them?: SortOrder
    Mod_Sua?: SortOrder
    Mod_Xoa?: SortOrder
    Mod_Xuat?: SortOrder
    Ghichu?: SortOrder
    Loai_Ungdung?: SortOrder
  }

  export type PC_Module_NhomTKSumOrderByAggregateInput = {
    id_MDNhom?: SortOrder
  }

  export type PC_NhanvienCountOrderByAggregateInput = {
    ID_Nhanvien?: SortOrder
    Hoten?: SortOrder
    Ten?: SortOrder
    Ngaysinh?: SortOrder
    Namsinh?: SortOrder
    Gioitinh?: SortOrder
    Dienthoai?: SortOrder
    Email?: SortOrder
    ID_NhomNV?: SortOrder
    Ten_NhomNV?: SortOrder
    id_DMPhongban?: SortOrder
    Phongban?: SortOrder
    id_DMTonhom?: SortOrder
    Tonhom?: SortOrder
    ID_Chinhanh?: SortOrder
    Diachi?: SortOrder
    Trangthai?: SortOrder
    Ngayvaolam?: SortOrder
    AnhProfile?: SortOrder
    Sync_Version?: SortOrder
    Sync_End?: SortOrder
  }

  export type PC_NhanvienAvgOrderByAggregateInput = {
    Sync_Version?: SortOrder
  }

  export type PC_NhanvienMaxOrderByAggregateInput = {
    ID_Nhanvien?: SortOrder
    Hoten?: SortOrder
    Ten?: SortOrder
    Ngaysinh?: SortOrder
    Namsinh?: SortOrder
    Gioitinh?: SortOrder
    Dienthoai?: SortOrder
    Email?: SortOrder
    ID_NhomNV?: SortOrder
    Ten_NhomNV?: SortOrder
    id_DMPhongban?: SortOrder
    Phongban?: SortOrder
    id_DMTonhom?: SortOrder
    Tonhom?: SortOrder
    ID_Chinhanh?: SortOrder
    Diachi?: SortOrder
    Trangthai?: SortOrder
    Ngayvaolam?: SortOrder
    AnhProfile?: SortOrder
    Sync_Version?: SortOrder
    Sync_End?: SortOrder
  }

  export type PC_NhanvienMinOrderByAggregateInput = {
    ID_Nhanvien?: SortOrder
    Hoten?: SortOrder
    Ten?: SortOrder
    Ngaysinh?: SortOrder
    Namsinh?: SortOrder
    Gioitinh?: SortOrder
    Dienthoai?: SortOrder
    Email?: SortOrder
    ID_NhomNV?: SortOrder
    Ten_NhomNV?: SortOrder
    id_DMPhongban?: SortOrder
    Phongban?: SortOrder
    id_DMTonhom?: SortOrder
    Tonhom?: SortOrder
    ID_Chinhanh?: SortOrder
    Diachi?: SortOrder
    Trangthai?: SortOrder
    Ngayvaolam?: SortOrder
    AnhProfile?: SortOrder
    Sync_Version?: SortOrder
    Sync_End?: SortOrder
  }

  export type PC_NhanvienSumOrderByAggregateInput = {
    Sync_Version?: SortOrder
  }

  export type PC_Nhanvien_MediaCountOrderByAggregateInput = {
    id_Nhanvien?: SortOrder
    AnhProfile?: SortOrder
  }

  export type PC_Nhanvien_MediaMaxOrderByAggregateInput = {
    id_Nhanvien?: SortOrder
    AnhProfile?: SortOrder
  }

  export type PC_Nhanvien_MediaMinOrderByAggregateInput = {
    id_Nhanvien?: SortOrder
    AnhProfile?: SortOrder
  }

  export type PC_NhomTaikhoanCountOrderByAggregateInput = {
    id_NhomTK?: SortOrder
    enumNhom?: SortOrder
    TenNhom?: SortOrder
    Sudung?: SortOrder
  }

  export type PC_NhomTaikhoanAvgOrderByAggregateInput = {
    id_NhomTK?: SortOrder
  }

  export type PC_NhomTaikhoanMaxOrderByAggregateInput = {
    id_NhomTK?: SortOrder
    enumNhom?: SortOrder
    TenNhom?: SortOrder
    Sudung?: SortOrder
  }

  export type PC_NhomTaikhoanMinOrderByAggregateInput = {
    id_NhomTK?: SortOrder
    enumNhom?: SortOrder
    TenNhom?: SortOrder
    Sudung?: SortOrder
  }

  export type PC_NhomTaikhoanSumOrderByAggregateInput = {
    id_NhomTK?: SortOrder
  }

  export type PC_PhienbanCountOrderByAggregateInput = {
    ID_Phienban?: SortOrder
    Ten?: SortOrder
    Ngayphathanh?: SortOrder
    Duongdan?: SortOrder
    Kichhoat?: SortOrder
    Ghichu?: SortOrder
  }

  export type PC_PhienbanMaxOrderByAggregateInput = {
    ID_Phienban?: SortOrder
    Ten?: SortOrder
    Ngayphathanh?: SortOrder
    Duongdan?: SortOrder
    Kichhoat?: SortOrder
    Ghichu?: SortOrder
  }

  export type PC_PhienbanMinOrderByAggregateInput = {
    ID_Phienban?: SortOrder
    Ten?: SortOrder
    Ngayphathanh?: SortOrder
    Duongdan?: SortOrder
    Kichhoat?: SortOrder
    Ghichu?: SortOrder
  }

  export type PC_TaikhoanCountOrderByAggregateInput = {
    id_User?: SortOrder
    Password?: SortOrder
    Name?: SortOrder
    Email?: SortOrder
    Device_IMEI?: SortOrder
    Device_OS?: SortOrder
    Device_Version?: SortOrder
    DateCreate?: SortOrder
    DaDoiPass?: SortOrder
    Active?: SortOrder
    Disable?: SortOrder
    LastLogin?: SortOrder
    LastLogin_Web?: SortOrder
    Login_App?: SortOrder
    Login_Web?: SortOrder
    Avatar?: SortOrder
    ID_ChiNhanh?: SortOrder
  }

  export type PC_TaikhoanMaxOrderByAggregateInput = {
    id_User?: SortOrder
    Password?: SortOrder
    Name?: SortOrder
    Email?: SortOrder
    Device_IMEI?: SortOrder
    Device_OS?: SortOrder
    Device_Version?: SortOrder
    DateCreate?: SortOrder
    DaDoiPass?: SortOrder
    Active?: SortOrder
    Disable?: SortOrder
    LastLogin?: SortOrder
    LastLogin_Web?: SortOrder
    Login_App?: SortOrder
    Login_Web?: SortOrder
    Avatar?: SortOrder
    ID_ChiNhanh?: SortOrder
  }

  export type PC_TaikhoanMinOrderByAggregateInput = {
    id_User?: SortOrder
    Password?: SortOrder
    Name?: SortOrder
    Email?: SortOrder
    Device_IMEI?: SortOrder
    Device_OS?: SortOrder
    Device_Version?: SortOrder
    DateCreate?: SortOrder
    DaDoiPass?: SortOrder
    Active?: SortOrder
    Disable?: SortOrder
    LastLogin?: SortOrder
    LastLogin_Web?: SortOrder
    Login_App?: SortOrder
    Login_Web?: SortOrder
    Avatar?: SortOrder
    ID_ChiNhanh?: SortOrder
  }

  export type PC_Taikhoan_BangluongCountOrderByAggregateInput = {
    id?: SortOrder
    id_taikhoan?: SortOrder
    HotenNV?: SortOrder
    id_nhanvien_cap?: SortOrder
    ngaycap?: SortOrder
    sdt_nhan_pass?: SortOrder
    da_gui_sms?: SortOrder
    trangthai_sms?: SortOrder
    Pass_bill_luong?: SortOrder
  }

  export type PC_Taikhoan_BangluongAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PC_Taikhoan_BangluongMaxOrderByAggregateInput = {
    id?: SortOrder
    id_taikhoan?: SortOrder
    HotenNV?: SortOrder
    id_nhanvien_cap?: SortOrder
    ngaycap?: SortOrder
    sdt_nhan_pass?: SortOrder
    da_gui_sms?: SortOrder
    trangthai_sms?: SortOrder
    Pass_bill_luong?: SortOrder
  }

  export type PC_Taikhoan_BangluongMinOrderByAggregateInput = {
    id?: SortOrder
    id_taikhoan?: SortOrder
    HotenNV?: SortOrder
    id_nhanvien_cap?: SortOrder
    ngaycap?: SortOrder
    sdt_nhan_pass?: SortOrder
    da_gui_sms?: SortOrder
    trangthai_sms?: SortOrder
    Pass_bill_luong?: SortOrder
  }

  export type PC_Taikhoan_BangluongSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type PC_ThanhvienCountOrderByAggregateInput = {
    id_TV?: SortOrder
    enum_NhomTK?: SortOrder
    id_User?: SortOrder
  }

  export type PC_ThanhvienAvgOrderByAggregateInput = {
    id_TV?: SortOrder
  }

  export type PC_ThanhvienMaxOrderByAggregateInput = {
    id_TV?: SortOrder
    enum_NhomTK?: SortOrder
    id_User?: SortOrder
  }

  export type PC_ThanhvienMinOrderByAggregateInput = {
    id_TV?: SortOrder
    enum_NhomTK?: SortOrder
    id_User?: SortOrder
  }

  export type PC_ThanhvienSumOrderByAggregateInput = {
    id_TV?: SortOrder
  }

  export type PC_TheCapphatCountOrderByAggregateInput = {
    id_TheCapphat?: SortOrder
    id_Benhnhan?: SortOrder
    Hoten_Benhnhan?: SortOrder
    Ngaysinh?: SortOrder
    Ngaycapthe?: SortOrder
    id_NVCap?: SortOrder
    Hoten_NVCap?: SortOrder
    id_Dauthe?: SortOrder
    MaThe?: SortOrder
    Diem_Congthem?: SortOrder
    Lydo_Congdiem?: SortOrder
    id_NVCongdiem?: SortOrder
    Trangthai?: SortOrder
    LydoKhoa?: SortOrder
    Ngayhethan?: SortOrder
    DoituongSudung?: SortOrder
    TTNguoiNhanThe?: SortOrder
    CongdongBau?: SortOrder
    Nangcap_PCCARE?: SortOrder
    Ngaynang?: SortOrder
    id_ChiNhanh?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_TheCapphatAvgOrderByAggregateInput = {
    id_TheCapphat?: SortOrder
    Diem_Congthem?: SortOrder
    Sync_Version?: SortOrder
  }

  export type PC_TheCapphatMaxOrderByAggregateInput = {
    id_TheCapphat?: SortOrder
    id_Benhnhan?: SortOrder
    Hoten_Benhnhan?: SortOrder
    Ngaysinh?: SortOrder
    Ngaycapthe?: SortOrder
    id_NVCap?: SortOrder
    Hoten_NVCap?: SortOrder
    id_Dauthe?: SortOrder
    MaThe?: SortOrder
    Diem_Congthem?: SortOrder
    Lydo_Congdiem?: SortOrder
    id_NVCongdiem?: SortOrder
    Trangthai?: SortOrder
    LydoKhoa?: SortOrder
    Ngayhethan?: SortOrder
    DoituongSudung?: SortOrder
    TTNguoiNhanThe?: SortOrder
    CongdongBau?: SortOrder
    Nangcap_PCCARE?: SortOrder
    Ngaynang?: SortOrder
    id_ChiNhanh?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_TheCapphatMinOrderByAggregateInput = {
    id_TheCapphat?: SortOrder
    id_Benhnhan?: SortOrder
    Hoten_Benhnhan?: SortOrder
    Ngaysinh?: SortOrder
    Ngaycapthe?: SortOrder
    id_NVCap?: SortOrder
    Hoten_NVCap?: SortOrder
    id_Dauthe?: SortOrder
    MaThe?: SortOrder
    Diem_Congthem?: SortOrder
    Lydo_Congdiem?: SortOrder
    id_NVCongdiem?: SortOrder
    Trangthai?: SortOrder
    LydoKhoa?: SortOrder
    Ngayhethan?: SortOrder
    DoituongSudung?: SortOrder
    TTNguoiNhanThe?: SortOrder
    CongdongBau?: SortOrder
    Nangcap_PCCARE?: SortOrder
    Ngaynang?: SortOrder
    id_ChiNhanh?: SortOrder
    Sync_Version?: SortOrder
    Sync_Date?: SortOrder
    Sync_To_All?: SortOrder
    Sync_By_Branch?: SortOrder
  }

  export type PC_TheCapphatSumOrderByAggregateInput = {
    id_TheCapphat?: SortOrder
    Diem_Congthem?: SortOrder
    Sync_Version?: SortOrder
  }

  export type tbl_PhishingCountOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    username?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    description?: SortOrder
    branchID?: SortOrder
    branchName?: SortOrder
    deptID?: SortOrder
    deptName?: SortOrder
  }

  export type tbl_PhishingAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tbl_PhishingMaxOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    username?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    description?: SortOrder
    branchID?: SortOrder
    branchName?: SortOrder
    deptID?: SortOrder
    deptName?: SortOrder
  }

  export type tbl_PhishingMinOrderByAggregateInput = {
    id?: SortOrder
    userid?: SortOrder
    username?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    description?: SortOrder
    branchID?: SortOrder
    branchName?: SortOrder
    deptID?: SortOrder
    deptName?: SortOrder
  }

  export type tbl_PhishingSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type USER_PORTALCountOrderByAggregateInput = {
    PID?: SortOrder
    Name?: SortOrder
  }

  export type USER_PORTALMaxOrderByAggregateInput = {
    PID?: SortOrder
    Name?: SortOrder
  }

  export type USER_PORTALMinOrderByAggregateInput = {
    PID?: SortOrder
    Name?: SortOrder
  }

  export type WS_DMChinhanhCountOrderByAggregateInput = {
    ID_ChiNhanh?: SortOrder
    RSA_Public_Key?: SortOrder
    Url_WS?: SortOrder
    Ten_ChiNhanh?: SortOrder
    Sudung?: SortOrder
    Ghichu?: SortOrder
    Url_Webnoibo?: SortOrder
  }

  export type WS_DMChinhanhMaxOrderByAggregateInput = {
    ID_ChiNhanh?: SortOrder
    RSA_Public_Key?: SortOrder
    Url_WS?: SortOrder
    Ten_ChiNhanh?: SortOrder
    Sudung?: SortOrder
    Ghichu?: SortOrder
    Url_Webnoibo?: SortOrder
  }

  export type WS_DMChinhanhMinOrderByAggregateInput = {
    ID_ChiNhanh?: SortOrder
    RSA_Public_Key?: SortOrder
    Url_WS?: SortOrder
    Ten_ChiNhanh?: SortOrder
    Sudung?: SortOrder
    Ghichu?: SortOrder
    Url_Webnoibo?: SortOrder
  }

  export type WS_DMDonviCountOrderByAggregateInput = {
    id_DMDonvi?: SortOrder
    Ten_Donvi?: SortOrder
    id_Khoaphong?: SortOrder
    id_ChiNhanh?: SortOrder
    Sudung?: SortOrder
  }

  export type WS_DMDonviMaxOrderByAggregateInput = {
    id_DMDonvi?: SortOrder
    Ten_Donvi?: SortOrder
    id_Khoaphong?: SortOrder
    id_ChiNhanh?: SortOrder
    Sudung?: SortOrder
  }

  export type WS_DMDonviMinOrderByAggregateInput = {
    id_DMDonvi?: SortOrder
    Ten_Donvi?: SortOrder
    id_Khoaphong?: SortOrder
    id_ChiNhanh?: SortOrder
    Sudung?: SortOrder
  }

  export type WS_DMKhoaPhongId_KhoaphongID_ChiNhanhCompoundUniqueInput = {
    id_Khoaphong: string
    ID_ChiNhanh: string
  }

  export type WS_DMKhoaPhongCountOrderByAggregateInput = {
    id_Khoaphong?: SortOrder
    Ten?: SortOrder
    id_KPCha?: SortOrder
    ID_ChiNhanh?: SortOrder
    Ghichu?: SortOrder
    Sudung?: SortOrder
    VanHanh?: SortOrder
  }

  export type WS_DMKhoaPhongMaxOrderByAggregateInput = {
    id_Khoaphong?: SortOrder
    Ten?: SortOrder
    id_KPCha?: SortOrder
    ID_ChiNhanh?: SortOrder
    Ghichu?: SortOrder
    Sudung?: SortOrder
    VanHanh?: SortOrder
  }

  export type WS_DMKhoaPhongMinOrderByAggregateInput = {
    id_Khoaphong?: SortOrder
    Ten?: SortOrder
    id_KPCha?: SortOrder
    ID_ChiNhanh?: SortOrder
    Ghichu?: SortOrder
    Sudung?: SortOrder
    VanHanh?: SortOrder
  }

  export type WS_DMNhomTochucId_DMNhomTochucId_DMChinhanhCompoundUniqueInput = {
    id_DMNhomTochuc: string
    id_DMChinhanh: string
  }

  export type WS_DMNhomTochucCountOrderByAggregateInput = {
    id_DMNhomTochuc?: SortOrder
    id_DMChinhanh?: SortOrder
    Ten?: SortOrder
    Ghichu?: SortOrder
    Sudung?: SortOrder
  }

  export type WS_DMNhomTochucMaxOrderByAggregateInput = {
    id_DMNhomTochuc?: SortOrder
    id_DMChinhanh?: SortOrder
    Ten?: SortOrder
    Ghichu?: SortOrder
    Sudung?: SortOrder
  }

  export type WS_DMNhomTochucMinOrderByAggregateInput = {
    id_DMNhomTochuc?: SortOrder
    id_DMChinhanh?: SortOrder
    Ten?: SortOrder
    Ghichu?: SortOrder
    Sudung?: SortOrder
  }

  export type WS_LogCountOrderByAggregateInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrder
    Ngaygio?: SortOrder
    ResponseCode?: SortOrder
    UserHostName?: SortOrder
    UserHostAddress?: SortOrder
    QueryString?: SortOrder
    HttpMethod?: SortOrder
    ClientBrowser?: SortOrder
  }

  export type WS_LogAvgOrderByAggregateInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrder
  }

  export type WS_LogMaxOrderByAggregateInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrder
    Ngaygio?: SortOrder
    ResponseCode?: SortOrder
    UserHostName?: SortOrder
    UserHostAddress?: SortOrder
    QueryString?: SortOrder
    HttpMethod?: SortOrder
    ClientBrowser?: SortOrder
  }

  export type WS_LogMinOrderByAggregateInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrder
    Ngaygio?: SortOrder
    ResponseCode?: SortOrder
    UserHostName?: SortOrder
    UserHostAddress?: SortOrder
    QueryString?: SortOrder
    HttpMethod?: SortOrder
    ClientBrowser?: SortOrder
  }

  export type WS_LogSumOrderByAggregateInput = {
    id_Log?: SortOrder
    id_TaiKhoan?: SortOrder
  }

  export type WS_TaikhoanCountOrderByAggregateInput = {
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrder
    Matkhau?: SortOrder
    ID_ChiNhanh?: SortOrder
    NgaygioTao?: SortOrder
    NgaygioHetHan?: SortOrder
    SuDung?: SortOrder
    GhiChu?: SortOrder
  }

  export type WS_TaikhoanAvgOrderByAggregateInput = {
    id_TaiKhoan?: SortOrder
  }

  export type WS_TaikhoanMaxOrderByAggregateInput = {
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrder
    Matkhau?: SortOrder
    ID_ChiNhanh?: SortOrder
    NgaygioTao?: SortOrder
    NgaygioHetHan?: SortOrder
    SuDung?: SortOrder
    GhiChu?: SortOrder
  }

  export type WS_TaikhoanMinOrderByAggregateInput = {
    id_TaiKhoan?: SortOrder
    Taikhoan?: SortOrder
    Matkhau?: SortOrder
    ID_ChiNhanh?: SortOrder
    NgaygioTao?: SortOrder
    NgaygioHetHan?: SortOrder
    SuDung?: SortOrder
    GhiChu?: SortOrder
  }

  export type WS_TaikhoanSumOrderByAggregateInput = {
    id_TaiKhoan?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBytesFieldUpdateOperationsInput = {
    set?: Buffer | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBytesNullableFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | null
    notIn?: Buffer[] | null
    not?: NestedBytesNullableFilter<$PrismaModel> | Buffer | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBytesNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Buffer | BytesFieldRefInput<$PrismaModel> | null
    in?: Buffer[] | null
    notIn?: Buffer[] | null
    not?: NestedBytesNullableWithAggregatesFilter<$PrismaModel> | Buffer | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBytesNullableFilter<$PrismaModel>
    _max?: NestedBytesNullableFilter<$PrismaModel>
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CashierDataDefaultArgs instead
     */
    export type CashierDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CashierDataDefaultArgs<ExtArgs>
    /**
     * @deprecated Use DrugRevenueDataDefaultArgs instead
     */
    export type DrugRevenueDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = DrugRevenueDataDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_BangluongDefaultArgs instead
     */
    export type PC_BangluongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_BangluongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_BantinDefaultArgs instead
     */
    export type PC_BantinArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_BantinDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_BenhnhanDefaultArgs instead
     */
    export type PC_BenhnhanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_BenhnhanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_CustomerDefaultArgs instead
     */
    export type PC_CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_CustomerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_HosoIVFDefaultArgs instead
     */
    export type PC_HosoIVFArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_HosoIVFDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_ModuleDefaultArgs instead
     */
    export type PC_ModuleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_ModuleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_Module_NhomTKDefaultArgs instead
     */
    export type PC_Module_NhomTKArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_Module_NhomTKDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_NhanvienDefaultArgs instead
     */
    export type PC_NhanvienArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_NhanvienDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_Nhanvien_MediaDefaultArgs instead
     */
    export type PC_Nhanvien_MediaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_Nhanvien_MediaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_NhomTaikhoanDefaultArgs instead
     */
    export type PC_NhomTaikhoanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_NhomTaikhoanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_PhienbanDefaultArgs instead
     */
    export type PC_PhienbanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_PhienbanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_TaikhoanDefaultArgs instead
     */
    export type PC_TaikhoanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_TaikhoanDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_Taikhoan_BangluongDefaultArgs instead
     */
    export type PC_Taikhoan_BangluongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_Taikhoan_BangluongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_ThanhvienDefaultArgs instead
     */
    export type PC_ThanhvienArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_ThanhvienDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PC_TheCapphatDefaultArgs instead
     */
    export type PC_TheCapphatArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PC_TheCapphatDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tbl_PhishingDefaultArgs instead
     */
    export type tbl_PhishingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tbl_PhishingDefaultArgs<ExtArgs>
    /**
     * @deprecated Use USER_PORTALDefaultArgs instead
     */
    export type USER_PORTALArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = USER_PORTALDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WS_DMChinhanhDefaultArgs instead
     */
    export type WS_DMChinhanhArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WS_DMChinhanhDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WS_DMDonviDefaultArgs instead
     */
    export type WS_DMDonviArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WS_DMDonviDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WS_DMKhoaPhongDefaultArgs instead
     */
    export type WS_DMKhoaPhongArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WS_DMKhoaPhongDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WS_DMNhomTochucDefaultArgs instead
     */
    export type WS_DMNhomTochucArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WS_DMNhomTochucDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WS_LogDefaultArgs instead
     */
    export type WS_LogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WS_LogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WS_TaikhoanDefaultArgs instead
     */
    export type WS_TaikhoanArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WS_TaikhoanDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}